{"version":3,"sources":["webpack://html5-chess/./frontend/src/Advisor.ts","webpack://html5-chess/./frontend/src/Boards.ts","webpack://html5-chess/./frontend/src/Cannon.ts","webpack://html5-chess/./frontend/src/Cavalry.ts","webpack://html5-chess/./frontend/src/Chariot.ts","webpack://html5-chess/./frontend/src/ChessPiece.ts","webpack://html5-chess/./frontend/src/FootSoldier.ts","webpack://html5-chess/./frontend/src/Game.ts","webpack://html5-chess/./frontend/src/General.ts","webpack://html5-chess/./frontend/src/WarElephant.ts","webpack://html5-chess/./frontend/src/frontend-utils.ts","webpack://html5-chess/./src/Util.ts","webpack://html5-chess/webpack/bootstrap","webpack://html5-chess/webpack/startup"],"names":["extendStatics","__extends","this","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","__importDefault","mod","__esModule","defineProperty","exports","value","BlackAdvisor","RedAdvisor","Util_1","ChessPiece_1","frontend_utils_1","Advisor","_super","point","board","color","PieceRole","canMove","dest","x","x_coor","y","y_coor","Math","abs","checkSameColorPieceInPoint","Piece","_this","PlayerColor","RED","elem","src","setPiece","movablePoints","moveable_points","concat","checkPeriphery","X_coor","getX","Y_coor","getY","front_left","getPointFromCoordinates","front_right","back_left","Point","back_right","err","default","trace","console","error","movable_points_in_this_column","log","isValidGeneralPosition","push","getPiece","targetPoint","BLACK","Board","game","ratio","side_length","SIDE_LENGTH","target_coordinate","intersections","i","j","movePieceFromSrcToDest","piece","point_source","point_dest","moveToPoint","validateXCoordinate","validateYCoordinate","getCoordinateFromElemId","id","split_arr","split","coor_x","coor_y","parseInt","getRowFromYCoordinate","row","getColFromXCoordinate","col","getUcciString","ret_string","empty_points","_i","row_arr_1","length","piece_role","detectZoom","undefined","window","devicePixelRatio","outerWidth","innerWidth","round","render","$","css","on","fitSize","document","BlackCannon","RedCannon","Cannon","isValidCannonPosition","checkRow","checkColumn","checkShellingRowLHS","checkShellingRowRHS","checkShellingColUpper","checkShellingColLower","piece_row","cornerstone_flag","shellable_points_in_this_column","index","cur_idx","piece_col","cornerstone_point","start_flag","end_flag","isFriendly","movable_points_in_this_row","RedCavalry","BlackCavalry","Cavalry","isValidPosition","checkMoves","front_left_upper","front_left_upper_block","front_left_lower","front_left_lower_block","front_right_upper","front_right_upper_block","front_right_lower","front_right_lower_block","back_left_upper","back_left_upper_block","back_left_lower","back_left_lower_block","back_right_upper","back_right_upper_block","back_right_lower","back_right_lower_block","e","BlackChariot","RedChariot","Chariot","isValidChariotPosition","enumerable","get","General","WarElephant","Soldier","role","piece_role_dict","active","toUpperCase","toLowerCase","createElement","state","preventDefault","listenerManager","attachSelectPieceListener","active_piece","movable_points","getCurrentPlayer","forEach","setTimeout","attachMoveToGridListener","target","tagName","parentNode","parentElement","target_point","includes","hasPiece","alert","removeMoveToGridListener","innerHTML","next_x_coor","next_y_coor","alternatePlayer","off","getElement","removeChild","appendChild","getRole","getColor","getTargetPointCoordinate","getTargetPointXCoordinate","getTargetPointYCoordinate","isEnemy","append","addClass","toString","adjustResize","screen","width","getChessBoardSize","getZoomedRatio","BlackFootSoldier","RedFootSoldier","FootSoldier","isValidFootSoldierPosition","afterLanding","beforeLanding","front","movable_points_before_landing","left","right","movable_points_after_landing","Boards_1","Chariot_1","General_1","Cannon_1","FootSoldier_1","Advisor_1","WarElephant_1","Cavalry_1","Game","currentPlayer","RedGeneral","BlackGeneral","red_ju_one","red_ju_two","black_ju_one","black_ju_two","red_cannon_one","red_cannon_two","black_cannon_one","black_cannon_two","red_bing_one","red_bing_two","red_bing_three","red_bing_four","red_bing_five","black_zu_one","black_zu_two","black_zu_three","black_zu_four","black_zu_five","red_advisor_one","red_advisor_two","black_advisor_one","black_advisor_two","black_elephant_one","BlackWarElephant","black_elephant_two","red_elephant_one","RedWarElephant","red_elephant_two","black_calvalry_one","black_calvalry_two","red_calvalry_one","red_calvalry_two","back","front_left_block_pos","front_right_block_pos","back_left_block_pos","back_right_block_pos","SIDE_LENGTH_vw","chessboard","updateElement","newCol","newRow","grid_div","oldCol","oldRow","remove","className","when","then","__spreadArrays","s","il","arguments","r","k","a","jl","Log","msg","apply","Date","toLocaleString","info","warn","test","__webpack_module_cache__","__webpack_require__","moduleId","module","__webpack_modules__"],"mappings":"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","file":"bundle.js","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BlackAdvisor = exports.RedAdvisor = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\nvar Advisor = /** @class */ (function (_super) {\r\n    __extends(Advisor, _super);\r\n    function Advisor(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.Advisor, color) || this;\r\n    }\r\n    Advisor.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the dest is not inside of the \"田\" shaped space of the board\r\n        //Returns false.\r\n        // if (!this.isValidGeneralPosition(x, y))\r\n        //     return false;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    return Advisor;\r\n}(ChessPiece_1.Piece));\r\nvar RedAdvisor = /** @class */ (function (_super) {\r\n    __extends(RedAdvisor, _super);\r\n    function RedAdvisor(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.RED) || this;\r\n        // this.piece_role = this.piece_role.substring(0, 1).toUpperCase();\r\n        _this.elem.src = '../img/pieces/red-shi.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    RedAdvisor.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        moveable_points = moveable_points.concat(this.checkPeriphery());\r\n        return moveable_points;\r\n    };\r\n    RedAdvisor.prototype.checkPeriphery = function () {\r\n        var X_coor = this.point.getX();\r\n        var Y_coor = this.point.getY();\r\n        var front_left = this.board.getPointFromCoordinates(X_coor - 1, Y_coor - 1);\r\n        var front_right = this.board.getPointFromCoordinates(X_coor + 1, Y_coor - 1); // HACK: tabnine generated those  '+' signs !\r\n        var back_left = new frontend_utils_1.Point(-1, -1); // WHY: 如果不建一个点，try catch里面的会是局部变量\r\n        var back_right = new frontend_utils_1.Point(-1, -1);\r\n        try {\r\n            back_left = this.board.getPointFromCoordinates(X_coor - 1, Y_coor + 1); //out of bound err\r\n            back_right = this.board.getPointFromCoordinates(X_coor + 1, Y_coor + 1);\r\n        }\r\n        catch (err) {\r\n            Util_1.default.trace(\"出错！\");\r\n            console.error(err);\r\n        }\r\n        var movable_points_in_this_column = [];\r\n        //  __ __   \r\n        // |__|__|\r\n        // |__|__|\r\n        // \r\n        console.log(\"++++++++++++++++++++++ debug +++++++++++++++++++++++\");\r\n        // 面前的格子\r\n        if (front_left && this.isValidGeneralPosition(front_left)) {\r\n            movable_points_in_this_column.push(front_left);\r\n        }\r\n        // \r\n        if (front_right && this.isValidGeneralPosition(front_right)) {\r\n            movable_points_in_this_column.push(front_right);\r\n        }\r\n        if (back_left && this.isValidGeneralPosition(back_left)) {\r\n            movable_points_in_this_column.push(back_left);\r\n        }\r\n        if (back_right && this.isValidGeneralPosition(back_right)) {\r\n            console.log(back_right.getPiece());\r\n            movable_points_in_this_column.push(back_right);\r\n        }\r\n        return movable_points_in_this_column;\r\n    };\r\n    RedAdvisor.prototype.isValidGeneralPosition = function (targetPoint) {\r\n        console.log('isValidGeneralPosition +++++++++++');\r\n        console.log(targetPoint);\r\n        console.log(targetPoint.getX());\r\n        console.log(targetPoint.getY());\r\n        // 外层if表示田字的横坐标范围\r\n        if (targetPoint.getX() >= 4 && targetPoint.getX() <= 6) {\r\n            // 内层是纵坐标范围\r\n            if (targetPoint.getY() >= 8 && targetPoint.getY() <= 10) {\r\n                return true;\r\n            }\r\n        }\r\n        // 以上条件不满足，则return false.\r\n        return false;\r\n    };\r\n    return RedAdvisor;\r\n}(Advisor));\r\nexports.RedAdvisor = RedAdvisor;\r\nvar BlackAdvisor = /** @class */ (function (_super) {\r\n    __extends(BlackAdvisor, _super);\r\n    function BlackAdvisor(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.BLACK) || this;\r\n        // this.piece_role = this.piece_role.substring(0, 1).toLowerCase();\r\n        _this.elem.src = '../img/pieces/black-shi.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    BlackAdvisor.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        moveable_points = moveable_points.concat(this.checkPeriphery());\r\n        return moveable_points;\r\n    };\r\n    BlackAdvisor.prototype.checkPeriphery = function () {\r\n        var X_coor = this.point.getX();\r\n        var Y_coor = this.point.getY();\r\n        var front_left = this.board.getPointFromCoordinates(X_coor + 1, Y_coor + 1);\r\n        var front_right = this.board.getPointFromCoordinates(X_coor - 1, Y_coor + 1); // HACK: tabnine generated those  '+' signs !\r\n        var back_left = new frontend_utils_1.Point(-1, -1); // WHY: 如果不建一个点，try catch里面的会是局部变量\r\n        var back_right = new frontend_utils_1.Point(-1, -1);\r\n        try {\r\n            back_left = this.board.getPointFromCoordinates(X_coor + 1, Y_coor - 1); //out of bound err\r\n            back_right = this.board.getPointFromCoordinates(X_coor - 1, Y_coor - 1);\r\n        }\r\n        catch (err) {\r\n            Util_1.default.trace(\"出错！\");\r\n            console.error(err);\r\n        }\r\n        var movable_points_in_this_column = [];\r\n        //  __ __   \r\n        // |__|__|\r\n        // |__|__|\r\n        // \r\n        console.log(\"++++++++++++++++++++++ debug +++++++++++++++++++++++\");\r\n        // 面前的格子\r\n        if (front_left && this.isValidGeneralPosition(front_left)) {\r\n            movable_points_in_this_column.push(front_left);\r\n        }\r\n        // \r\n        if (front_right && this.isValidGeneralPosition(front_right)) {\r\n            movable_points_in_this_column.push(front_right);\r\n        }\r\n        if (back_left && this.isValidGeneralPosition(back_left)) {\r\n            movable_points_in_this_column.push(back_left);\r\n        }\r\n        if (back_right && this.isValidGeneralPosition(back_right)) {\r\n            console.log(back_right.getPiece());\r\n            movable_points_in_this_column.push(back_right);\r\n        }\r\n        return movable_points_in_this_column;\r\n    };\r\n    BlackAdvisor.prototype.isValidGeneralPosition = function (targetPoint) {\r\n        console.log('isValidGeneralPosition +++++++++++');\r\n        console.log(targetPoint);\r\n        console.log(targetPoint.getX());\r\n        console.log(targetPoint.getY());\r\n        // 外层if表示田字的横坐标范围\r\n        if (targetPoint.getX() >= 4 && targetPoint.getX() <= 6) {\r\n            // 内层是纵坐标范围\r\n            if (targetPoint.getY() >= 1 && targetPoint.getY() <= 3) {\r\n                return true;\r\n            }\r\n        }\r\n        // 以上条件不满足，则return false.\r\n        return false;\r\n    };\r\n    return BlackAdvisor;\r\n}(Advisor));\r\nexports.BlackAdvisor = BlackAdvisor;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Board = void 0;\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\n// 棋盘\r\nvar Board = /** @class */ (function () {\r\n    function Board(game) {\r\n        // 游戏和棋盘要耦合\r\n        this.game = game;\r\n        // 缩放相关\r\n        this.ratio = 100; //default ratio 100%\r\n        this.side_length = this.ratio * 0.01 * frontend_utils_1.SIDE_LENGTH;\r\n        // 玩家选择的下一个位置\r\n        this.target_coordinate = [-1, -1];\r\n        //A.K.A points.\r\n        this.intersections = new Array();\r\n        for (var i = 0; i < 9; i++) {\r\n            this.intersections[i] = [];\r\n            for (var j = 0; j < 10; j++) {\r\n                // 1 2 3 4 5 6 7 8 9\r\n                // 2\r\n                // 3\r\n                // 4\r\n                // 5\r\n                // 6\r\n                // 7\r\n                // 8\r\n                // 9\r\n                // 10\r\n                this.intersections[i][j] = (new frontend_utils_1.Point((i + 1), (j + 1)));\r\n            }\r\n        }\r\n    }\r\n    //invokes functions in Piece and Point simutaniously\r\n    Board.prototype.movePieceFromSrcToDest = function (piece, point_source, point_dest) {\r\n        point_source.setPiece(null); //the piece is moving out to another grid, so it's set to null.\r\n        piece.moveToPoint(point_dest); // the piece now knows which new place it's in\r\n        point_dest.setPiece(piece); // the point the piece moves in knows which piece it's receiving.\r\n    };\r\n    //get a specific point from coordinates\r\n    Board.prototype.getPointFromCoordinates = function (x_coor, y_coor) {\r\n        if (!this.validateXCoordinate(x_coor) || !this.validateYCoordinate(y_coor))\r\n            return null;\r\n        return this.intersections[x_coor - 1][y_coor - 1];\r\n    };\r\n    // 从HTML Element的ID中获取坐标\r\n    Board.prototype.getCoordinateFromElemId = function (id) {\r\n        // grid_div_5_6\r\n        console.log(id);\r\n        var split_arr = id.split('_');\r\n        var coor_x = split_arr[2];\r\n        var coor_y = split_arr[3];\r\n        return [parseInt(coor_x), parseInt(coor_y)];\r\n    };\r\n    // Check for valid x coordinate\r\n    Board.prototype.validateXCoordinate = function (x) {\r\n        return x >= 1 && x <= 9;\r\n    };\r\n    // Check for valid y coordinate\r\n    Board.prototype.validateYCoordinate = function (y) {\r\n        return y >= 1 && y <= 10;\r\n    };\r\n    //get a row from y_coor(nth row)\r\n    Board.prototype.getRowFromYCoordinate = function (y_coor) {\r\n        var row = [];\r\n        for (var i = 0; i < 9; i++) {\r\n            row.push(this.intersections[i][y_coor - 1]);\r\n        }\r\n        return row;\r\n    };\r\n    //get a column from x_coor(nth col)\r\n    Board.prototype.getColFromXCoordinate = function (x_coor) {\r\n        var col = [];\r\n        for (var j = 0; j < 10; j++) {\r\n            col.push(this.intersections[x_coor - 1][j]);\r\n        }\r\n        return col;\r\n    };\r\n    Board.prototype.getUcciString = function () {\r\n        console.log(\"in getUcciString() +++++++++++++++++=========\");\r\n        var ret_string = \"\";\r\n        for (var row = 0; row <= 9; row++) { // 10行\r\n            var row_arr = this.getRowFromYCoordinate(row + 1);\r\n            var empty_points = 0;\r\n            for (var _i = 0, row_arr_1 = row_arr; _i < row_arr_1.length; _i++) {\r\n                var point = row_arr_1[_i];\r\n                if (point.piece) {\r\n                    if (empty_points != 0) {\r\n                        ret_string += empty_points + '';\r\n                        empty_points = 0;\r\n                    }\r\n                    ret_string += point.piece.piece_role;\r\n                }\r\n                else {\r\n                    empty_points++;\r\n                }\r\n            }\r\n            if (row != 9) {\r\n                if (empty_points != 0) {\r\n                    ret_string += empty_points + '';\r\n                }\r\n                ret_string += '/';\r\n            }\r\n        }\r\n        // \r\n        console.log(ret_string);\r\n        return ret_string;\r\n    };\r\n    Board.prototype.detectZoom = function () {\r\n        var ratio = 0;\r\n        if (window.devicePixelRatio !== undefined) {\r\n            ratio = window.devicePixelRatio;\r\n        }\r\n        // ???? not working, why?\r\n        // else if (~ua.indexOf('msie')) {\r\n        //     if (screen.deviceXDPI && screen.logicalXDPI) {\r\n        //         ratio = screen.deviceXDPI / screen.logicalXDPI;\r\n        //     }\r\n        // }\r\n        else if (window.outerWidth !== undefined && window.innerWidth !== undefined) {\r\n            ratio = window.outerWidth / window.innerWidth;\r\n        }\r\n        if (ratio) {\r\n            ratio = Math.round(ratio * 100);\r\n        }\r\n        this.ratio = ratio;\r\n    };\r\n    Board.prototype.render = function () {\r\n        var board = $('#board');\r\n        // $(board).css('height', 'fit-content');\r\n        $(\"#id_chessboard\").css(\"position\", \"fixed\");\r\n        $(\"#id_chessboard\").css(\"max-height\", '100vh');\r\n        // $(\"#board\").css(\"left\", \"0px\");\r\n        $(\"#id_chessboard\").css(\"margin\", \"0\");\r\n        $(\"#id_chessboard\").css(\"padding\", \"0vw\");\r\n        board.css('margin-left', 'auto');\r\n        board.css('margin-right', 'auto');\r\n        board.css('padding', 0);\r\n        //for testing purposes, added some color to the background\r\n        $('.className_grid_div').css('background-color', 'rgba(255,0,0,0.3)');\r\n        //fits the size when resizing\r\n        $(window).on('resize', function () {\r\n            frontend_utils_1.fitSize();\r\n        });\r\n        //fixed the size issue upon entry\r\n        $(document).on('ready', function () {\r\n            frontend_utils_1.fitSize();\r\n        });\r\n        $(\"#board\").css(\"max-width\", \"100vh\");\r\n    };\r\n    return Board;\r\n}());\r\nexports.Board = Board;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BlackCannon = exports.RedCannon = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\nvar Cannon = /** @class */ (function (_super) {\r\n    __extends(Cannon, _super);\r\n    function Cannon(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.Cannon, color) || this;\r\n    }\r\n    /**\r\n     *\r\n     * @param x\r\n     * @param y\r\n     * @returns boolean to indicate if the pass in coordinate is valid general position\r\n     */\r\n    Cannon.prototype.isValidCannonPosition = function (x, y) {\r\n        return (y >= 0) && (y <= 10) && (x >= 0) && (x <= 9);\r\n    };\r\n    Cannon.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the dest is not inside of the \"田\" shaped space of the board\r\n        //Returns false.\r\n        if (!this.isValidCannonPosition(x, y))\r\n            return false;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    Cannon.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        moveable_points = moveable_points.concat(this.checkRow());\r\n        moveable_points = moveable_points.concat(this.checkColumn());\r\n        moveable_points = moveable_points.concat(this.checkShellingRowLHS()); // HACK: reversed index trasversing\r\n        moveable_points = moveable_points.concat(this.checkShellingRowRHS());\r\n        moveable_points = moveable_points.concat(this.checkShellingColUpper()); // HACK: reversed index trasversing\r\n        moveable_points = moveable_points.concat(this.checkShellingColLower());\r\n        return moveable_points;\r\n    };\r\n    // 检查可以炮轰的地方\r\n    Cannon.prototype.checkShellingRowLHS = function () {\r\n        Util_1.default.trace(\"in checkShellingRowLHS()\");\r\n        Util_1.default.trace(\"Cannon\");\r\n        var X_coor = this.point.x_coor;\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var cornerstone_flag = false;\r\n        var shellable_points_in_this_column = [];\r\n        for (var index in piece_row) {\r\n            var cur_idx = (8 - parseInt(index)); // 0 ~ 8\r\n            console.log(cur_idx);\r\n            if (cur_idx + 1 < X_coor) {\r\n                Util_1.default.trace(\"正在检测该棋子的左侧\");\r\n                // 有任何一方的棋子\r\n                if (piece_row[cur_idx].piece) {\r\n                    // 有了炮台，下一个有棋子的格子就是可以走的\r\n                    if (cornerstone_flag) {\r\n                        shellable_points_in_this_column.push(piece_row[cur_idx]);\r\n                        break; //只加一个点进去就结束了\r\n                    }\r\n                    // 没有炮台，这就是炮台\r\n                    else if (!cornerstone_flag) {\r\n                        cornerstone_flag = true; // the index is not added, but the next one is.\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return shellable_points_in_this_column;\r\n    };\r\n    // 检查可以炮轰的地方 RHS = right hand side \r\n    Cannon.prototype.checkShellingRowRHS = function () {\r\n        Util_1.default.trace(\"in checkShelling()\");\r\n        Util_1.default.trace(\"Cannon\");\r\n        // let Y_coor = this.point.y_coor\r\n        var X_coor = this.point.x_coor;\r\n        // let piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var cornerstone_flag = false;\r\n        var target_point_flag = -1;\r\n        var shellable_points_in_this_column = [];\r\n        for (var index in piece_row) {\r\n            if (parseInt(index) + 1 > X_coor) {\r\n                Util_1.default.trace(\"正在检测该棋子的右侧\");\r\n                // 有任何一方的棋子\r\n                if (piece_row[index].piece) {\r\n                    // 有了炮台，下一个有棋子的格子就是可以走的\r\n                    if (cornerstone_flag) {\r\n                        shellable_points_in_this_column.push(piece_row[index]);\r\n                        break; //只加一个点进去就结束了\r\n                    }\r\n                    // 没有炮台，这就是炮台\r\n                    else if (!cornerstone_flag) {\r\n                        cornerstone_flag = true; // the index is not added, but the next one is.\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return shellable_points_in_this_column;\r\n    };\r\n    // 检查可以炮轰的地方\r\n    Cannon.prototype.checkShellingColUpper = function () {\r\n        Util_1.default.trace(\"in checkShellingColUpper()\");\r\n        Util_1.default.trace(\"Cannon\");\r\n        var Y_coor = this.point.y_coor;\r\n        var piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var cornerstone_flag = false;\r\n        var cornerstone_point = new frontend_utils_1.Point(-1, -1);\r\n        var shellable_points_in_this_column = [];\r\n        for (var index in piece_col) {\r\n            var cur_idx = 9 - parseInt(index); // 0 ~ 9\r\n            if (cur_idx + 1 < Y_coor) {\r\n                Util_1.default.trace(\"正在检测该棋子的上方\");\r\n                // 有任何一方的棋子\r\n                if (piece_col[cur_idx].piece) {\r\n                    console.log('piece_col[index]piece_col[index] ===================++');\r\n                    console.log(piece_col[cur_idx]);\r\n                    // 有了炮台，下一个有棋子的格子就是可以走的\r\n                    if (cornerstone_flag) {\r\n                        Util_1.default.trace(\"有炮台了，添加以下点：\");\r\n                        Util_1.default.trace(piece_col[cur_idx]);\r\n                        shellable_points_in_this_column.push(piece_col[cur_idx]);\r\n                        break; //只加一个点进去就结束了\r\n                    }\r\n                    // 没有炮台，这就是炮台\r\n                    else if (!cornerstone_flag) {\r\n                        Util_1.default.trace(\"无炮台\");\r\n                        cornerstone_point = piece_col[cur_idx];\r\n                        console.log(\"炮台找到了！：\");\r\n                        console.log(cornerstone_point);\r\n                        cornerstone_flag = true; // the index is not added, but the next one is.\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return shellable_points_in_this_column;\r\n    };\r\n    Cannon.prototype.checkShellingColLower = function () {\r\n        var Y_coor = this.point.y_coor;\r\n        // let X_coor = this.point.x_coor\r\n        var piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        // let piece_row = this.board.getRowFromYCoordinate(this.point.y_coor);//Checks the points in this row\r\n        var cornerstone_flag = false;\r\n        var cornerstone_point = new frontend_utils_1.Point(-1, -1);\r\n        var target_point_flag = -1;\r\n        var shellable_points_in_this_column = [];\r\n        for (var index in piece_col) {\r\n            // HACK 注意 coordinate 都是加过 1 的\r\n            if (parseInt(index) + 1 > Y_coor) {\r\n                Util_1.default.trace(\"正在检测该棋子的下方\");\r\n                // 检测到该点内有任何一方的棋子\r\n                if (piece_col[index].piece) {\r\n                    console.log('piece_col[index] ===================++');\r\n                    console.log(piece_col[index]);\r\n                    console.log(\"cornerstone_flag:\");\r\n                    console.log(cornerstone_flag);\r\n                    // 有了炮台，下一个有棋子的格子就是可以走的\r\n                    if (cornerstone_flag == true) {\r\n                        Util_1.default.trace(\"有炮台了，正在添加以下点：\");\r\n                        Util_1.default.trace(piece_col[index]);\r\n                        shellable_points_in_this_column.push(piece_col[index]);\r\n                        break; //只加一个点进去就结束了\r\n                    }\r\n                    // 没有炮台，这就是炮台\r\n                    else if (!cornerstone_flag) {\r\n                        cornerstone_flag = true; // the index is not added, but the next that has a piece is.\\\r\n                        Util_1.default.trace(\"之前无炮台，现在有炮台了:\");\r\n                        cornerstone_point = piece_col[index];\r\n                        console.log(cornerstone_flag);\r\n                        console.log(cornerstone_point);\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return shellable_points_in_this_column;\r\n    };\r\n    //returns the grids that General can go in a column\r\n    Cannon.prototype.checkColumn = function () {\r\n        Util_1.default.trace(\"in checkColumn()\");\r\n        Util_1.default.trace(\"Cannon\");\r\n        var Y_coor = this.point.y_coor;\r\n        // let X_coor = this.point.x_coor\r\n        var piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        // let piece_row = this.board.getRowFromYCoordinate(this.point.y_coor);//Checks the points in this row\r\n        var start_flag = 0; //row 1\r\n        var end_flag = 9; //row 10 \r\n        //trasversing the column (Point [])\r\n        for (var index in piece_col) {\r\n            Util_1.default.trace('piece_col:');\r\n            Util_1.default.trace(piece_col);\r\n            //if the piece in that point is not null, do some checking\r\n            if (piece_col[index].piece != null) {\r\n                Util_1.default.trace(\"有棋子\");\r\n                //checks the indices that are smaller than the point\r\n                // 这颗待处理棋子在上方\r\n                if (parseInt(index) < Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PlayerColor.BLACK) {\r\n                        Util_1.default.trace(\"队友在上方\");\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    }\r\n                    else if (piece_col[index].piece.color != ChessPiece_1.PlayerColor.BLACK) {\r\n                        start_flag = parseInt(index);\r\n                        console.log(\"debugging...........................\");\r\n                        console.log(start_flag);\r\n                    }\r\n                    if (start_flag === Y_coor - 1) // if a friendly piece is blocking right abovbe it\r\n                        start_flag = Y_coor; // start_flag is set to the next row \r\n                    // Log.trace(\"start_flag:\" + start_flag)\r\n                }\r\n                //checks those larger than that point\r\n                // 这颗待处理棋子在下方\r\n                else if (parseInt(index) > Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PlayerColor.BLACK)\r\n                        end_flag = parseInt(index) - 1; // the index is not added, but the last one is.\r\n                    // 是敌方棋子的话：\r\n                    else if (piece_col[index].piece.color != ChessPiece_1.PlayerColor.BLACK)\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === Y_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = Y_coor - 2; // start_flag is set to the next row \r\n                    // Log.trace(\"end_flag:\" + end_flag)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_column = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (Y_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_column.push(piece_col[i]);\r\n        }\r\n        console.log(movable_points_in_this_column);\r\n        return movable_points_in_this_column;\r\n        // console.log(this.board.getColFromXCoordinate(X_coor));\r\n    };\r\n    //returns the grids that the General can go in a row\r\n    Cannon.prototype.checkRow = function () {\r\n        Util_1.default.trace(\"in checkRows()\");\r\n        // let Y_coor = this.point.y_coor\r\n        var X_coor = this.point.x_coor;\r\n        // let piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0;\r\n        var end_flag = 8;\r\n        //trasversing the column (Point [])\r\n        //遍历横行\r\n        for (var index in piece_row) {\r\n            //if the piece in that point is not null, do some checking\r\n            //发现该点内有棋子，判断是敌是友\r\n            if (piece_row[index].piece != null) {\r\n                Util_1.default.trace(\"有棋子\");\r\n                Util_1.default.trace(piece_row);\r\n                //checks the indices that are smaller than the point\r\n                // 该枚车的左边\r\n                if (parseInt(index) < X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].getPiece().isFriendly()) {\r\n                        console.log(\"---------------------------------debug-----------------------------\");\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    }\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === X_coor - 1) // if a friendly piece is blocking immediately left to it\r\n                        start_flag = X_coor; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"start_flag:\" + start_flag);\r\n                }\r\n                //checks those larger than that point\r\n                // 检查该车的右边\r\n                else if (parseInt(index) > X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].getPiece().isFriendly())\r\n                        end_flag = parseInt(index) - 1; // Friendly blocking: the index is not added, but the previous one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === X_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = X_coor - 2; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"end_flag:\" + end_flag);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_row = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (X_coor - 1 === i) {\r\n                continue;\r\n            }\r\n            movable_points_in_this_row.push(piece_row[i]);\r\n        }\r\n        console.log(movable_points_in_this_row);\r\n        return movable_points_in_this_row;\r\n    };\r\n    return Cannon;\r\n}(ChessPiece_1.Piece));\r\nvar BlackCannon = /** @class */ (function (_super) {\r\n    __extends(BlackCannon, _super);\r\n    function BlackCannon(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.BLACK) || this;\r\n        _this.elem.src = '../img/pieces/black-pao.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        $(_this.elem).on('click', function () {\r\n            _super.prototype.movablePoints.call(_this);\r\n        });\r\n        return _this;\r\n    }\r\n    return BlackCannon;\r\n}(Cannon));\r\nexports.BlackCannon = BlackCannon;\r\nvar RedCannon = /** @class */ (function (_super) {\r\n    __extends(RedCannon, _super);\r\n    function RedCannon(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.RED) || this;\r\n        _this.elem.src = '../img/pieces/red-pao.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        $(_this.elem).on('click', function () {\r\n            _super.prototype.movablePoints.call(_this);\r\n        });\r\n        return _this;\r\n    }\r\n    return RedCannon;\r\n}(Cannon));\r\nexports.RedCannon = RedCannon;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RedCavalry = exports.BlackCavalry = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\nvar Cavalry = /** @class */ (function (_super) {\r\n    __extends(Cavalry, _super);\r\n    function Cavalry(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.Cavalry, color) || this;\r\n    }\r\n    /**\r\n     *\r\n     * @param x\r\n     * @param y\r\n     * @returns boolean to indicate if the pass in coordinate is valid general position\r\n     */\r\n    Cavalry.prototype.isValidPosition = function (targetPoint) {\r\n        // 不得离开地图\r\n        if (targetPoint.getY() >= 1 && targetPoint.getY() <= 10) {\r\n            if (targetPoint.getX() >= 1 && targetPoint.getX() <= 9)\r\n                return true;\r\n        }\r\n        // 以上条件不满足，则return false.\r\n        return false;\r\n    };\r\n    Cavalry.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    // 可以走的点位\r\n    Cavalry.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        moveable_points = moveable_points.concat(this.checkMoves());\r\n        console.log(\"movable points:\");\r\n        console.log(moveable_points);\r\n        return moveable_points;\r\n    };\r\n    //returns the grids that the General can go in a row\r\n    Cavalry.prototype.checkMoves = function () {\r\n        Util_1.default.trace(\"in checkMoves()\");\r\n        // let Y_coor = this.point.y_coor\r\n        var X_coor = this.point.getX();\r\n        var Y_coor = this.point.getY();\r\n        // 左前-11点钟\r\n        var front_left_upper = new frontend_utils_1.Point(-1, -1); // WHY: 如果不建一个点，try catch里面的会是局部变量\r\n        var front_left_upper_block = this.board.getPointFromCoordinates(X_coor, Y_coor - 1);\r\n        // 左前-10点钟\r\n        var front_left_lower = new frontend_utils_1.Point(-1, -1);\r\n        var front_left_lower_block = this.board.getPointFromCoordinates(X_coor - 1, Y_coor);\r\n        // 右前-1点钟\r\n        var front_right_upper = new frontend_utils_1.Point(-1, -1);\r\n        var front_right_upper_block = this.board.getPointFromCoordinates(X_coor, Y_coor - 1);\r\n        // 右前-2点钟\r\n        var front_right_lower = new frontend_utils_1.Point(-1, -1);\r\n        var front_right_lower_block = this.board.getPointFromCoordinates(X_coor + 1, Y_coor);\r\n        // 左后-8点 \r\n        var back_left_upper = new frontend_utils_1.Point(-1, -1); // WHY: 如果不建一个点，try catch里面的会是局部变量\r\n        var back_left_upper_block = this.board.getPointFromCoordinates(X_coor - 1, Y_coor);\r\n        // 左后-7点\r\n        var back_left_lower = new frontend_utils_1.Point(-1, -1);\r\n        var back_left_lower_block = this.board.getPointFromCoordinates(X_coor, Y_coor + 1);\r\n        // 右后-上\r\n        var back_right_upper = new frontend_utils_1.Point(-1, -1);\r\n        var back_right_upper_block = this.board.getPointFromCoordinates(X_coor + 1, Y_coor);\r\n        // 右后-下\r\n        var back_right_lower = new frontend_utils_1.Point(-1, -1);\r\n        var back_right_lower_block = this.board.getPointFromCoordinates(X_coor, Y_coor + 1);\r\n        // 没有挡马眼的阻碍才能走\r\n        // In the following graphs, 'S' means Starting Point, 'B' means Block while 'E' means Ending Point. \r\n        // E__\r\n        // |  |\r\n        // |__|\r\n        // |  B\r\n        // |__|\r\n        //    S\r\n        try {\r\n            if (!front_left_upper_block.piece)\r\n                front_left_upper = this.board.getPointFromCoordinates(X_coor - 1, Y_coor - 2);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n        //E____________\r\n        //|     |     |\r\n        //|_____|B____|\r\n        //            S\r\n        try {\r\n            if (!front_left_lower_block.piece)\r\n                front_left_lower = this.board.getPointFromCoordinates(X_coor - 2, Y_coor - 1);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n        //   __E\r\n        //  |  |\r\n        //  |__|\r\n        //  B  |\r\n        //  |__|\r\n        // S   \r\n        try {\r\n            if (!front_right_upper_block.piece)\r\n                front_right_upper = this.board.getPointFromCoordinates(X_coor + 1, Y_coor - 2);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n        // ___________E\r\n        //|     |     |\r\n        //|_____|_____|\r\n        //S     B     \r\n        try {\r\n            if (!front_right_lower_block.piece)\r\n                front_right_lower = this.board.getPointFromCoordinates(X_coor + 2, Y_coor - 1);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n        // ==========================================================\r\n        // _____B_____S\r\n        //|     |     |\r\n        //|_____|_____|\r\n        //E           \r\n        try {\r\n            if (!back_left_upper_block.piece)\r\n                back_left_upper = this.board.getPointFromCoordinates(X_coor - 2, Y_coor + 1);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n        //  __S\r\n        // |  |\r\n        // |__|\r\n        // |  B\r\n        // |__|\r\n        // E   \r\n        try {\r\n            if (!back_left_lower_block.piece)\r\n                back_left_lower = this.board.getPointFromCoordinates(X_coor - 1, Y_coor + 2);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n        //  S__\r\n        //  |  |\r\n        //  |__|\r\n        //  B  |\r\n        //  |__|\r\n        //     E\r\n        try {\r\n            if (!back_right_lower_block.piece)\r\n                back_right_lower = this.board.getPointFromCoordinates(X_coor + 1, Y_coor + 2);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n        //S_____B_____\r\n        //|     |     |\r\n        //|_____|_____|\r\n        //            E\r\n        try {\r\n            if (!back_right_upper_block.piece)\r\n                back_right_upper = this.board.getPointFromCoordinates(X_coor + 2, Y_coor + 1);\r\n        }\r\n        catch (e) {\r\n            console.log(e);\r\n        }\r\n        var movable_points_in_this_column = [];\r\n        //  __ __   \r\n        // |__|__|\r\n        // |__|__|\r\n        // \r\n        console.log(\"++++++++++++++++++++++ debug +++++++++++++++++++++++\");\r\n        console.log(front_left_upper);\r\n        console.log(front_left_lower);\r\n        console.log(front_right_upper);\r\n        console.log(front_right_lower);\r\n        console.log(back_left_upper);\r\n        console.log(back_left_lower);\r\n        // 左前-上\r\n        if (front_left_upper && this.isValidPosition(front_left_upper)) {\r\n            movable_points_in_this_column.push(front_left_upper);\r\n        }\r\n        // 左前-下\r\n        if (front_left_lower && this.isValidPosition(front_left_lower)) {\r\n            movable_points_in_this_column.push(front_left_lower);\r\n        }\r\n        // 右前-上\r\n        if (front_right_upper && this.isValidPosition(front_right_upper)) {\r\n            movable_points_in_this_column.push(front_right_upper);\r\n        }\r\n        // 右前-下\r\n        if (front_right_lower && this.isValidPosition(front_right_lower)) {\r\n            movable_points_in_this_column.push(front_right_lower);\r\n        }\r\n        // 左后-上\r\n        if (back_left_upper && this.isValidPosition(back_left_upper)) {\r\n            movable_points_in_this_column.push(back_left_upper);\r\n        }\r\n        // 左后-下\r\n        if (back_left_lower && this.isValidPosition(back_left_lower)) {\r\n            movable_points_in_this_column.push(back_left_lower);\r\n        }\r\n        // 右后-上\r\n        if (back_right_upper && this.isValidPosition(back_right_upper)) {\r\n            movable_points_in_this_column.push(back_right_upper);\r\n        }\r\n        // 右后-下\r\n        if (back_right_lower && this.isValidPosition(back_right_lower)) {\r\n            movable_points_in_this_column.push(back_right_lower);\r\n        }\r\n        console.log(\"========================= movable_points_in_this_column\");\r\n        console.log(movable_points_in_this_column);\r\n        return movable_points_in_this_column;\r\n    };\r\n    return Cavalry;\r\n}(ChessPiece_1.Piece));\r\nvar BlackCavalry = /** @class */ (function (_super) {\r\n    __extends(BlackCavalry, _super);\r\n    function BlackCavalry(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.BLACK) || this;\r\n        _this.elem.src = '../img/pieces/black-ma.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        $(_this.elem).on('click', function () {\r\n            _super.prototype.movablePoints.call(_this);\r\n        });\r\n        return _this;\r\n    }\r\n    return BlackCavalry;\r\n}(Cavalry));\r\nexports.BlackCavalry = BlackCavalry;\r\nvar RedCavalry = /** @class */ (function (_super) {\r\n    __extends(RedCavalry, _super);\r\n    function RedCavalry(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.RED) || this;\r\n        _this.elem.src = '../img/pieces/red-ma.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        $(_this.elem).on('click', function () {\r\n            _super.prototype.movablePoints.call(_this);\r\n        });\r\n        return _this;\r\n    }\r\n    return RedCavalry;\r\n}(Cavalry));\r\nexports.RedCavalry = RedCavalry;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BlackChariot = exports.RedChariot = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar Chariot = /** @class */ (function (_super) {\r\n    __extends(Chariot, _super);\r\n    function Chariot(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.Chariot, color) || this;\r\n    }\r\n    Chariot.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the dest is not inside of the \"田\" shaped space of the board\r\n        //Returns false.\r\n        if (!this.isValidChariotPosition(x, y))\r\n            return false;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    return Chariot;\r\n}(ChessPiece_1.Piece));\r\nvar RedChariot = /** @class */ (function (_super) {\r\n    __extends(RedChariot, _super);\r\n    function RedChariot(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.RED) || this;\r\n        _this.elem.src = '../img/pieces/red-ju.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        $(_this.elem).on('click', function () {\r\n            // Log.trace(\"invoked this.checkColumns()\")\r\n            // Log.trace(this.checkColumn())\r\n            // Log.trace(this.checkRow())\r\n            _this.movablePoints();\r\n        });\r\n        return _this;\r\n    }\r\n    RedChariot.prototype.movablePoints = function () {\r\n        // Log.trace('inside this.movablePoints()')\r\n        var moveable_points = [];\r\n        // moveable_points.length = 0;\r\n        moveable_points = moveable_points.concat(this.checkRow());\r\n        moveable_points = moveable_points.concat(this.checkColumn());\r\n        // Log.trace('moveable_points is empty here !!!!')\r\n        // Log.trace(moveable_points)\r\n        return moveable_points;\r\n    };\r\n    //returns the grids that General can go in a column\r\n    RedChariot.prototype.checkColumn = function () {\r\n        Util_1.default.trace(\"in checkColumns\");\r\n        var Y_coor = this.point.y_coor;\r\n        var X_coor = this.point.x_coor;\r\n        var piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0; //row 1\r\n        var end_flag = 9; //row 10 \r\n        //trasversing the column (Point [])\r\n        for (var index in piece_col) {\r\n            //if the piece in that point is not null, do some checking\r\n            if (piece_col[index].piece != null) {\r\n                //checks the indices that are smaller than the point\r\n                if (parseInt(index) < Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PlayerColor.RED)\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === Y_coor - 1) // if a friendly piece is blocking right abovbe it\r\n                        start_flag = Y_coor; // start_flag is set to the next row \r\n                    // Log.trace(\"start_flag:\" + start_flag)\r\n                }\r\n                //checks those larger than that point\r\n                else if (parseInt(index) > Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PlayerColor.RED)\r\n                        end_flag = parseInt(index) - 1; // the index is not added, but the last one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === Y_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = Y_coor - 2; // start_flag is set to the next row \r\n                    // Log.trace(\"end_flag:\" + end_flag)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_column = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (Y_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_column.push(piece_col[i]);\r\n        }\r\n        return movable_points_in_this_column;\r\n        // console.log(this.board.getColFromXCoordinate(X_coor));\r\n    };\r\n    //returns the grids that the General can go in a row\r\n    RedChariot.prototype.checkRow = function () {\r\n        Util_1.default.trace(\"in checkRows()\");\r\n        // let Y_coor = this.point.y_coor\r\n        var X_coor = this.point.x_coor;\r\n        // let piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0;\r\n        var end_flag = 8;\r\n        //trasversing the column (Point [])\r\n        for (var index in piece_row) {\r\n            //if the piece in that point is not null, do some checking\r\n            // 判定敌友\r\n            if (piece_row[index].piece != null) {\r\n                //checks the indices that are smaller than the point\r\n                // 车的左边\r\n                if (parseInt(index) < X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].piece.color == ChessPiece_1.PlayerColor.RED)\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === X_coor - 1) // if a friendly piece is blocking right above it\r\n                        start_flag = X_coor; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"start_flag:\" + start_flag);\r\n                }\r\n                //checks those larger than that point\r\n                else if (parseInt(index) > X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].piece.color == ChessPiece_1.PlayerColor.RED)\r\n                        end_flag = parseInt(index) - 1; // the index is not added, but the last one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === X_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = X_coor - 2; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"end_flag:\" + end_flag);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_row = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (X_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_row.push(piece_row[i]);\r\n        }\r\n        return movable_points_in_this_row;\r\n    };\r\n    RedChariot.prototype.isValidChariotPosition = function (x, y) {\r\n        return (y >= 8) && (y <= 10) && (x >= 4) && (x <= 6);\r\n        // && !(x > 0 && y > 0);\r\n    };\r\n    return RedChariot;\r\n}(Chariot));\r\nexports.RedChariot = RedChariot;\r\nvar BlackChariot = /** @class */ (function (_super) {\r\n    __extends(BlackChariot, _super);\r\n    function BlackChariot(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.BLACK) || this;\r\n        _this.elem.src = '../img/pieces/black-ju.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        $(_this.elem).on('click', function () {\r\n            // Log.trace(\"invoked this.checkColumns()\")\r\n            // Log.trace(this.checkColumn())\r\n            // Log.trace(this.checkRow())\r\n            _this.movablePoints();\r\n        });\r\n        return _this;\r\n    }\r\n    BlackChariot.prototype.movablePoints = function () {\r\n        // Log.trace('inside this.movablePoints()')\r\n        var moveable_points = [];\r\n        // moveable_points.length = 0;\r\n        moveable_points = moveable_points.concat(this.checkRow());\r\n        moveable_points = moveable_points.concat(this.checkColumn());\r\n        // Log.trace('moveable_points is empty here !!!!')\r\n        // Log.trace(moveable_points)\r\n        return moveable_points;\r\n    };\r\n    //returns the grids that General can go in a column\r\n    BlackChariot.prototype.checkColumn = function () {\r\n        Util_1.default.trace(\"in checkColumns\");\r\n        Util_1.default.trace(\"Chariots\");\r\n        var Y_coor = this.point.y_coor;\r\n        // let X_coor = this.point.x_coor\r\n        var piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        // let piece_row = this.board.getRowFromYCoordinate(this.point.y_coor);//Checks the points in this row\r\n        var start_flag = 0; //row 1\r\n        var end_flag = 9; //row 10 \r\n        //trasversing the column (Point [])\r\n        for (var index in piece_col) {\r\n            Util_1.default.trace('piece_col:');\r\n            Util_1.default.trace(piece_col);\r\n            //if the piece in that point is not null, do some checking\r\n            if (piece_col[index].piece != null) {\r\n                Util_1.default.trace(\"有棋子\");\r\n                //checks the indices that are smaller than the point\r\n                // 这颗待处理棋子在上方\r\n                if (parseInt(index) < Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PlayerColor.BLACK) {\r\n                        Util_1.default.trace(\"队友在上方\");\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    }\r\n                    else if (piece_col[index].piece.color != ChessPiece_1.PlayerColor.BLACK) {\r\n                        start_flag = parseInt(index);\r\n                        console.log(\"debugging...........................\");\r\n                        console.log(start_flag);\r\n                    }\r\n                    if (start_flag === Y_coor - 1) // if a friendly piece is blocking right abovbe it\r\n                        start_flag = Y_coor; // start_flag is set to the next row \r\n                    // Log.trace(\"start_flag:\" + start_flag)\r\n                }\r\n                //checks those larger than that point\r\n                // 这颗待处理棋子在下方\r\n                else if (parseInt(index) > Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PlayerColor.BLACK)\r\n                        end_flag = parseInt(index) - 1; // the index is not added, but the last one is.\r\n                    // 是敌方棋子的话：\r\n                    else if (piece_col[index].piece.color != ChessPiece_1.PlayerColor.BLACK)\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === Y_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = Y_coor - 2; // start_flag is set to the next row \r\n                    // Log.trace(\"end_flag:\" + end_flag)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_column = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (Y_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_column.push(piece_col[i]);\r\n        }\r\n        console.log(movable_points_in_this_column);\r\n        return movable_points_in_this_column;\r\n        // console.log(this.board.getColFromXCoordinate(X_coor));\r\n    };\r\n    //returns the grids that the General can go in a row\r\n    BlackChariot.prototype.checkRow = function () {\r\n        Util_1.default.trace(\"in checkRows()\");\r\n        // let Y_coor = this.point.y_coor\r\n        var X_coor = this.point.x_coor;\r\n        // let piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0;\r\n        var end_flag = 8;\r\n        //trasversing the column (Point [])\r\n        //遍历横行\r\n        for (var index in piece_row) {\r\n            //if the piece in that point is not null, do some checking\r\n            //发现该点内有棋子，判断是敌是友\r\n            if (piece_row[index].piece != null) {\r\n                Util_1.default.trace(\"有棋子\");\r\n                Util_1.default.trace(piece_row);\r\n                //checks the indices that are smaller than the point\r\n                // 该枚车的左边\r\n                if (parseInt(index) < X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].piece.color == ChessPiece_1.PlayerColor.BLACK) {\r\n                        console.log(\"---------------------------------debug-----------------------------\");\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    }\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === X_coor - 1) // if a friendly piece is blocking immediately left to it\r\n                        start_flag = X_coor; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"start_flag:\" + start_flag);\r\n                }\r\n                //checks those larger than that point\r\n                // 检查该车的右边\r\n                else if (parseInt(index) > X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].piece.color == ChessPiece_1.PlayerColor.BLACK)\r\n                        end_flag = parseInt(index) - 1; // Friendly blocking: the index is not added, but the previous one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === X_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = X_coor - 2; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"end_flag:\" + end_flag);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_row = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (X_coor - 1 === i) {\r\n                continue;\r\n            }\r\n            movable_points_in_this_row.push(piece_row[i]);\r\n        }\r\n        console.log(movable_points_in_this_row);\r\n        return movable_points_in_this_row;\r\n    };\r\n    BlackChariot.prototype.isValidChariotPosition = function (x, y) {\r\n        return (y >= 0) && (y <= 10) && (x >= 0) && (x <= 9);\r\n        // && !(x > 0 && y > 0);\r\n    };\r\n    return BlackChariot;\r\n}(Chariot));\r\nexports.BlackChariot = BlackChariot;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PlayerColor = exports.PieceRole = exports.Piece = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\nObject.defineProperty(exports, \"PlayerColor\", { enumerable: true, get: function () { return frontend_utils_1.PlayerColor; } });\r\n// used in class Piece\r\n// 棋子颜色\r\n// enum PlayerColor {\r\n//     'BLACK',\r\n//     'RED'\r\n// }\r\n// used in class Game, \r\n// 玩家颜色\r\n// enum PlayerColor {\r\n//     'BLACK',\r\n//     'RED'\r\n// }\r\n// 棋子类型\r\nvar PieceRole = {\r\n    General: 'General',\r\n    Advisor: 'Advisor',\r\n    WarElephant: 'Bishop',\r\n    Chariot: 'Rook',\r\n    Cavalry: 'Night',\r\n    Cannon: 'Cannon',\r\n    Soldier: 'Pawn',\r\n};\r\nexports.PieceRole = PieceRole;\r\nvar PieceRoleDict = {\r\n    0: 'General',\r\n    1: 'Advisor',\r\n    2: 'WarElephant',\r\n    3: 'Chariot',\r\n    4: 'Cavalry',\r\n    5: 'Cannon',\r\n    6: 'FootSoldier',\r\n};\r\nvar Piece = /** @class */ (function () {\r\n    function Piece(point, board, role, color) {\r\n        this.piece_role_dict = {\r\n            General: 'King',\r\n            Advisor: 'Advisor',\r\n            WarElephant: 'Bishop',\r\n            Chariot: 'Rook',\r\n            Cavalry: 'Night',\r\n            Cannon: 'Cannon',\r\n            Soldier: 'Pawn',\r\n        };\r\n        // 与移动相关      \r\n        this.point = point; // 被置于某个点\r\n        // this.has_moved = false;                           // 是否已经被移动\r\n        this.active = false; // 是否被选中\r\n        // 与棋子属性相关\r\n        this.board = board;\r\n        this.color = color;\r\n        if (this.color == frontend_utils_1.PlayerColor.RED) {\r\n            this.piece_role = role[0].toUpperCase();\r\n        }\r\n        else if (this.color == frontend_utils_1.PlayerColor.BLACK) {\r\n            this.piece_role = role[0].toLowerCase();\r\n        }\r\n        this.elem = document.createElement(\"img\");\r\n        // 与棋子大小有关\r\n        this.ratio = 100; // TODO:放大倍率 ?\r\n        this.side_length = this.ratio * 0.01 * frontend_utils_1.SIDE_LENGTH; // 棋子的边长\r\n        // 0 -> not selected\r\n        // 1 -> selected, not moved\r\n        // 2 -> moved, refesh state to 0\r\n        this.state = 0;\r\n        $(window).on('mousedown', function (e) {\r\n            e.preventDefault(); //get rid of non-game experience (selecting pictures and stuff)\r\n        });\r\n        $(window).on('change', function (e) {\r\n            e.preventDefault(); //get rid of non-game experience (selecting pictures and stuff)\r\n            console.log('changed');\r\n        });\r\n        // 运行这个，就会把所有的Listener都加上\r\n        this.listenerManager();\r\n    }\r\n    Piece.prototype.listenerManager = function () {\r\n        this.attachSelectPieceListener();\r\n        // this.attachMoveToGridListener()\r\n        // this.removeMoveToGridListener()\r\n    };\r\n    /**\r\n     *  I. When the player clicks on a piece,\r\n     *  The listener invokes the method to determine movable grids,\r\n     *  then it highlights all the grids\r\n     */\r\n    Piece.prototype.attachSelectPieceListener = function () {\r\n        var _this = this;\r\n        console.log(\"attachSelectPieceListener, check active:\");\r\n        console.log(this.board.active_piece);\r\n        // TODO：需要写一个逻辑，判断是否之前已经点过一个棋子\r\n        // 点击了棋子的img之后\r\n        $(this.elem).on('click', function (e) {\r\n            _this.board.getUcciString();\r\n            if (_this.board.active_piece) {\r\n                console.log(\"其他棋子还没走呢！\");\r\n            }\r\n            else {\r\n                console.log(\"其他棋子走过了\");\r\n                console.log('点击了棋子：');\r\n                console.log(_this.elem);\r\n                e.preventDefault();\r\n                // 1. clearing all the colored background first:\r\n                $('.className_grid_div').css('background', 'rgba(3, 181, 252,0.0)');\r\n                // 2. put all the movalbe positions into an array\r\n                var movable_points = [];\r\n                movable_points = _this.movablePoints();\r\n                // console.log(movable_points)\r\n                // 3. highlight all the movalbe positions\r\n                // If the currentPlayer's color is the same as the piece color   \r\n                if (_this.getCurrentPlayer() == _this.color) {\r\n                    movable_points.forEach(function (point) {\r\n                        $(point.elem).css('background', 'rgba(3, 181, 252,0.5');\r\n                    });\r\n                }\r\n                // 设置自己被选中，告知棋盘选中的是自己\r\n                _this.active = true;\r\n                _this.board.active_piece = _this;\r\n                // TODO:找到ListenerManager的问题所在，并且把这个移动到那里面。\r\n                // 下一步是Move To Grid\r\n                setTimeout(function () {\r\n                    _this.attachMoveToGridListener();\r\n                }, 100);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     *  The user has selected a piece in step I.\r\n     *\r\n     *  II. once the user has selected the piece,\r\n     *  a listener is attached to the grid to check\r\n     *  which grid the user is moving to\r\n     *\r\n     *\r\n     *  在I中玩家已经选择了棋子\r\n     *\r\n     *  II.\r\n     *  在用attachSelectPieceListener()选择了棋子之后,\r\n     *  再用attachMoveToGridListener() 选择移动到哪个格子\r\n     */\r\n    Piece.prototype.attachMoveToGridListener = function () {\r\n        var _this = this;\r\n        console.log(this.point);\r\n        //1. attach another listener which listens to the next click:\r\n        $('.className_grid_div').on('click', function (e) {\r\n            console.log(\"点击了棋子:\");\r\n            console.log(e.target);\r\n            console.log(e.target.tagName);\r\n            console.log(\"\\u68CB\\u5B50\\u6240\\u5728\\u7684\\u683C\\u5B50:\");\r\n            console.log(e.target.parentNode);\r\n            console.log(e.target.parentElement);\r\n            // ① if the piece is selected, then go on and see if the grid is moveable\r\n            // ① 如果已经选择了某个棋子，判断是否能够走\r\n            if (_this.board.active_piece && // Condition #1 : 选中了棋子\r\n                _this.board.game.getCurrentPlayer() == _this.color) { // Condition #2 : 是当前玩家走\r\n                console.log('the piece is selected?' + _this.active);\r\n                console.log(\"active piece:\");\r\n                console.log(_this.board.active_piece);\r\n                console.log(_this.board.target_coordinate);\r\n                // 如果点击的是棋子，而不是空的格子\r\n                // 判断条件：HTML元素是IMG而不是DIV\r\n                if ((e.target.tagName).toUpperCase() == 'IMG') {\r\n                    console.log(\"点击了另一个棋子\");\r\n                    var parentNode = e.target.parentElement;\r\n                    if (parentNode != null) {\r\n                        console.log(\"棋子所在的格子：\");\r\n                        console.log(parentNode);\r\n                        // 记录下一步要走的坐标\r\n                        _this.board.target_coordinate = _this.board.getCoordinateFromElemId(parentNode.id);\r\n                    }\r\n                }\r\n                else {\r\n                    console.log(\"点击了一个空的格子\");\r\n                    _this.board.target_coordinate = _this.board.getCoordinateFromElemId(e.target.id);\r\n                }\r\n                console.log(_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]));\r\n                var target_point = _this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]);\r\n                if (!_this.movablePoints().includes(target_point)) {\r\n                    console.log(\"不能这么走！！！\");\r\n                    return;\r\n                }\r\n                // ①.a 如果不是 [-1, -1], 说明玩家选择了某个格子\r\n                if (_this.board.target_coordinate[0] != -1 && _this.board.target_coordinate[1] != -1) {\r\n                    // 增加一个判断条件，看这个位置是否有棋子\r\n                    // TODO: check if the point's 'piece' key is available at all?\r\n                    if (_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).hasPiece()) {\r\n                        console.log(\"该点有棋子\");\r\n                        console.log(\"=========================== debug =================================\");\r\n                        console.log(_this.isFriendly(_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).getPiece()));\r\n                        // 棋子是自己人的\r\n                        // 那么选中的棋子则换为该棋子\r\n                        if (_this.isFriendly(_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).getPiece())) {\r\n                            alert(\"You Can't Move Here, A Friendly Piece is at this Position\");\r\n                            _this.removeMoveToGridListener();\r\n                            return; //直接结束\r\n                        }\r\n                        // 不是自己人的，要提子\r\n                        // TODO:增加提子逻辑\r\n                        else if (!_this.isFriendly(_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).getPiece())) {\r\n                            // alert(\"正在提子\")\r\n                            // 目标Point中移除piece\r\n                            delete _this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).piece;\r\n                            console.log(\"=========  debug ===========\");\r\n                            console.log(_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]));\r\n                            // 目标Point.elem 移除 HTML元素\r\n                            _this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).elem.innerHTML = '';\r\n                        }\r\n                        else {\r\n                            // 目标Point中移除piece\r\n                            delete _this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).piece;\r\n                            console.log(\"=========  debug ===========\");\r\n                            console.log(_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]));\r\n                            // 目标Point.elem 移除 HTML元素\r\n                            _this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).elem.innerHTML = '';\r\n                        }\r\n                    }\r\n                    // \r\n                    else {\r\n                        _this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).elem.innerHTML = '';\r\n                    }\r\n                    console.log(_this.board.target_coordinate);\r\n                    var next_x_coor = _this.board.target_coordinate[0];\r\n                    var next_y_coor = _this.board.target_coordinate[1];\r\n                    // 棋子属性、Element移动到目标点, 详见moveToPoint\r\n                    _this.board.active_piece.moveToPoint(_this.board.getPointFromCoordinates(next_x_coor, next_y_coor));\r\n                    $('.className_grid_div').css('background', 'rgba(0,0,0,0.0)'); // setting back the background to non-colored and transparent\r\n                    _this.board.target_coordinate = [-1, -1]; // 重新归[-1, -1]\r\n                    _this.active = false; // 棋子状态为不再选中\r\n                    // TODO >>>>>  Remove if not needed anymore <<<<<<<<<\r\n                    // console.log('the piece is selected?' + this.active);\r\n                    // console.log(`active piece:`);\r\n                    // console.log(this.board.active_piece);\r\n                    // console.log(this.board.target_coordinate )\r\n                    _this.board.game.alternatePlayer(); // 切换到下一个玩家\r\n                }\r\n            }\r\n            // ② 还没有选中棋子\r\n            else {\r\n                console.log(\"还没有选择棋子......\");\r\n                console.log('Is the piece is selected? ' + _this.active);\r\n                console.log('Doing nothing...');\r\n                $('.className_grid_div').css('background', 'rgba(0,0,0,0.0)'); // setting back the background to non-colored and transparent\r\n            }\r\n            _this.removeMoveToGridListener();\r\n            // $('.className_grid_div').unbind('click');  // HACK after clicking, we need to get rid of the listener\r\n            // $('.className_grid_div').css('background', 'rgba(0,0,0,0.0)') // setting back the background to non-colored and transparent\r\n        });\r\n    };\r\n    //upon finishing the listener, it removes the listener from the grid\r\n    Piece.prototype.removeMoveToGridListener = function () {\r\n        this.board.active_piece = null;\r\n        //4. remove the click listener from the grids\r\n        console.log('已经点击了移动目标格,现在移除MoveToGridListener');\r\n        $('.className_grid_div').off('click'); // after clicking, we need to get rid of the listener\r\n        $('.className_grid_div').css('background', 'rgba(0,0,0,0.0)'); // setting back the background to non-colored and transparent\r\n    };\r\n    Piece.prototype.movablePoints = function () {\r\n        Util_1.default.trace('movable points of a piece');\r\n        return [];\r\n    };\r\n    Piece.prototype.getElement = function () {\r\n        return this.elem;\r\n    };\r\n    //sets the point of the piece\r\n    Piece.prototype.moveToPoint = function (point) {\r\n        // 删除原来的元素\r\n        this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].elem.removeChild(this.elem);\r\n        delete this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].piece;\r\n        // console.log(\"===================== debug ==============================\");\r\n        // console.log(this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1])\r\n        // 更换到新的点\r\n        this.point = point;\r\n        this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].elem.appendChild(this.elem);\r\n        this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].piece = this;\r\n        console.log(this.board.intersections);\r\n        console.log(this.point);\r\n        console.log(this.point.x_coor);\r\n        console.log(this.point.y_coor);\r\n    };\r\n    // ========= Getter & Setters =========================================\r\n    /**\r\n     * 获取棋子的类型\r\n     * Get Piece Role\r\n     */\r\n    Piece.prototype.getRole = function () {\r\n        return this.piece_role;\r\n    };\r\n    /**\r\n     * 获取棋子的颜色\r\n     * Get Piece Color\r\n     */\r\n    Piece.prototype.getColor = function () {\r\n        return this.color;\r\n    };\r\n    Piece.prototype.getCurrentPlayer = function () {\r\n        return this.board.game.getCurrentPlayer();\r\n    };\r\n    // \r\n    // ------------------ 下一目标点 ------------------------\r\n    // 目标点的坐标\r\n    Piece.prototype.getTargetPointCoordinate = function () {\r\n        return this.board.target_coordinate;\r\n    };\r\n    // 获得目标点的 X 坐标\r\n    Piece.prototype.getTargetPointXCoordinate = function () {\r\n        return this.board.target_coordinate[0];\r\n    };\r\n    // 获得目标点的 Y 坐标\r\n    Piece.prototype.getTargetPointYCoordinate = function () {\r\n        return this.board.target_coordinate[1];\r\n    };\r\n    /**\r\n     * @param point Check if a point has a piece with the same side\r\n     *\r\n     */\r\n    Piece.prototype.checkSameColorPieceInPoint = function (point) {\r\n        var piece = point.getPiece();\r\n        if (!piece) {\r\n            return false;\r\n        }\r\n        return piece.getColor() === this.color;\r\n    };\r\n    /**\r\n    * @param point Check if a point has a piece with the same side\r\n    */\r\n    Piece.prototype.isFriendly = function (piece) {\r\n        // console.log(piece)\r\n        try {\r\n            if (!piece) {\r\n                console.log(\"没有棋子！\");\r\n            }\r\n            // FIXME：PROBLEM\r\n            return piece.getColor() === this.color;\r\n        }\r\n        catch (e) {\r\n            console.log(\"没有棋子！\");\r\n        }\r\n        return true;\r\n    };\r\n    Piece.prototype.isEnemy = function (piece) {\r\n        if (!piece) {\r\n            return false;\r\n        }\r\n        return piece.getColor() != this.color;\r\n    };\r\n    // 渲染HTML Elements.\r\n    // Render the html elements to the webpage.\r\n    Piece.prototype.render = function () {\r\n        this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].elem.append(this.elem); // encapsulates the next line of code;\r\n        $(this.elem).addClass('pieces');\r\n        //add className for the HTML <img> of the piece - PieceRole\r\n        $(this.elem).addClass(this.piece_role.toString());\r\n        //add className for the HTML <img> of the piece - PieceColor\r\n        $(this.elem).addClass(frontend_utils_1.PlayerColor[this.color].toString());\r\n        // $(window).on('resize',Piece.adjustResize);\r\n        // $(this.elem)\r\n        //     .on('mousedown',function () {\r\n        //         isDragging = false;\r\n        //         console.log(isDragging)\r\n        //     })\r\n        //     .on('mousemove',function () {\r\n        //         isDragging = true;\r\n        //         console.log(isDragging)\r\n        //     })\r\n        //     .on('mouseup',function () {\r\n        //         var wasDragging = isDragging;\r\n        //         isDragging = false;\r\n        //         console.log(isDragging)\r\n        //         if (!wasDragging) {\r\n        //             console.log('dragging')\r\n        //             $(\"#throbble\").toggle();\r\n        //         }\r\n        //     });\r\n        // TODO: click events:\r\n    };\r\n    // 调整棋盘、棋子的大小\r\n    Piece.adjustResize = function () {\r\n        if (screen.width == window.innerWidth) {\r\n            console.log(\"at exact 100%\");\r\n            frontend_utils_1.getChessBoardSize(); // 判断棋盘的大小\r\n            $('.className_grid_div').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100)); // 更新棋盘的宽度\r\n            $('.className_grid_div').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100)); // 更新棋盘的高度\r\n            $('.pieces').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100)); // 更新棋子的高度\r\n            $('.pieces').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100)); // 更新棋子的宽度\r\n            $(\"#board\").css(\"width\", $(\"#board\").css('height'));\r\n            $(\"#id_chessboard\").css(\"width\", $(\"#board\").css('width')); // 棋盘的宽度和高度统一 \r\n        }\r\n        else if (screen.width > window.innerWidth) {\r\n            console.log(\"you have zoomed in the page i.e more than 100%\");\r\n            frontend_utils_1.getZoomedRatio();\r\n            frontend_utils_1.getChessBoardSize();\r\n            $('.className_grid_div').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.className_grid_div').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $(\"#board\").css(\"width\", $(\"#board\").css('height'));\r\n            $('#board').css('column-gap', '0px');\r\n            $(\"#id_chessboard\").css(\"width\", $(\"#board\").css('width'));\r\n        }\r\n        else {\r\n            console.log(\"you have zoomed out i.e less than 100%\");\r\n            frontend_utils_1.getZoomedRatio();\r\n            frontend_utils_1.getChessBoardSize();\r\n            var current_width = $('.className_grid_div').css('width');\r\n            $('.className_grid_div').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.className_grid_div').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $(\"#board\").css(\"width\", $(\"#board\").css('height'));\r\n            $(\"#id_chessboard\").css(\"width\", $(\"#board\").css('width'));\r\n        }\r\n    };\r\n    return Piece;\r\n}());\r\nexports.Piece = Piece;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BlackFootSoldier = exports.RedFootSoldier = void 0;\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar FootSoldier = /** @class */ (function (_super) {\r\n    __extends(FootSoldier, _super);\r\n    function FootSoldier(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.Soldier, color) || this;\r\n    }\r\n    /**\r\n     *\r\n     * @param x\r\n     * @param y\r\n     * @returns boolean to indicate if the pass in coordinate is valid general position\r\n     */\r\n    FootSoldier.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the dest is not inside of the \"田\" shaped space of the board\r\n        //Returns false.\r\n        // if (!this.isValidGeneralPosition(x, y))\r\n        //     return false;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    FootSoldier.prototype.isValidFootSoldierPosition = function (targetPoint) {\r\n        return (targetPoint.getY() >= 1) && (targetPoint.getY() <= 10) && (targetPoint.getX() >= 1) && (targetPoint.getX() <= 9);\r\n    };\r\n    return FootSoldier;\r\n}(ChessPiece_1.Piece));\r\nvar RedFootSoldier = /** @class */ (function (_super) {\r\n    __extends(RedFootSoldier, _super);\r\n    function RedFootSoldier(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.RED) || this;\r\n        _this.elem.src = '../img/pieces/red-bing.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    RedFootSoldier.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        if (this.point.getY() <= 5) {\r\n            console.log(\"过河后\");\r\n            moveable_points = moveable_points.concat(this.afterLanding());\r\n        }\r\n        else if (this.point.getY() >= 6) {\r\n            console.log(\"过河前\");\r\n            moveable_points = moveable_points.concat(this.beforeLanding());\r\n        }\r\n        return moveable_points;\r\n    };\r\n    // 渡河之前\r\n    RedFootSoldier.prototype.beforeLanding = function () {\r\n        var X_coor = this.point.getX();\r\n        var Y_coor = this.point.getY();\r\n        var front = this.board.getPointFromCoordinates(X_coor, Y_coor - 1);\r\n        var movable_points_before_landing = [];\r\n        // 面前的格子\r\n        if (front && this.isValidFootSoldierPosition(front)) {\r\n            movable_points_before_landing.push(front);\r\n        }\r\n        return movable_points_before_landing;\r\n    };\r\n    // 渡河以后\r\n    RedFootSoldier.prototype.afterLanding = function () {\r\n        var X_coor = this.point.getX();\r\n        var Y_coor = this.point.getY();\r\n        var front = this.board.getPointFromCoordinates(X_coor, Y_coor - 1);\r\n        // let back = this.board.getPointFromCoordinates(X_coor, Y_coor + 1) // Not one step back!\r\n        var left = this.board.getPointFromCoordinates(X_coor - 1, Y_coor);\r\n        var right = this.board.getPointFromCoordinates(X_coor + 1, Y_coor);\r\n        var movable_points_after_landing = [];\r\n        // 面前的格子\r\n        if (front && this.isValidFootSoldierPosition(front)) {\r\n            movable_points_after_landing.push(front);\r\n        }\r\n        // 左边 \r\n        if (left && this.isValidFootSoldierPosition(left)) {\r\n            console.log('back.getPiece()');\r\n            console.log(left.getPiece());\r\n            movable_points_after_landing.push(left);\r\n        }\r\n        // 右边\r\n        if (right && this.isValidFootSoldierPosition(right)) {\r\n            console.log('back.getPiece()');\r\n            console.log(right.getPiece());\r\n            movable_points_after_landing.push(right);\r\n        }\r\n        return movable_points_after_landing;\r\n    };\r\n    return RedFootSoldier;\r\n}(FootSoldier));\r\nexports.RedFootSoldier = RedFootSoldier;\r\nvar BlackFootSoldier = /** @class */ (function (_super) {\r\n    __extends(BlackFootSoldier, _super);\r\n    function BlackFootSoldier(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.BLACK) || this;\r\n        _this.elem.src = '../img/pieces/black-zu.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    BlackFootSoldier.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        if (this.point.getY() <= 5) {\r\n            console.log(\"过河前\");\r\n            moveable_points = moveable_points.concat(this.beforeLanding());\r\n        }\r\n        else if (this.point.getY() >= 6) {\r\n            console.log(\"过河后\");\r\n            moveable_points = moveable_points.concat(this.afterLanding());\r\n        }\r\n        return moveable_points;\r\n    };\r\n    // 渡河之前\r\n    BlackFootSoldier.prototype.beforeLanding = function () {\r\n        var X_coor = this.point.getX();\r\n        var Y_coor = this.point.getY();\r\n        var front = this.board.getPointFromCoordinates(X_coor, Y_coor + 1);\r\n        var movable_points_before_landing = [];\r\n        // 面前的格子\r\n        if (front && this.isValidFootSoldierPosition(front)) {\r\n            movable_points_before_landing.push(front);\r\n        }\r\n        return movable_points_before_landing;\r\n    };\r\n    // 渡河以后\r\n    BlackFootSoldier.prototype.afterLanding = function () {\r\n        var X_coor = this.point.getX();\r\n        var Y_coor = this.point.getY();\r\n        var front = this.board.getPointFromCoordinates(X_coor, Y_coor + 1);\r\n        // let back = this.board.getPointFromCoordinates(X_coor, Y_coor + 1) // Not one step back!\r\n        var left = this.board.getPointFromCoordinates(X_coor - 1, Y_coor);\r\n        var right = this.board.getPointFromCoordinates(X_coor + 1, Y_coor);\r\n        var movable_points_after_landing = [];\r\n        // 面前的格子\r\n        if (front && this.isValidFootSoldierPosition(front)) {\r\n            movable_points_after_landing.push(front);\r\n        }\r\n        // 左边 \r\n        if (left && this.isValidFootSoldierPosition(left)) {\r\n            console.log('back.getPiece()');\r\n            console.log(left.getPiece());\r\n            movable_points_after_landing.push(left);\r\n        }\r\n        // 右边\r\n        if (right && this.isValidFootSoldierPosition(right)) {\r\n            console.log('back.getPiece()');\r\n            console.log(right.getPiece());\r\n            movable_points_after_landing.push(right);\r\n        }\r\n        return movable_points_after_landing;\r\n    };\r\n    return BlackFootSoldier;\r\n}(FootSoldier));\r\nexports.BlackFootSoldier = BlackFootSoldier;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Game = void 0;\r\nvar Boards_1 = require(\"./Boards\");\r\nvar Chariot_1 = require(\"./Chariot\");\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\nvar General_1 = require(\"./General\");\r\nvar Cannon_1 = require(\"./Cannon\");\r\n'./Cannon';\r\nvar FootSoldier_1 = require(\"./FootSoldier\");\r\nvar Advisor_1 = require(\"./Advisor\");\r\nvar WarElephant_1 = require(\"./WarElephant\");\r\nvar Cavalry_1 = require(\"./Cavalry\");\r\nvar Game = /** @class */ (function () {\r\n    function Game() {\r\n        this.currentPlayer = frontend_utils_1.PlayerColor.RED;\r\n        this.board = new Boards_1.Board(this);\r\n    }\r\n    // gets the public player\r\n    // 获取当前玩家\r\n    Game.prototype.getCurrentPlayer = function () {\r\n        return this.currentPlayer;\r\n    };\r\n    //Switch current player to the other player\r\n    //到另一个人下\r\n    Game.prototype.alternatePlayer = function () {\r\n        if (this.currentPlayer === frontend_utils_1.PlayerColor.RED)\r\n            this.currentPlayer = frontend_utils_1.PlayerColor.BLACK;\r\n        else\r\n            this.currentPlayer = frontend_utils_1.PlayerColor.RED;\r\n    };\r\n    Game.prototype.render = function () {\r\n        this.board.render(); // 渲染棋盘\r\n        // ============================= 棋子初始化 Initialization of ChessPieces =====================================================\r\n        //                               先横坐标后纵坐标\r\n        //                              1 2 3 4 5 6 7 8 9\r\n        //                              2\r\n        //                              3\r\n        //                              4\r\n        //                              5\r\n        //                              6\r\n        //                              7\r\n        //                              8\r\n        //                              9\r\n        //                              10\r\n        // 将/帅   Generals:\r\n        var red_shuai = new General_1.RedGeneral(this.board, this.board.getPointFromCoordinates(5, 10)); //new Point() doesn't make sense.\r\n        red_shuai.render();\r\n        var black_jiang = new General_1.BlackGeneral(this.board, this.board.getPointFromCoordinates(5, 1)); // using getPoint from coor now\r\n        black_jiang.render();\r\n        // 红车    Red Chariots\r\n        var red_ju_one = new Chariot_1.RedChariot(this.board, this.board.getPointFromCoordinates(1, 10));\r\n        var red_ju_two = new Chariot_1.RedChariot(this.board, this.board.getPointFromCoordinates(9, 10));\r\n        // let red_ju_test = new RedChariot(this.board, this.board.getPointFromCoordinates(9,3));\r\n        // let red_ju_test2 = new RedChariot(this.board, this.board.getPointFromCoordinates(9,4));\r\n        // 黑车  Black Chariots\r\n        var black_ju_one = new Chariot_1.BlackChariot(this.board, this.board.getPointFromCoordinates(1, 1));\r\n        var black_ju_two = new Chariot_1.BlackChariot(this.board, this.board.getPointFromCoordinates(9, 1));\r\n        // 红炮 RedCannons\r\n        var red_cannon_one = new Cannon_1.RedCannon(this.board, this.board.getPointFromCoordinates(2, 8));\r\n        var red_cannon_two = new Cannon_1.RedCannon(this.board, this.board.getPointFromCoordinates(8, 8));\r\n        // 黑炮 BlackCannon\r\n        var black_cannon_one = new Cannon_1.BlackCannon(this.board, this.board.getPointFromCoordinates(2, 3));\r\n        var black_cannon_two = new Cannon_1.BlackCannon(this.board, this.board.getPointFromCoordinates(8, 3));\r\n        // 兵、卒 FOOTSOLDIERS\r\n        var red_bing_one = new FootSoldier_1.RedFootSoldier(this.board, this.board.getPointFromCoordinates(1, 7));\r\n        var red_bing_two = new FootSoldier_1.RedFootSoldier(this.board, this.board.getPointFromCoordinates(3, 7));\r\n        var red_bing_three = new FootSoldier_1.RedFootSoldier(this.board, this.board.getPointFromCoordinates(5, 7));\r\n        var red_bing_four = new FootSoldier_1.RedFootSoldier(this.board, this.board.getPointFromCoordinates(7, 7));\r\n        var red_bing_five = new FootSoldier_1.RedFootSoldier(this.board, this.board.getPointFromCoordinates(9, 7));\r\n        var black_zu_one = new FootSoldier_1.BlackFootSoldier(this.board, this.board.getPointFromCoordinates(1, 4));\r\n        var black_zu_two = new FootSoldier_1.BlackFootSoldier(this.board, this.board.getPointFromCoordinates(3, 4));\r\n        var black_zu_three = new FootSoldier_1.BlackFootSoldier(this.board, this.board.getPointFromCoordinates(5, 4));\r\n        var black_zu_four = new FootSoldier_1.BlackFootSoldier(this.board, this.board.getPointFromCoordinates(7, 4));\r\n        var black_zu_five = new FootSoldier_1.BlackFootSoldier(this.board, this.board.getPointFromCoordinates(9, 4));\r\n        // 红士 RedAdvisor\r\n        var red_advisor_one = new Advisor_1.RedAdvisor(this.board, this.board.getPointFromCoordinates(4, 10));\r\n        var red_advisor_two = new Advisor_1.RedAdvisor(this.board, this.board.getPointFromCoordinates(6, 10));\r\n        // 黑仕 BlackAdvisor\r\n        var black_advisor_one = new Advisor_1.BlackAdvisor(this.board, this.board.getPointFromCoordinates(4, 1));\r\n        var black_advisor_two = new Advisor_1.BlackAdvisor(this.board, this.board.getPointFromCoordinates(6, 1));\r\n        // 黑象\r\n        var black_elephant_one = new WarElephant_1.BlackWarElephant(this.board, this.board.getPointFromCoordinates(3, 1));\r\n        var black_elephant_two = new WarElephant_1.BlackWarElephant(this.board, this.board.getPointFromCoordinates(7, 1));\r\n        // 红象\r\n        var red_elephant_one = new WarElephant_1.RedWarElephant(this.board, this.board.getPointFromCoordinates(3, 10));\r\n        var red_elephant_two = new WarElephant_1.RedWarElephant(this.board, this.board.getPointFromCoordinates(7, 10));\r\n        // 黑马\r\n        var black_calvalry_one = new Cavalry_1.BlackCavalry(this.board, this.board.getPointFromCoordinates(2, 1));\r\n        var black_calvalry_two = new Cavalry_1.BlackCavalry(this.board, this.board.getPointFromCoordinates(8, 1));\r\n        // 红马\r\n        var red_calvalry_one = new Cavalry_1.RedCavalry(this.board, this.board.getPointFromCoordinates(2, 10));\r\n        var red_calvalry_two = new Cavalry_1.RedCavalry(this.board, this.board.getPointFromCoordinates(8, 10));\r\n        // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ 棋子初始化 Initialization of ChessPieces ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        // 红车\r\n        red_ju_one.render();\r\n        red_ju_two.render();\r\n        // 黑车\r\n        black_ju_one.render();\r\n        black_ju_two.render();\r\n        // 炮\r\n        red_cannon_one.render();\r\n        red_cannon_two.render();\r\n        black_cannon_one.render();\r\n        black_cannon_two.render();\r\n        // 红兵\r\n        red_bing_one.render();\r\n        red_bing_two.render();\r\n        red_bing_three.render();\r\n        red_bing_four.render();\r\n        red_bing_five.render();\r\n        // 黑兵\r\n        black_zu_one.render();\r\n        black_zu_one.render();\r\n        black_zu_two.render();\r\n        black_zu_three.render();\r\n        black_zu_four.render();\r\n        black_zu_five.render();\r\n        // .render();\r\n        // \r\n        red_advisor_one.render();\r\n        red_advisor_two.render();\r\n        black_advisor_one.render();\r\n        black_advisor_two.render();\r\n        // 黑象 black elephants\r\n        black_elephant_one.render();\r\n        black_elephant_two.render();\r\n        // \r\n        red_elephant_one.render();\r\n        red_elephant_two.render();\r\n        // Cavalry 骑兵\r\n        black_calvalry_one.render();\r\n        black_calvalry_two.render();\r\n        // Cavalry 骑兵\r\n        red_calvalry_one.render();\r\n        red_calvalry_two.render();\r\n    };\r\n    return Game;\r\n}());\r\nexports.Game = Game;\r\nvar game = new Game();\r\ngame.render();\r\nfrontend_utils_1.fitSize();\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BlackGeneral = exports.RedGeneral = void 0;\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\nvar General = /** @class */ (function (_super) {\r\n    __extends(General, _super);\r\n    function General(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.General, color) || this;\r\n    }\r\n    General.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the dest is not inside of the \"田\" shaped space of the board\r\n        //Returns false.\r\n        // if (!this.isValidGeneralPosition(x, y))\r\n        //     return false;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    return General;\r\n}(ChessPiece_1.Piece));\r\nvar RedGeneral = /** @class */ (function (_super) {\r\n    __extends(RedGeneral, _super);\r\n    function RedGeneral(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.RED) || this;\r\n        _this.elem.src = '../img/pieces/red-shuai.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    RedGeneral.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        moveable_points = moveable_points.concat(this.checkPeriphery());\r\n        return moveable_points;\r\n    };\r\n    //returns the grids that General can go in a column\r\n    RedGeneral.prototype.checkPeriphery = function () {\r\n        var Y_coor = this.point.y_coor;\r\n        var X_coor = this.point.x_coor;\r\n        var front = this.board.getPointFromCoordinates(X_coor, Y_coor - 1);\r\n        var back = this.board.getPointFromCoordinates(X_coor, Y_coor + 1); //out of bound err\r\n        var left = this.board.getPointFromCoordinates(X_coor - 1, Y_coor);\r\n        var right = this.board.getPointFromCoordinates(X_coor + 1, Y_coor);\r\n        var movable_points_in_this_column = [];\r\n        //  __ __   \r\n        // |__|__|\r\n        // |__|__|\r\n        // \r\n        console.log(\"+++++++++++++ debug +++++++++++++++++++++++\");\r\n        // 面前的格子\r\n        if (front && this.isValidGeneralPosition(front)) {\r\n            console.log('front.getPiece()');\r\n            console.log(front.getPiece());\r\n            movable_points_in_this_column.push(front);\r\n        }\r\n        if (back && this.isValidGeneralPosition(back)) {\r\n            console.log('back.getPiece()');\r\n            console.log(back.getPiece());\r\n            movable_points_in_this_column.push(back);\r\n        }\r\n        if (left && this.isValidGeneralPosition(left)) {\r\n            console.log('back.getPiece()');\r\n            console.log(left.getPiece());\r\n            movable_points_in_this_column.push(left);\r\n        }\r\n        if (right && this.isValidGeneralPosition(right)) {\r\n            console.log('back.getPiece()');\r\n            console.log(right.getPiece());\r\n            movable_points_in_this_column.push(right);\r\n        }\r\n        return movable_points_in_this_column;\r\n    };\r\n    RedGeneral.prototype.isValidGeneralPosition = function (targetPoint) {\r\n        console.log('isValidGeneralPosition +++++++++++');\r\n        console.log(targetPoint);\r\n        console.log(targetPoint.getX());\r\n        console.log(targetPoint.getY());\r\n        // 外层if表示田字的横坐标范围\r\n        if (targetPoint.getX() - 1 >= 3 && targetPoint.getX() - 1 <= 5) {\r\n            // 内层是纵坐标范围\r\n            if (targetPoint.getY() - 1 >= 7 && targetPoint.getY() - 1 <= 9) {\r\n                return true;\r\n            }\r\n        }\r\n        // 以上条件不满足，则return false.\r\n        return false;\r\n    };\r\n    return RedGeneral;\r\n}(General));\r\nexports.RedGeneral = RedGeneral;\r\nvar BlackGeneral = /** @class */ (function (_super) {\r\n    __extends(BlackGeneral, _super);\r\n    function BlackGeneral(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.BLACK) || this;\r\n        _this.elem.src = '../img/pieces/black-jiang.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    BlackGeneral.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        moveable_points = moveable_points.concat(this.checkPeriphery());\r\n        return moveable_points;\r\n    };\r\n    BlackGeneral.prototype.checkPeriphery = function () {\r\n        var X_coor = this.point.getX();\r\n        var Y_coor = this.point.getY();\r\n        var front = this.board.getPointFromCoordinates(X_coor, Y_coor - 1);\r\n        var back = new frontend_utils_1.Point(-1, -1);\r\n        try {\r\n            back = this.board.getPointFromCoordinates(X_coor, Y_coor + 1); //out of bound err\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n        var left = this.board.getPointFromCoordinates(X_coor - 1, Y_coor);\r\n        var right = this.board.getPointFromCoordinates(X_coor + 1, Y_coor);\r\n        var movable_points_in_this_column = [];\r\n        //  __ __   \r\n        // |__|__|\r\n        // |__|__|\r\n        // \r\n        console.log(\"++++++++++++++++++++++ debug +++++++++++++++++++++++\");\r\n        // 面前的格子\r\n        if (front && this.isValidGeneralPosition(front)) {\r\n            console.log('front.getPiece()');\r\n            console.log(front.getPiece());\r\n            movable_points_in_this_column.push(front);\r\n        }\r\n        if (back && this.isValidGeneralPosition(back)) {\r\n            console.log('back.getPiece()');\r\n            console.log(back.getPiece());\r\n            movable_points_in_this_column.push(back);\r\n        }\r\n        if (left && this.isValidGeneralPosition(left)) {\r\n            console.log('back.getPiece()');\r\n            console.log(left.getPiece());\r\n            movable_points_in_this_column.push(left);\r\n        }\r\n        if (right && this.isValidGeneralPosition(right)) {\r\n            console.log('back.getPiece()');\r\n            console.log(right.getPiece());\r\n            movable_points_in_this_column.push(right);\r\n        }\r\n        return movable_points_in_this_column;\r\n    };\r\n    BlackGeneral.prototype.isValidGeneralPosition = function (targetPoint) {\r\n        console.log('isValidGeneralPosition +++++++++++');\r\n        console.log(targetPoint);\r\n        console.log(targetPoint.getX());\r\n        console.log(targetPoint.getY());\r\n        // 外层if表示田字的横坐标范围\r\n        if (targetPoint.getX() >= 4 && targetPoint.getX() - 1 <= 6) {\r\n            // 内层是纵坐标范围\r\n            if (targetPoint.getY() >= 1 && targetPoint.getY() <= 3) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    return BlackGeneral;\r\n}(General));\r\nexports.BlackGeneral = BlackGeneral;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.RedWarElephant = exports.BlackWarElephant = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\nvar WarElephant = /** @class */ (function (_super) {\r\n    __extends(WarElephant, _super);\r\n    function WarElephant(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.WarElephant, color) || this;\r\n    }\r\n    WarElephant.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    WarElephant.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        // \r\n        moveable_points = moveable_points.concat(this.checkMoves());\r\n        return moveable_points;\r\n    };\r\n    //returns the grids that the General can go in a row\r\n    WarElephant.prototype.checkMoves = function () {\r\n        Util_1.default.trace(\"in checkMoves()\");\r\n        // let Y_coor = this.point.y_coor\r\n        var X_coor = this.point.getX();\r\n        var Y_coor = this.point.getY();\r\n        var front_left = new frontend_utils_1.Point(-1, -1); // WHY: 如果不建一个点，try catch里面的会是局部变量\r\n        var front_left_block_pos = new frontend_utils_1.Point(-1, -1);\r\n        var front_right = new frontend_utils_1.Point(-1, -1);\r\n        var front_right_block_pos = new frontend_utils_1.Point(-1, -1);\r\n        var back_left = new frontend_utils_1.Point(-1, -1);\r\n        var back_left_block_pos = new frontend_utils_1.Point(-1, -1);\r\n        var back_right = new frontend_utils_1.Point(-1, -1);\r\n        var back_right_block_pos = new frontend_utils_1.Point(-1, -1);\r\n        front_left_block_pos = this.board.getPointFromCoordinates(X_coor + 1, Y_coor + 1);\r\n        front_right_block_pos = this.board.getPointFromCoordinates(X_coor - 1, Y_coor + 1);\r\n        back_left_block_pos = this.board.getPointFromCoordinates(X_coor + 1, Y_coor - 1);\r\n        back_right_block_pos = this.board.getPointFromCoordinates(X_coor - 1, Y_coor - 1);\r\n        // 没有堵象眼的阻碍才能走\r\n        try {\r\n            if (!front_left_block_pos.piece)\r\n                front_left = this.board.getPointFromCoordinates(X_coor + 2, Y_coor + 2);\r\n        }\r\n        catch (e) {\r\n        }\r\n        try {\r\n            if (!front_right_block_pos.piece)\r\n                front_right = this.board.getPointFromCoordinates(X_coor - 2, Y_coor + 2);\r\n        }\r\n        catch (e) {\r\n        }\r\n        try {\r\n            if (!back_left_block_pos.piece)\r\n                back_left = this.board.getPointFromCoordinates(X_coor + 2, Y_coor - 2);\r\n        }\r\n        catch (e) {\r\n        }\r\n        try {\r\n            if (!back_right_block_pos.piece)\r\n                back_right = this.board.getPointFromCoordinates(X_coor - 2, Y_coor - 2);\r\n        }\r\n        catch (e) {\r\n        }\r\n        var movable_points_in_this_column = [];\r\n        //  __ __   \r\n        // |__|__|\r\n        // |__|__|\r\n        // \r\n        console.log(\"++++++++++++++++++++++ debug +++++++++++++++++++++++\");\r\n        // 面前的格子\r\n        if (front_left && this.isValidPosition(front_left)) {\r\n            movable_points_in_this_column.push(front_left);\r\n        }\r\n        // \r\n        if (front_right && this.isValidPosition(front_right)) {\r\n            movable_points_in_this_column.push(front_right);\r\n        }\r\n        if (back_left && this.isValidPosition(back_left)) {\r\n            movable_points_in_this_column.push(back_left);\r\n        }\r\n        if (back_right && this.isValidPosition(back_right)) {\r\n            console.log(back_right.getPiece());\r\n            movable_points_in_this_column.push(back_right);\r\n        }\r\n        return movable_points_in_this_column;\r\n    };\r\n    return WarElephant;\r\n}(ChessPiece_1.Piece));\r\nvar BlackWarElephant = /** @class */ (function (_super) {\r\n    __extends(BlackWarElephant, _super);\r\n    function BlackWarElephant(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.BLACK) || this;\r\n        _this.elem.src = '../img/pieces/black-xiang.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        $(_this.elem).on('click', function () {\r\n            _super.prototype.movablePoints.call(_this);\r\n        });\r\n        return _this;\r\n    }\r\n    BlackWarElephant.prototype.isValidPosition = function (targetPoint) {\r\n        // 无法渡河\r\n        if (targetPoint.getY() <= 5) {\r\n            return true;\r\n        }\r\n        // 以上条件不满足，则return false.\r\n        return false;\r\n    };\r\n    return BlackWarElephant;\r\n}(WarElephant));\r\nexports.BlackWarElephant = BlackWarElephant;\r\nvar RedWarElephant = /** @class */ (function (_super) {\r\n    __extends(RedWarElephant, _super);\r\n    function RedWarElephant(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.RED) || this;\r\n        _this.elem.src = '../img/pieces/red-xiang.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        $(_this.elem).on('click', function () {\r\n            _super.prototype.movablePoints.call(_this);\r\n        });\r\n        return _this;\r\n    }\r\n    RedWarElephant.prototype.isValidPosition = function (targetPoint) {\r\n        // 无法渡河\r\n        if (targetPoint.getY() >= 6) {\r\n            return true;\r\n        }\r\n        // 以上条件不满足，则return false.\r\n        return false;\r\n    };\r\n    return RedWarElephant;\r\n}(WarElephant));\r\nexports.RedWarElephant = RedWarElephant;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PlayerColor = exports.SIDE_LENGTH_vw = exports.SIDE_LENGTH = exports.Point = exports.fitSize = exports.getChessBoardSize = exports.getZoomedRatio = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\n// // used in class Piece\r\n// enum PieceColor {\r\n//     'black',\r\n//     'red'\r\n// }\r\n// used in class Game, \r\nvar PlayerColor;\r\n(function (PlayerColor) {\r\n    PlayerColor[PlayerColor[\"BLACK\"] = 0] = \"BLACK\";\r\n    PlayerColor[PlayerColor[\"RED\"] = 1] = \"RED\";\r\n    PlayerColor[PlayerColor[\"NEUTRAL\"] = 2] = \"NEUTRAL\";\r\n    PlayerColor[PlayerColor[\"SPECTATOR\"] = 3] = \"SPECTATOR\"; // Cannot control either side. 双方都不可以控制\r\n})(PlayerColor || (PlayerColor = {}));\r\nexports.PlayerColor = PlayerColor;\r\n// 得到当前的放大倍率\r\nfunction getZoomedRatio() {\r\n    var ratio = 0;\r\n    if (window.devicePixelRatio !== undefined) {\r\n        ratio = window.devicePixelRatio;\r\n    }\r\n    else if (window.outerWidth !== undefined && window.innerWidth !== undefined) {\r\n        ratio = window.outerWidth / window.innerWidth;\r\n    }\r\n    if (ratio) {\r\n        ratio = Math.round(ratio * 100);\r\n    }\r\n    return ratio;\r\n}\r\nexports.getZoomedRatio = getZoomedRatio;\r\n// 得到棋盘的当前大小\r\nfunction getChessBoardSize() {\r\n    Util_1.default.trace('chessboard size:');\r\n    var chessboard = $('#id_chessboard');\r\n    Util_1.default.trace('chessboad width');\r\n    Util_1.default.trace(chessboard.css('width'));\r\n    Util_1.default.trace('chessboad height');\r\n    Util_1.default.trace(chessboard.css('height'));\r\n}\r\nexports.getChessBoardSize = getChessBoardSize;\r\n// The vertical lines are known as files (Chinese: 路; pinyin: lù; \"road\")\r\n// the horizontal lines are known as ranks 线 xiàn; \"line\"\r\nvar Point = /** @class */ (function () {\r\n    function Point(col, row) {\r\n        // this.board = board;\r\n        this.x_coor = col; //col -> verticle\r\n        this.y_coor = row; //row -> horizontal\r\n        // A dummy element for initialization first and then update in method\r\n        this.elem = document.createElement('div');\r\n        this.updateElement(col, row);\r\n    }\r\n    /** when piece moves in\r\n        it binds the piece with the grid.\r\n        notice when the piece is moving out from a grid\r\n        the piece should be set to null.\r\n        @param piece: a nullable Piece object\r\n    */\r\n    Point.prototype.setPiece = function (piece) {\r\n        this.piece = piece;\r\n    };\r\n    // 判断点上是否有棋子\r\n    Point.prototype.hasPiece = function () {\r\n        return this.piece ? true : false;\r\n    };\r\n    //gets the piece in the current grid\r\n    Point.prototype.getPiece = function () {\r\n        return this.piece;\r\n    };\r\n    Point.prototype.getX = function () {\r\n        return this.x_coor;\r\n    };\r\n    Point.prototype.getY = function () {\r\n        return this.y_coor;\r\n    };\r\n    // 更新渲染\r\n    Point.prototype.updateElement = function (newCol, newRow) {\r\n        var grid_div = this.elem;\r\n        var oldCol = this.x_coor;\r\n        var oldRow = this.y_coor;\r\n        /* code previously found in board initialization, with div_2d_array\r\n           now divs are bound to specific points.\r\n        */\r\n        grid_div.id = \"grid_div_\" + oldCol + \"_\" + oldRow;\r\n        $(\"#\" + grid_div.id).remove(); //must remove the original one, in order to make it unique.\r\n        grid_div.className = 'className_grid_div';\r\n        $(grid_div).css('grid-column', newCol);\r\n        $(grid_div).css('grid-row', newRow);\r\n        $('#board').append(grid_div);\r\n        // this.board.intersections[newCol-1][newRow-1] = this; //replace the original point with the newly updated point.\r\n    };\r\n    return Point;\r\n}());\r\nexports.Point = Point;\r\n//how many px when it's zoomed 100%\r\nvar SIDE_LENGTH = 75;\r\nexports.SIDE_LENGTH = SIDE_LENGTH;\r\nvar SIDE_LENGTH_vw = 70 / (getZoomedRatio() * 0.01);\r\nexports.SIDE_LENGTH_vw = SIDE_LENGTH_vw;\r\n/**\r\n * 固定大小用的function\r\n *\r\n*/\r\nfunction fitSize() {\r\n    var board = $('#board');\r\n    $.when(board)\r\n        //fiting size for the board\r\n        .then(function () {\r\n        console.log('background-size');\r\n        console.log(board.css('background-size'));\r\n        board.css('width', board.css('height'));\r\n        board.css('height', board.css('width'));\r\n        // board.css('row-gap','0px')\r\n        board.css('column-gap', '0px');\r\n        console.log(board.css('row-gap'));\r\n    })\r\n        //fiting sizes for the grids\r\n        .then(function () {\r\n        $('.className_grid_div').css('width', parseInt(board.css('width')) / 11);\r\n        $('.className_grid_div').css('height', parseInt(board.css('height')) / 10);\r\n        $('.className_grid_div').css('z-index', 10);\r\n        $('.className_grid_div').css('margin', 0);\r\n        console.log(\"board.css++++++++++++++++++++++++++\");\r\n        console.log($('.className_grid_div').css('width'));\r\n        $('#board').css(\"grid-template-columns\", \"repeat(9,\" + $('.className_grid_div').css('width') + \")\");\r\n        // $('#board').css(\"grid-column-gap\", '0.3em');\r\n        $('#board').css(\"column-gap\", '0.3em');\r\n        $('#board').css('justify-content', 'center');\r\n    })\r\n        //fiting sizes for the pieces\r\n        .then(function () {\r\n        $('.pieces').css('width', parseInt($('.className_grid_div').css('width')));\r\n        $('.pieces').css('height', parseInt($('.className_grid_div').css('width')));\r\n    })\r\n        .then(function () {\r\n        board.css('max-width', board.css('height'));\r\n    });\r\n}\r\nexports.fitSize = fitSize;\r\n","\"use strict\";\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Log = /** @class */ (function () {\r\n    function Log() {\r\n    }\r\n    Log.trace = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.log.apply(console, __spreadArrays([\"<T> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.info = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.info.apply(console, __spreadArrays([\"<I> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.warn = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.warn.apply(console, __spreadArrays([\"<W> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.error = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.error.apply(console, __spreadArrays([\"<E> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.test = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.log.apply(console, __spreadArrays([\"<X> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    return Log;\r\n}());\r\nexports.default = Log;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module\n__webpack_require__(20);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}