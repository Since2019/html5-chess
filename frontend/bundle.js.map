{"version":3,"sources":["webpack://html5-chess/./frontend/src/Boards.ts","webpack://html5-chess/./frontend/src/Chariot.ts","webpack://html5-chess/./frontend/src/ChessPiece.ts","webpack://html5-chess/./frontend/src/Game.ts","webpack://html5-chess/./frontend/src/General.ts","webpack://html5-chess/./frontend/src/frontend-utils.ts","webpack://html5-chess/./src/Util.ts","webpack://html5-chess/webpack/bootstrap","webpack://html5-chess/webpack/startup"],"names":["Object","defineProperty","exports","value","Board","frontend_utils_1","this","ratio","side_length","SIDE_LENGTH","target_coordinate","intersections","Array","i","j","Point","prototype","movePieceFromSrcToDest","piece","point_source","point_dest","setPiece","moveToPoint","getPointFromCoordinates","x_coor","y_coor","validateXCoordinate","validateYCoordinate","getCoordinateFromElemId","id","console","log","split_arr","split","coor_x","coor_y","parseInt","x","y","getRowFromYCoordinate","row","push","getColFromXCoordinate","col","detectZoom","undefined","window","devicePixelRatio","outerWidth","innerWidth","Math","round","render","board","$","css","on","fitSize","document","extendStatics","__extends","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","call","__","constructor","create","__importDefault","mod","__esModule","BlackChariot","RedChariot","Util_1","ChessPiece_1","Chariot","_super","point","color","PieceRole","General","canMove","dest","isValidChariotPosition","abs","checkSameColorPieceInPoint","Piece","_this","PieceColor","RED","elem","src","movablePoints","moveable_points","concat","checkRow","checkColumn","default","trace","Y_coor","piece_col","start_flag","end_flag","index","movable_points_in_this_column","X_coor","piece_row","movable_points_in_this_row","BLACK","isFriendly","PlayerColor","role","active","piece_role","createElement","state","e","preventDefault","listenerManager","attachSelectPieceListener","forEach","active_piece","setTimeout","attachMoveToGridListener","target","next_x_coor","next_y_coor","removeMoveToGridListener","off","getElement","getRole","getColor","remove","append","getPiece","isEnemy","addClass","toString","adjustResize","screen","width","getChessBoardSize","getZoomedRatio","Boards_1","Chariot_1","General_1","Game","currentPlayer","getCurrentPlayer","alternatePlayer","RedGeneral","BlackGeneral","red_ju_one","red_ju_two","black_ju_one","black_ju_two","isValidGeneralPosition","checkColumns","front","checkRows","SIDE_LENGTH_vw","chessboard","updateElement","hasPiece","newCol","newRow","grid_div","oldCol","oldRow","className","when","then","__spreadArrays","s","il","arguments","length","r","k","a","jl","Log","msg","_i","apply","Date","toLocaleString","info","warn","error","test","__webpack_module_cache__","__webpack_require__","moduleId","module","__webpack_modules__"],"mappings":"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","file":"bundle.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Board = void 0;\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\n// 棋盘\r\nvar Board = /** @class */ (function () {\r\n    function Board() {\r\n        this.ratio = 100; //default ratio 100%\r\n        this.side_length = this.ratio * 0.01 * frontend_utils_1.SIDE_LENGTH;\r\n        // 玩家选择的下一个位置\r\n        this.target_coordinate = [-1, -1];\r\n        //A.K.A points.\r\n        this.intersections = new Array();\r\n        for (var i = 0; i < 9; i++) {\r\n            this.intersections[i] = [];\r\n            for (var j = 0; j < 10; j++) {\r\n                // 1 2 3 4 5 6 7 8 9\r\n                // 2\r\n                // 3\r\n                // 4\r\n                // 5\r\n                // 6\r\n                // 7\r\n                // 8\r\n                // 9\r\n                // 10\r\n                this.intersections[i][j] = (new frontend_utils_1.Point((i + 1), (j + 1)));\r\n            }\r\n        }\r\n    }\r\n    //invokes functions in Piece and Point simutaniously\r\n    Board.prototype.movePieceFromSrcToDest = function (piece, point_source, point_dest) {\r\n        point_source.setPiece(null); //the piece is moving out to another grid, so it's set to null.\r\n        piece.moveToPoint(point_dest); // the piece now knows which new place it's in\r\n        point_dest.setPiece(piece); // the point the piece moves in knows which piece it's receiving.\r\n    };\r\n    //get a specific point from coordinates\r\n    Board.prototype.getPointFromCoordinates = function (x_coor, y_coor) {\r\n        if (!this.validateXCoordinate(x_coor) || !this.validateYCoordinate(y_coor))\r\n            return null;\r\n        return this.intersections[x_coor - 1][y_coor - 1];\r\n    };\r\n    // 从HTML Element的ID中获取坐标\r\n    Board.prototype.getCoordinateFromElemId = function (id) {\r\n        // grid_div_5_6\r\n        console.log(id);\r\n        var split_arr = id.split('_');\r\n        var coor_x = split_arr[2];\r\n        var coor_y = split_arr[3];\r\n        return [parseInt(coor_x), parseInt(coor_y)];\r\n    };\r\n    // Check for valid x coordinate\r\n    Board.prototype.validateXCoordinate = function (x) {\r\n        return x >= 1 && x <= 9;\r\n    };\r\n    // Check for valid y coordinate\r\n    Board.prototype.validateYCoordinate = function (y) {\r\n        return y >= 1 && y <= 10;\r\n    };\r\n    //get a row from y_coor(nth row)\r\n    Board.prototype.getRowFromYCoordinate = function (y_coor) {\r\n        var row = [];\r\n        for (var i = 0; i < 9; i++) {\r\n            row.push(this.intersections[i][y_coor - 1]);\r\n        }\r\n        return row;\r\n    };\r\n    //get a column from x_coor(nth col)\r\n    Board.prototype.getColFromXCoordinate = function (x_coor) {\r\n        var col = [];\r\n        for (var j = 0; j < 10; j++) {\r\n            col.push(this.intersections[x_coor - 1][j]);\r\n        }\r\n        return col;\r\n    };\r\n    Board.prototype.detectZoom = function () {\r\n        var ratio = 0;\r\n        if (window.devicePixelRatio !== undefined) {\r\n            ratio = window.devicePixelRatio;\r\n        }\r\n        // ???? not working, why?\r\n        // else if (~ua.indexOf('msie')) {\r\n        //     if (screen.deviceXDPI && screen.logicalXDPI) {\r\n        //         ratio = screen.deviceXDPI / screen.logicalXDPI;\r\n        //     }\r\n        // }\r\n        else if (window.outerWidth !== undefined && window.innerWidth !== undefined) {\r\n            ratio = window.outerWidth / window.innerWidth;\r\n        }\r\n        if (ratio) {\r\n            ratio = Math.round(ratio * 100);\r\n        }\r\n        this.ratio = ratio;\r\n    };\r\n    Board.prototype.render = function () {\r\n        var board = $('#board');\r\n        // $(board).css('height', 'fit-content');\r\n        $(\"#id_chessboard\").css(\"position\", \"fixed\");\r\n        $(\"#id_chessboard\").css(\"max-height\", '100vh');\r\n        // $(\"#board\").css(\"left\", \"0px\");\r\n        $(\"#id_chessboard\").css(\"margin\", \"0\");\r\n        $(\"#id_chessboard\").css(\"padding\", \"0vw\");\r\n        board.css('margin-left', 'auto');\r\n        board.css('margin-right', 'auto');\r\n        board.css('padding', 0);\r\n        //for testing purposes, added some color to the background\r\n        $('.className_grid_div').css('background-color', 'rgba(255,0,0,0.3)');\r\n        //fits the size when resizing\r\n        $(window).on('resize', function () {\r\n            frontend_utils_1.fitSize();\r\n        });\r\n        //fixed the size issue upon entry\r\n        $(document).on('ready', function () {\r\n            frontend_utils_1.fitSize();\r\n        });\r\n        $(\"#board\").css(\"max-width\", \"100vh\");\r\n    };\r\n    return Board;\r\n}());\r\nexports.Board = Board;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BlackChariot = exports.RedChariot = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar Chariot = /** @class */ (function (_super) {\r\n    __extends(Chariot, _super);\r\n    function Chariot(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.General, color) || this;\r\n    }\r\n    Chariot.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the dest is not inside of the \"田\" shaped space of the board\r\n        //Returns false.\r\n        if (!this.isValidChariotPosition(x, y))\r\n            return false;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    return Chariot;\r\n}(ChessPiece_1.Piece));\r\nvar RedChariot = /** @class */ (function (_super) {\r\n    __extends(RedChariot, _super);\r\n    function RedChariot(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PieceColor.RED) || this;\r\n        _this.elem.src = '../img/pieces/red-ju.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        $(_this.elem).on('click', function () {\r\n            // Log.trace(\"invoked this.checkColumns()\")\r\n            // Log.trace(this.checkColumn())\r\n            // Log.trace(this.checkRow())\r\n            _this.movablePoints();\r\n        });\r\n        return _this;\r\n    }\r\n    RedChariot.prototype.movablePoints = function () {\r\n        // Log.trace('inside this.movablePoints()')\r\n        var moveable_points = [];\r\n        // moveable_points.length = 0;\r\n        moveable_points = moveable_points.concat(this.checkRow());\r\n        moveable_points = moveable_points.concat(this.checkColumn());\r\n        // Log.trace('moveable_points is empty here !!!!')\r\n        // Log.trace(moveable_points)\r\n        return moveable_points;\r\n    };\r\n    //returns the grids that General can go in a column\r\n    RedChariot.prototype.checkColumn = function () {\r\n        Util_1.default.trace(\"in checkColumns\");\r\n        var Y_coor = this.point.y_coor;\r\n        var X_coor = this.point.x_coor;\r\n        var piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0; //row 1\r\n        var end_flag = 9; //row 10 \r\n        //trasversing the column (Point [])\r\n        for (var index in piece_col) {\r\n            //if the piece in that point is not null, do some checking\r\n            if (piece_col[index].piece != null) {\r\n                //checks the indices that are smaller than the point\r\n                if (parseInt(index) < Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PieceColor.RED)\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === Y_coor - 1) // if a friendly piece is blocking right abovbe it\r\n                        start_flag = Y_coor; // start_flag is set to the next row \r\n                    // Log.trace(\"start_flag:\" + start_flag)\r\n                }\r\n                //checks those larger than that point\r\n                else if (parseInt(index) > Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PieceColor.RED)\r\n                        end_flag = parseInt(index) - 1; // the index is not added, but the last one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === Y_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = Y_coor - 2; // start_flag is set to the next row \r\n                    // Log.trace(\"end_flag:\" + end_flag)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_column = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (Y_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_column.push(piece_col[i]);\r\n        }\r\n        return movable_points_in_this_column;\r\n        // console.log(this.board.getColFromXCoordinate(X_coor));\r\n    };\r\n    //returns the grids that the General can go in a row\r\n    RedChariot.prototype.checkRow = function () {\r\n        Util_1.default.trace(\"in checkRows()\");\r\n        // let Y_coor = this.point.y_coor\r\n        var X_coor = this.point.x_coor;\r\n        // let piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0;\r\n        var end_flag = 8;\r\n        //trasversing the column (Point [])\r\n        for (var index in piece_row) {\r\n            //if the piece in that point is not null, do some checking\r\n            if (piece_row[index].piece != null) {\r\n                //checks the indices that are smaller than the point\r\n                if (parseInt(index) < X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].piece.color == ChessPiece_1.PieceColor.RED)\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === X_coor - 1) // if a friendly piece is blocking right abovbe it\r\n                        start_flag = X_coor; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"start_flag:\" + start_flag);\r\n                }\r\n                //checks those larger than that point\r\n                else if (parseInt(index) > X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].piece.color == ChessPiece_1.PieceColor.RED)\r\n                        end_flag = parseInt(index) - 1; // the index is not added, but the last one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === X_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = X_coor - 2; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"end_flag:\" + end_flag);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_row = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (X_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_row.push(piece_row[i]);\r\n        }\r\n        return movable_points_in_this_row;\r\n    };\r\n    RedChariot.prototype.isValidChariotPosition = function (x, y) {\r\n        return (y >= 8) && (y <= 10) && (x >= 4) && (x <= 6) && !(x > 0 && y > 0);\r\n    };\r\n    return RedChariot;\r\n}(Chariot));\r\nexports.RedChariot = RedChariot;\r\nvar BlackChariot = /** @class */ (function (_super) {\r\n    __extends(BlackChariot, _super);\r\n    function BlackChariot(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PieceColor.BLACK) || this;\r\n        _this.elem.src = '../img/pieces/black-ju.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    BlackChariot.prototype.movablePoints = function () {\r\n        // Log.trace('inside this.movablePoints()')\r\n        var moveable_points = [];\r\n        // moveable_points.length = 0;\r\n        moveable_points = moveable_points.concat(this.checkRow());\r\n        moveable_points = moveable_points.concat(this.checkColumn());\r\n        // Log.trace('moveable_points is empty here !!!!')\r\n        // Log.trace(moveable_points)\r\n        return moveable_points;\r\n    };\r\n    //returns the grids that General can go in a column\r\n    BlackChariot.prototype.checkColumn = function () {\r\n        Util_1.default.trace(\"in checkColumns\");\r\n        var Y_coor = this.point.y_coor;\r\n        var X_coor = this.point.x_coor;\r\n        var piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0; //row 1\r\n        var end_flag = 9; //row 10 \r\n        //trasversing the column (Point [])\r\n        for (var index in piece_col) {\r\n            //if the piece in that point is not null, do some checking\r\n            if (piece_col[index].piece != null) {\r\n                //checks the indices that are smaller than the point\r\n                if (parseInt(index) < Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PieceColor.BLACK)\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === Y_coor - 1) // if a friendly piece is blocking right abovbe it\r\n                        start_flag = Y_coor; // start_flag is set to the next row \r\n                    // Log.trace(\"start_flag:\" + start_flag)\r\n                }\r\n                //checks those larger than that point\r\n                else if (parseInt(index) > Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PieceColor.BLACK)\r\n                        end_flag = parseInt(index) - 1; // the index is not added, but the last one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === Y_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = Y_coor - 2; // start_flag is set to the next row \r\n                    // Log.trace(\"end_flag:\" + end_flag)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_column = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (Y_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_column.push(piece_col[i]);\r\n        }\r\n        console.log(movable_points_in_this_column);\r\n        return movable_points_in_this_column;\r\n        // console.log(this.board.getColFromXCoordinate(X_coor));\r\n    };\r\n    //returns the grids that the General can go in a row\r\n    BlackChariot.prototype.checkRow = function () {\r\n        Util_1.default.trace(\"in checkRows()\");\r\n        // let Y_coor = this.point.y_coor\r\n        var X_coor = this.point.x_coor;\r\n        // let piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0;\r\n        var end_flag = 8;\r\n        //trasversing the column (Point [])\r\n        for (var index in piece_row) {\r\n            //if the piece in that point is not null, do some checking\r\n            if (piece_row[index].piece != null) {\r\n                //checks the indices that are smaller than the point\r\n                if (parseInt(index) < X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].piece.isFriendly())\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === X_coor - 1) // if a friendly piece is blocking right abovbe it\r\n                        start_flag = X_coor; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"start_flag:\" + start_flag);\r\n                }\r\n                //checks those larger than that point\r\n                else if (parseInt(index) > X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].piece.isFriendly())\r\n                        end_flag = parseInt(index) - 1; // Friendly blocking: the index is not added, but the previous one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === X_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = X_coor - 2; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"end_flag:\" + end_flag);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_row = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (X_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_row.push(piece_row[i]);\r\n        }\r\n        console.log(movable_points_in_this_row);\r\n        return movable_points_in_this_row;\r\n    };\r\n    BlackChariot.prototype.isValidChariotPosition = function (x, y) {\r\n        return (y >= 0) && (y <= 10) && (x >= 0) && (x <= 9) && !(x > 0 && y > 0);\r\n    };\r\n    return BlackChariot;\r\n}(Chariot));\r\nexports.BlackChariot = BlackChariot;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PieceColor = exports.PieceRole = exports.Piece = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\n// used in class Piece\r\n// 棋子颜色\r\nvar PieceColor;\r\n(function (PieceColor) {\r\n    PieceColor[PieceColor[\"BLACK\"] = 0] = \"BLACK\";\r\n    PieceColor[PieceColor[\"RED\"] = 1] = \"RED\";\r\n})(PieceColor || (PieceColor = {}));\r\nexports.PieceColor = PieceColor;\r\n// used in class Game, \r\n// 玩家颜色\r\nvar PlayerColor;\r\n(function (PlayerColor) {\r\n    PlayerColor[PlayerColor[\"black\"] = 0] = \"black\";\r\n    PlayerColor[PlayerColor[\"red\"] = 1] = \"red\";\r\n})(PlayerColor || (PlayerColor = {}));\r\n// 棋子类型\r\nvar PieceRole;\r\n(function (PieceRole) {\r\n    PieceRole[PieceRole[\"General\"] = 0] = \"General\";\r\n    PieceRole[PieceRole[\"Advisor\"] = 1] = \"Advisor\";\r\n    PieceRole[PieceRole[\"Elephant\"] = 2] = \"Elephant\";\r\n    PieceRole[PieceRole[\"Chariot\"] = 3] = \"Chariot\";\r\n    PieceRole[PieceRole[\"Horse\"] = 4] = \"Horse\";\r\n    PieceRole[PieceRole[\"Cannon\"] = 5] = \"Cannon\";\r\n    PieceRole[PieceRole[\"Soldier\"] = 6] = \"Soldier\";\r\n})(PieceRole || (PieceRole = {}));\r\nexports.PieceRole = PieceRole;\r\nvar Piece = /** @class */ (function () {\r\n    function Piece(point, board, role, color) {\r\n        // 与移动相关      \r\n        this.point = point; // 被置于某个点\r\n        // this.has_moved = false;                              // 是否已经被移动\r\n        this.active = false; // 是否被选中\r\n        // 与棋子属性相关\r\n        this.board = board;\r\n        this.piece_role = role;\r\n        this.color = color;\r\n        this.elem = document.createElement(\"img\");\r\n        // 与棋子大小有关\r\n        this.ratio = 100; // TODO:放大倍率 ?\r\n        this.side_length = this.ratio * 0.01 * frontend_utils_1.SIDE_LENGTH; // 棋子的边长\r\n        // 0 -> not selected\r\n        // 1 -> selected, not moved\r\n        // 2 -> moved, refesh state to 0\r\n        this.state = 0;\r\n        $(window).on('mousedown', function (e) {\r\n            e.preventDefault(); //get rid of non-game experience (selecting pictures and stuff)\r\n        });\r\n        $(window).on('change', function (e) {\r\n            e.preventDefault(); //get rid of non-game experience (selecting pictures and stuff)\r\n            console.log('changed');\r\n        });\r\n        // 运行这个，就会把所有的Listener都加上\r\n        this.listenerManager();\r\n    }\r\n    Piece.prototype.listenerManager = function () {\r\n        this.attachSelectPieceListener();\r\n        // this.attachMoveToGridListener()\r\n        // this.removeMoveToGridListener()\r\n    };\r\n    /**\r\n     *  I. When the player clicks on a piece,\r\n     *  The listener invokes the method to determine movable grids,\r\n     *  then it highlights all the grids\r\n     */\r\n    Piece.prototype.attachSelectPieceListener = function () {\r\n        var _this = this;\r\n        // 点击了棋子的img之后\r\n        $(this.elem).on('click', function (e) {\r\n            console.log('点击了棋子：');\r\n            console.log(_this.elem);\r\n            e.preventDefault();\r\n            // 1. clearing all the colored background first:\r\n            $('.className_grid_div').css('background', 'rgba(3, 181, 252,0.0)');\r\n            // 2. put all the movalbe positions into an array\r\n            var movable_points = [];\r\n            movable_points = _this.movablePoints();\r\n            // console.log(movable_points)\r\n            // 3. highlight all the movalbe positions\r\n            movable_points.forEach(function (point) {\r\n                $(point.elem).css('background', 'rgba(3, 181, 252,0.5');\r\n            });\r\n            // 设置自己被选中，告知棋盘选中的是自己\r\n            _this.active = true;\r\n            _this.board.active_piece = _this;\r\n            // TODO:找到ListenerManager的问题所在，并且把这个移动到那里面。\r\n            // 下一步是Move To Grid\r\n            setTimeout(function () {\r\n                _this.attachMoveToGridListener();\r\n            }, 100);\r\n        });\r\n    };\r\n    /**\r\n     *  II. once the user has selected the piece,\r\n     *  a listener is attached to the grid to check\r\n     *  which grid the user is moving to\r\n     *\r\n     *  选择了棋子之后 再选择移动到哪个格子\r\n     */\r\n    Piece.prototype.attachMoveToGridListener = function () {\r\n        var _this = this;\r\n        console.log(this.point);\r\n        //3. attach another listener which listens to the next click:\r\n        $('.className_grid_div').on('click', function (e) {\r\n            console.log(\"\\u70B9\\u51FB\\u4E86\\u683C\\u5B50:\");\r\n            console.log(e.target);\r\n            //if the piece is selected\r\n            if (_this.board.active_piece) {\r\n                console.log('the piece is selected?' + _this.active);\r\n                console.log(\"active piece:\");\r\n                console.log(_this.board.active_piece);\r\n                console.log(_this.board.target_coordinate);\r\n                // 点击了坐标：\r\n                console.log(\"点击了坐标:\");\r\n                console.log(_this.board.target_coordinate);\r\n                _this.board.target_coordinate = _this.board.getCoordinateFromElemId(e.target.id);\r\n                console.log(_this.board.target_coordinate);\r\n                // 如果不是 [-1, -1], 说明玩家选择了某个格子\r\n                if (_this.board.target_coordinate[0] != -1 && _this.board.target_coordinate[1] != -1) {\r\n                    console.log(_this.board.target_coordinate);\r\n                    var next_x_coor = _this.board.target_coordinate[0];\r\n                    var next_y_coor = _this.board.target_coordinate[1];\r\n                    // 棋子属性、Element移动到目标点\r\n                    _this.board.active_piece.moveToPoint(_this.board.getPointFromCoordinates(next_x_coor, next_y_coor));\r\n                    $('.className_grid_div').css('background', 'rgba(0,0,0,0.0)'); // setting back the background to non-colored and transparent\r\n                    // // 棋子Element移动到目标点\r\n                    // this.elem   \r\n                    _this.board.target_coordinate = [-1, -1]; // 重新归[-1, -1]\r\n                    // this.board.active_piece = null as any;   // 没有active棋子了\r\n                    _this.active = false; // 棋子状态为不再选中\r\n                    console.log('the piece is selected?' + _this.active);\r\n                    console.log(\"active piece:\");\r\n                    console.log(_this.board.active_piece);\r\n                    console.log(_this.board.target_coordinate);\r\n                }\r\n            }\r\n            // 还没有选中棋子\r\n            else {\r\n                console.log(\"还没有选择棋子......\");\r\n                console.log('the piece is selected?' + _this.active);\r\n                console.log('doing nothing');\r\n                // 既然已经确认了要走到那里，就要移动到指定的格子。\r\n                $('.className_grid_div').css('background', 'rgba(0,0,0,0.0)'); // setting back the background to non-colored and transparent\r\n            }\r\n            _this.removeMoveToGridListener();\r\n            // $('.className_grid_div').unbind('click');  // HACK after clicking, we need to get rid of the listener\r\n            // $('.className_grid_div').css('background', 'rgba(0,0,0,0.0)') // setting back the background to non-colored and transparent\r\n        });\r\n    };\r\n    //upon finishing the listener, it removes the listener from the grid\r\n    Piece.prototype.removeMoveToGridListener = function () {\r\n        this.board.active_piece = null;\r\n        //4. remove the click listener from the grids\r\n        console.log('已经点击了移动目标格,现在移除MoveToGridListener');\r\n        $('.className_grid_div').off('click'); // after clicking, we need to get rid of the listener\r\n        $('.className_grid_div').css('background', 'rgba(0,0,0,0.0)'); // setting back the background to non-colored and transparent\r\n        // $('.className_grid_div').on('click', (e) => {\r\n        // })\r\n    };\r\n    Piece.prototype.movablePoints = function () {\r\n        Util_1.default.trace('movable points of a piece');\r\n        return [];\r\n    };\r\n    Piece.prototype.getElement = function () {\r\n        return this.elem;\r\n    };\r\n    Piece.prototype.getRole = function () {\r\n        return this.piece_role;\r\n    };\r\n    Piece.prototype.getColor = function () {\r\n        return this.color;\r\n    };\r\n    //sets the point of the piece\r\n    Piece.prototype.moveToPoint = function (point) {\r\n        // 删除原来的元素\r\n        this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].elem.remove(this.elem);\r\n        // 更换到新的点\r\n        this.point = point;\r\n        this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].elem.append(this.elem);\r\n        console.log(this.board.intersections);\r\n        console.log(this.point);\r\n        console.log(this.point.x_coor);\r\n        console.log(this.point.y_coor);\r\n    };\r\n    /**\r\n     * @param point Check if a point has a piece with the same side\r\n     *\r\n     */\r\n    Piece.prototype.checkSameColorPieceInPoint = function (point) {\r\n        var piece = point.getPiece();\r\n        if (!piece) {\r\n            return false;\r\n        }\r\n        return piece.getColor() === this.color;\r\n    };\r\n    /**\r\n * @param point Check if a point has a piece with the same side\r\n *\r\n */\r\n    Piece.prototype.isFriendly = function (piece) {\r\n        if (!piece) {\r\n            return false;\r\n        }\r\n        return piece.getColor() === this.color;\r\n    };\r\n    Piece.prototype.isEnemy = function (piece) {\r\n        if (!piece) {\r\n            return false;\r\n        }\r\n        return piece.getColor() != this.color;\r\n    };\r\n    Piece.prototype.render = function () {\r\n        this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].elem.append(this.elem); // encapsulates the next line of code;\r\n        $(this.elem).addClass('pieces');\r\n        //add className for the HTML <img> of the piece - PieceRole\r\n        $(this.elem).addClass(PieceRole[this.piece_role].toString());\r\n        //add className for the HTML <img> of the piece - PieceColor\r\n        $(this.elem).addClass(PieceColor[this.color].toString());\r\n        // $(window).on('resize',Piece.adjustResize);\r\n        // $(this.elem)\r\n        //     .on('mousedown',function () {\r\n        //         isDragging = false;\r\n        //         console.log(isDragging)\r\n        //     })\r\n        //     .on('mousemove',function () {\r\n        //         isDragging = true;\r\n        //         console.log(isDragging)\r\n        //     })\r\n        //     .on('mouseup',function () {\r\n        //         var wasDragging = isDragging;\r\n        //         isDragging = false;\r\n        //         console.log(isDragging)\r\n        //         if (!wasDragging) {\r\n        //             console.log('dragging')\r\n        //             $(\"#throbble\").toggle();\r\n        //         }\r\n        //     });\r\n        // TODO: click events:\r\n    };\r\n    // 调整棋盘、棋子的大小\r\n    Piece.adjustResize = function () {\r\n        if (screen.width == window.innerWidth) {\r\n            console.log(\"at exact 100%\");\r\n            frontend_utils_1.getChessBoardSize(); // 判断棋盘的大小\r\n            $('.className_grid_div').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100)); // 更新棋盘的宽度\r\n            $('.className_grid_div').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100)); // 更新棋盘的高度\r\n            $('.pieces').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100)); // 更新棋子的高度\r\n            $('.pieces').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100)); // 更新棋子的宽度\r\n            $(\"#board\").css(\"width\", $(\"#board\").css('height'));\r\n            $(\"#id_chessboard\").css(\"width\", $(\"#board\").css('width')); // 棋盘的宽度和高度统一 \r\n        }\r\n        else if (screen.width > window.innerWidth) {\r\n            console.log(\"you have zoomed in the page i.e more than 100%\");\r\n            frontend_utils_1.getZoomedRatio();\r\n            frontend_utils_1.getChessBoardSize();\r\n            $('.className_grid_div').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.className_grid_div').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $(\"#board\").css(\"width\", $(\"#board\").css('height'));\r\n            $(\"#id_chessboard\").css(\"width\", $(\"#board\").css('width'));\r\n        }\r\n        else {\r\n            console.log(\"you have zoomed out i.e less than 100%\");\r\n            frontend_utils_1.getZoomedRatio();\r\n            frontend_utils_1.getChessBoardSize();\r\n            var current_width = $('.className_grid_div').css('width');\r\n            $('.className_grid_div').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.className_grid_div').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $(\"#board\").css(\"width\", $(\"#board\").css('height'));\r\n            $(\"#id_chessboard\").css(\"width\", $(\"#board\").css('width'));\r\n        }\r\n    };\r\n    return Piece;\r\n}());\r\nexports.Piece = Piece;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Boards_1 = require(\"./Boards\");\r\nvar Chariot_1 = require(\"./Chariot\");\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\nvar General_1 = require(\"./General\");\r\nvar Game = /** @class */ (function () {\r\n    // Stub constructor to be a placeholder\r\n    // \r\n    function Game() {\r\n        this.currentPlayer = frontend_utils_1.PlayerColor.RED; // 先走的一方是红方  Player RED goes first.\r\n        this.board = new Boards_1.Board();\r\n    }\r\n    // gets the public player\r\n    // 获取当前玩家\r\n    Game.prototype.getCurrentPlayer = function () {\r\n        return this.currentPlayer;\r\n    };\r\n    //Switch current player to the other player\r\n    //到另一个人下\r\n    Game.prototype.alternatePlayer = function () {\r\n        if (this.currentPlayer === frontend_utils_1.PlayerColor.RED)\r\n            this.currentPlayer = frontend_utils_1.PlayerColor.BLACK;\r\n        else\r\n            this.currentPlayer = frontend_utils_1.PlayerColor.RED;\r\n    };\r\n    Game.prototype.render = function () {\r\n        this.board.render();\r\n        // ============================= 棋子初始化 Initialization of ChessPieces =====================================================\r\n        //                               先横坐标后纵坐标\r\n        //                              1 2 3 4 5 6 7 8 9\r\n        //                              2\r\n        //                              3\r\n        //                              4\r\n        //                              5\r\n        //                              6\r\n        //                              7\r\n        //                              8\r\n        //                              9\r\n        //                              10\r\n        // 将/帅   Generals:\r\n        var red_shuai = new General_1.RedGeneral(this.board, this.board.getPointFromCoordinates(5, 10)); //new Point() doesn't make sense.\r\n        red_shuai.render();\r\n        var black_jiang = new General_1.BlackGeneral(this.board, this.board.getPointFromCoordinates(5, 1)); // using getPoint from coor now\r\n        black_jiang.render();\r\n        // 红车    Red Chariots\r\n        var red_ju_one = new Chariot_1.RedChariot(this.board, this.board.getPointFromCoordinates(1, 10));\r\n        var red_ju_two = new Chariot_1.RedChariot(this.board, this.board.getPointFromCoordinates(9, 10));\r\n        // let red_ju_test = new RedChariot(this.board, this.board.getPointFromCoordinates(9,3));\r\n        // let red_ju_test2 = new RedChariot(this.board, this.board.getPointFromCoordinates(9,4));\r\n        // 黑车    Black Chariots\r\n        var black_ju_one = new Chariot_1.BlackChariot(this.board, this.board.getPointFromCoordinates(1, 1));\r\n        var black_ju_two = new Chariot_1.BlackChariot(this.board, this.board.getPointFromCoordinates(9, 1));\r\n        // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ 棋子初始化 Initialization of ChessPieces ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        // 红车\r\n        red_ju_one.render();\r\n        red_ju_two.render();\r\n        // 黑车\r\n        black_ju_one.render();\r\n        black_ju_two.render();\r\n        // red_ju_test.render();\r\n        // red_ju_test2.render();\r\n    };\r\n    return Game;\r\n}());\r\nvar game = new Game();\r\ngame.render();\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BlackGeneral = exports.RedGeneral = void 0;\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar General = /** @class */ (function (_super) {\r\n    __extends(General, _super);\r\n    function General(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.General, color) || this;\r\n    }\r\n    General.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the dest is not inside of the \"田\" shaped space of the board\r\n        //Returns false.\r\n        if (!this.isValidGeneralPosition(x, y))\r\n            return false;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    return General;\r\n}(ChessPiece_1.Piece));\r\nvar RedGeneral = /** @class */ (function (_super) {\r\n    __extends(RedGeneral, _super);\r\n    function RedGeneral(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PieceColor.RED) || this;\r\n        _this.elem.src = '../img/pieces/red-shuai.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    //returns the grids that General can go in a column\r\n    RedGeneral.prototype.checkColumns = function () {\r\n        var Y_coor = this.point.y_coor;\r\n        var X_coor = this.point.x_coor;\r\n        var front = this.board.getPointFromCoordinates(X_coor, Y_coor - 1);\r\n        var back = this.board.getPointFromCoordinates(X_coor, Y_coor + 1); //out of bound err\r\n        if (front) {\r\n            console.log('front.getPiece()');\r\n            console.log(front.getPiece());\r\n        }\r\n        console.log(this.board.getColFromXCoordinate(X_coor));\r\n    };\r\n    //returns the grids that General can go in a row\r\n    RedGeneral.prototype.checkRows = function () {\r\n        var Y_coor = this.point.y_coor;\r\n        var X_coor = this.point.x_coor;\r\n        var front = this.board.getPointFromCoordinates(X_coor, Y_coor - 1);\r\n        var back = this.board.getPointFromCoordinates(X_coor, Y_coor + 1); //out of bound err\r\n        if (front) {\r\n            console.log('front.getPiece()');\r\n            console.log(front.getPiece());\r\n        }\r\n        console.log(this.board.getColFromXCoordinate(X_coor));\r\n    };\r\n    RedGeneral.prototype.isValidGeneralPosition = function (x, y) {\r\n        return (y >= 8) && (y <= 10) && (x >= 4) && (x <= 6) && !(x > 0 && y > 0);\r\n    };\r\n    return RedGeneral;\r\n}(General));\r\nexports.RedGeneral = RedGeneral;\r\nvar BlackGeneral = /** @class */ (function (_super) {\r\n    __extends(BlackGeneral, _super);\r\n    function BlackGeneral(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PieceColor.BLACK) || this;\r\n        _this.elem.src = '../img/pieces/black-jiang.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    BlackGeneral.prototype.isValidGeneralPosition = function (x, y) {\r\n        return (y >= 1) && (y <= 3) && (x >= 4) && (x <= 6) && !(x > 0 && y > 0);\r\n    };\r\n    return BlackGeneral;\r\n}(General));\r\nexports.BlackGeneral = BlackGeneral;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PlayerColor = exports.PieceColor = exports.SIDE_LENGTH_vw = exports.SIDE_LENGTH = exports.Point = exports.fitSize = exports.getChessBoardSize = exports.getZoomedRatio = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\n// used in class Piece\r\nvar PieceColor;\r\n(function (PieceColor) {\r\n    PieceColor[PieceColor[\"black\"] = 0] = \"black\";\r\n    PieceColor[PieceColor[\"red\"] = 1] = \"red\";\r\n})(PieceColor || (PieceColor = {}));\r\nexports.PieceColor = PieceColor;\r\n// used in class Game, \r\nvar PlayerColor;\r\n(function (PlayerColor) {\r\n    PlayerColor[PlayerColor[\"BLACK\"] = 0] = \"BLACK\";\r\n    PlayerColor[PlayerColor[\"RED\"] = 1] = \"RED\";\r\n})(PlayerColor || (PlayerColor = {}));\r\nexports.PlayerColor = PlayerColor;\r\n// 得到当前的放大倍率\r\nfunction getZoomedRatio() {\r\n    var ratio = 0;\r\n    if (window.devicePixelRatio !== undefined) {\r\n        ratio = window.devicePixelRatio;\r\n    }\r\n    else if (window.outerWidth !== undefined && window.innerWidth !== undefined) {\r\n        ratio = window.outerWidth / window.innerWidth;\r\n    }\r\n    if (ratio) {\r\n        ratio = Math.round(ratio * 100);\r\n    }\r\n    return ratio;\r\n}\r\nexports.getZoomedRatio = getZoomedRatio;\r\n// 得到棋盘的当前大小\r\nfunction getChessBoardSize() {\r\n    Util_1.default.trace('chessboard size:');\r\n    var chessboard = $('#id_chessboard');\r\n    Util_1.default.trace('chessboad width');\r\n    Util_1.default.trace(chessboard.css('width'));\r\n    Util_1.default.trace('chessboad height');\r\n    Util_1.default.trace(chessboard.css('height'));\r\n}\r\nexports.getChessBoardSize = getChessBoardSize;\r\n// The vertical lines are known as files (Chinese: 路; pinyin: lù; \"road\")\r\n// the horizontal lines are known as ranks 线 xiàn; \"line\"\r\nvar Point = /** @class */ (function () {\r\n    function Point(col, row) {\r\n        // this.board = board;\r\n        this.x_coor = col; //col -> verticle\r\n        this.y_coor = row; //row -> horizontal\r\n        // A dummy element for initialization first and then update in method\r\n        this.elem = document.createElement('div');\r\n        this.updateElement(col, row);\r\n    }\r\n    /** when piece moves in\r\n        it binds the piece with the grid.\r\n        notice when the piece is moving out from a grid\r\n        the piece should be set to null.\r\n        @param piece: a nullable Piece object\r\n    */\r\n    Point.prototype.setPiece = function (piece) {\r\n        this.piece = piece;\r\n    };\r\n    Point.prototype.hasPiece = function () {\r\n        return this.piece ? true : false;\r\n    };\r\n    //gets the piece in the current grid\r\n    Point.prototype.getPiece = function () {\r\n        return this.piece;\r\n    };\r\n    // 更新渲染\r\n    Point.prototype.updateElement = function (newCol, newRow) {\r\n        var grid_div = this.elem;\r\n        var oldCol = this.x_coor;\r\n        var oldRow = this.y_coor;\r\n        /* code previously found in board initialization, with div_2d_array\r\n           now divs are bound to specific points.\r\n        */\r\n        grid_div.id = \"grid_div_\" + oldCol + \"_\" + oldRow;\r\n        $(\"#\" + grid_div.id).remove(); //must remove the original one, in order to make it unique.\r\n        grid_div.className = 'className_grid_div';\r\n        $(grid_div).css('grid-column', newCol);\r\n        $(grid_div).css('grid-row', newRow);\r\n        $('#board').append(grid_div);\r\n        // this.board.intersections[newCol-1][newRow-1] = this; //replace the original point with the newly updated point.\r\n    };\r\n    return Point;\r\n}());\r\nexports.Point = Point;\r\n//how many px when it's zoomed 100%\r\nvar SIDE_LENGTH = 75;\r\nexports.SIDE_LENGTH = SIDE_LENGTH;\r\nvar SIDE_LENGTH_vw = 70 / (getZoomedRatio() * 0.01);\r\nexports.SIDE_LENGTH_vw = SIDE_LENGTH_vw;\r\n/**\r\n * 固定大小用的function\r\n *\r\n*/\r\nfunction fitSize() {\r\n    var board = $('#board');\r\n    $.when(board)\r\n        //fiting size for the board\r\n        .then(function () {\r\n        console.log('background-size');\r\n        console.log(board.css('background-size'));\r\n        board.css('width', board.css('height'));\r\n        board.css('height', board.css('width'));\r\n        // board.css('row-gap','0px')\r\n        board.css('column-gap', '0px');\r\n        console.log(board.css('row-gap'));\r\n    })\r\n        //fiting sizes for the grids\r\n        .then(function () {\r\n        $('.className_grid_div').css('width', parseInt(board.css('width')) / 11);\r\n        $('.className_grid_div').css('height', parseInt(board.css('height')) / 10);\r\n        $('.className_grid_div').css('z-index', 10);\r\n        $('.className_grid_div').css('margin', 0);\r\n    })\r\n        //fiting sizes for the pieces\r\n        .then(function () {\r\n        $('.pieces').css('width', parseInt($('.className_grid_div').css('width')));\r\n        $('.pieces').css('height', parseInt($('.className_grid_div').css('width')));\r\n    })\r\n        .then(function () {\r\n        board.css('max-width', board.css('height'));\r\n    });\r\n}\r\nexports.fitSize = fitSize;\r\n","\"use strict\";\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Log = /** @class */ (function () {\r\n    function Log() {\r\n    }\r\n    Log.trace = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.log.apply(console, __spreadArrays([\"<T> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.info = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.info.apply(console, __spreadArrays([\"<I> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.warn = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.warn.apply(console, __spreadArrays([\"<W> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.error = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.error.apply(console, __spreadArrays([\"<E> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.test = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.log.apply(console, __spreadArrays([\"<X> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    return Log;\r\n}());\r\nexports.default = Log;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module\n__webpack_require__(20);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}