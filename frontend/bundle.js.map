{"version":3,"sources":["webpack://html5-chess/./frontend/src/Boards.ts","webpack://html5-chess/./frontend/src/Chariot.ts","webpack://html5-chess/./frontend/src/ChessPiece.ts","webpack://html5-chess/./frontend/src/Game.ts","webpack://html5-chess/./frontend/src/General.ts","webpack://html5-chess/./frontend/src/frontend-utils.ts","webpack://html5-chess/./src/Util.ts","webpack://html5-chess/webpack/bootstrap","webpack://html5-chess/webpack/startup"],"names":["Object","defineProperty","exports","value","Board","frontend_utils_1","this","ratio","side_length","SIDE_LENGTH","intersections","Array","i","j","Point","prototype","movePieceFromSrcToDest","piece","point_source","point_dest","setPiece","moveToPoint","getPointFromCoordinates","x_coor","y_coor","validateXCoordinate","validateYCoordinate","x","y","getRowFromYCoordinate","row","push","getColFromXCoordinate","col","detectZoom","undefined","window","devicePixelRatio","outerWidth","innerWidth","Math","round","render","board","$","css","on","fitSize","document","extendStatics","__extends","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","call","__","constructor","create","__importDefault","mod","__esModule","BlackChariot","RedChariot","Util_1","ChessPiece_1","Chariot","_super","point","color","PieceRole","General","canMove","dest","isValidChariotPosition","abs","checkSameColorPieceInPoint","Piece","_this","PieceColor","RED","elem","src","movablePoints","moveable_points","concat","checkRow","checkColumn","default","trace","Y_coor","piece_col","start_flag","end_flag","index","parseInt","movable_points_in_this_column","X_coor","piece_row","movable_points_in_this_row","BLACK","console","log","isFriendly","PlayerColor","role","has_moved","active","createElement","piece_role","state","step","e","preventDefault","listenerManager","stateRef","name","object","type","attachSelectPieceListener","attachMoveToGridListener","removeMoveToGridListener","movable_points","forEach","getElement","getRole","getColor","getPiece","isEnemy","append","addClass","toString","adjustResize","screen","width","getChessBoardSize","getZoomedRatio","Boards_1","Chariot_1","General_1","Game","currentPlayer","red","getCurrentPlayer","alternatePlayer","black","RedGeneral","BlackGeneral","red_ju_one","red_ju_two","red_ju_test","red_ju_test2","black_ju_one","black_ju_two","isValidGeneralPosition","checkColumns","front","checkRows","SIDE_LENGTH_vw","chessboard","updateElement","hasPiece","newCol","newRow","grid_div","oldCol","oldRow","id","remove","className","when","then","__spreadArrays","s","il","arguments","length","r","k","a","jl","Log","msg","_i","apply","Date","toLocaleString","info","warn","error","test","__webpack_module_cache__","__webpack_require__","moduleId","module","__webpack_modules__"],"mappings":"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","file":"bundle.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Board = void 0;\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\nvar Board = /** @class */ (function () {\r\n    function Board() {\r\n        this.ratio = 100; //default ratio 100%\r\n        this.side_length = this.ratio * 0.01 * frontend_utils_1.SIDE_LENGTH;\r\n        //A.K.A points.\r\n        this.intersections = new Array();\r\n        for (var i = 0; i < 9; i++) {\r\n            this.intersections[i] = [];\r\n            for (var j = 0; j < 10; j++) {\r\n                // 1 2 3 4 5 6 7 8 9\r\n                // 2\r\n                // 3\r\n                // 4\r\n                // 5\r\n                // 6\r\n                // 7\r\n                // 8\r\n                // 9\r\n                // 10\r\n                this.intersections[i][j] = (new frontend_utils_1.Point((i + 1), (j + 1)));\r\n            }\r\n        }\r\n    }\r\n    //invokes functions in Piece and Point simutaniously\r\n    Board.prototype.movePieceFromSrcToDest = function (piece, point_source, point_dest) {\r\n        point_source.setPiece(null); //the piece is moving out to another grid, so it's set to null.\r\n        piece.moveToPoint(point_dest); // the piece now knows which new place it's in\r\n        point_dest.setPiece(piece); // the point the piece moves in knows which piece it's receiving.\r\n    };\r\n    //get a specific point from coordinates\r\n    Board.prototype.getPointFromCoordinates = function (x_coor, y_coor) {\r\n        if (!this.validateXCoordinate(x_coor) || !this.validateYCoordinate(y_coor))\r\n            return null;\r\n        return this.intersections[x_coor - 1][y_coor - 1];\r\n    };\r\n    // Check for valid x coordinate\r\n    Board.prototype.validateXCoordinate = function (x) {\r\n        return x >= 1 && x <= 9;\r\n    };\r\n    // Check for valid y coordinate\r\n    Board.prototype.validateYCoordinate = function (y) {\r\n        return y >= 1 && y <= 10;\r\n    };\r\n    //get a row from y_coor(nth row)\r\n    Board.prototype.getRowFromYCoordinate = function (y_coor) {\r\n        var row = [];\r\n        for (var i = 0; i < 9; i++) {\r\n            row.push(this.intersections[i][y_coor - 1]);\r\n        }\r\n        return row;\r\n    };\r\n    //get a column from x_coor(nth col)\r\n    Board.prototype.getColFromXCoordinate = function (x_coor) {\r\n        var col = [];\r\n        for (var j = 0; j < 10; j++) {\r\n            col.push(this.intersections[x_coor - 1][j]);\r\n        }\r\n        return col;\r\n    };\r\n    Board.prototype.detectZoom = function () {\r\n        var ratio = 0;\r\n        if (window.devicePixelRatio !== undefined) {\r\n            ratio = window.devicePixelRatio;\r\n        }\r\n        // ???? not working, why?\r\n        // else if (~ua.indexOf('msie')) {\r\n        //     if (screen.deviceXDPI && screen.logicalXDPI) {\r\n        //         ratio = screen.deviceXDPI / screen.logicalXDPI;\r\n        //     }\r\n        // }\r\n        else if (window.outerWidth !== undefined && window.innerWidth !== undefined) {\r\n            ratio = window.outerWidth / window.innerWidth;\r\n        }\r\n        if (ratio) {\r\n            ratio = Math.round(ratio * 100);\r\n        }\r\n        this.ratio = ratio;\r\n    };\r\n    Board.prototype.render = function () {\r\n        var board = $('#board');\r\n        // $(board).css('height', 'fit-content');\r\n        $(\"#id_chessboard\").css(\"position\", \"fixed\");\r\n        $(\"#id_chessboard\").css(\"max-height\", '100vh');\r\n        // $(\"#board\").css(\"left\", \"0px\");\r\n        $(\"#id_chessboard\").css(\"margin\", \"0\");\r\n        $(\"#id_chessboard\").css(\"padding\", \"0vw\");\r\n        board.css('margin-left', 'auto');\r\n        board.css('margin-right', 'auto');\r\n        board.css('padding', 0);\r\n        //for testing purposes, added some color to the background\r\n        $('.className_grid_div').css('background-color', 'rgba(255,0,0,0.3)');\r\n        //fits the size when resizing\r\n        $(window).on('resize', function () {\r\n            frontend_utils_1.fitSize();\r\n        });\r\n        //fixed the size issue upon entry\r\n        $(document).on('ready', function () {\r\n            frontend_utils_1.fitSize();\r\n        });\r\n        $(\"#board\").css(\"max-width\", \"100vh\");\r\n    };\r\n    return Board;\r\n}());\r\nexports.Board = Board;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BlackChariot = exports.RedChariot = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar Chariot = /** @class */ (function (_super) {\r\n    __extends(Chariot, _super);\r\n    function Chariot(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.General, color) || this;\r\n    }\r\n    Chariot.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the dest is not inside of the \"田\" shaped space of the board\r\n        //Returns false.\r\n        if (!this.isValidChariotPosition(x, y))\r\n            return false;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    return Chariot;\r\n}(ChessPiece_1.Piece));\r\nvar RedChariot = /** @class */ (function (_super) {\r\n    __extends(RedChariot, _super);\r\n    function RedChariot(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PieceColor.RED) || this;\r\n        _this.elem.src = '../img/pieces/red-ju.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        $(_this.elem).on('click', function () {\r\n            // Log.trace(\"invoked this.checkColumns()\")\r\n            // Log.trace(this.checkColumn())\r\n            // Log.trace(this.checkRow())\r\n            _this.movablePoints();\r\n        });\r\n        return _this;\r\n    }\r\n    RedChariot.prototype.movablePoints = function () {\r\n        // Log.trace('inside this.movablePoints()')\r\n        var moveable_points = [];\r\n        // moveable_points.length = 0;\r\n        moveable_points = moveable_points.concat(this.checkRow());\r\n        moveable_points = moveable_points.concat(this.checkColumn());\r\n        // Log.trace('moveable_points is empty here !!!!')\r\n        // Log.trace(moveable_points)\r\n        return moveable_points;\r\n    };\r\n    //returns the grids that General can go in a column\r\n    RedChariot.prototype.checkColumn = function () {\r\n        Util_1.default.trace(\"in checkColumns\");\r\n        var Y_coor = this.point.y_coor;\r\n        var X_coor = this.point.x_coor;\r\n        var piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0; //row 1\r\n        var end_flag = 9; //row 10 \r\n        //trasversing the column (Point [])\r\n        for (var index in piece_col) {\r\n            //if the piece in that point is not null, do some checking\r\n            if (piece_col[index].piece != null) {\r\n                //checks the indices that are smaller than the point\r\n                if (parseInt(index) < Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PieceColor.RED)\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === Y_coor - 1) // if a friendly piece is blocking right abovbe it\r\n                        start_flag = Y_coor; // start_flag is set to the next row \r\n                    // Log.trace(\"start_flag:\" + start_flag)\r\n                }\r\n                //checks those larger than that point\r\n                else if (parseInt(index) > Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PieceColor.RED)\r\n                        end_flag = parseInt(index) - 1; // the index is not added, but the last one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === Y_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = Y_coor - 2; // start_flag is set to the next row \r\n                    // Log.trace(\"end_flag:\" + end_flag)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_column = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (Y_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_column.push(piece_col[i]);\r\n        }\r\n        return movable_points_in_this_column;\r\n        // console.log(this.board.getColFromXCoordinate(X_coor));\r\n    };\r\n    //returns the grids that the General can go in a row\r\n    RedChariot.prototype.checkRow = function () {\r\n        Util_1.default.trace(\"in checkRows()\");\r\n        // let Y_coor = this.point.y_coor\r\n        var X_coor = this.point.x_coor;\r\n        // let piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0;\r\n        var end_flag = 8;\r\n        //trasversing the column (Point [])\r\n        for (var index in piece_row) {\r\n            //if the piece in that point is not null, do some checking\r\n            if (piece_row[index].piece != null) {\r\n                //checks the indices that are smaller than the point\r\n                if (parseInt(index) < X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].piece.color == ChessPiece_1.PieceColor.RED)\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === X_coor - 1) // if a friendly piece is blocking right abovbe it\r\n                        start_flag = X_coor; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"start_flag:\" + start_flag);\r\n                }\r\n                //checks those larger than that point\r\n                else if (parseInt(index) > X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].piece.color == ChessPiece_1.PieceColor.RED)\r\n                        end_flag = parseInt(index) - 1; // the index is not added, but the last one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === X_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = X_coor - 2; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"end_flag:\" + end_flag);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_row = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (X_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_row.push(piece_row[i]);\r\n        }\r\n        return movable_points_in_this_row;\r\n    };\r\n    RedChariot.prototype.isValidChariotPosition = function (x, y) {\r\n        return (y >= 8) && (y <= 10) && (x >= 4) && (x <= 6) && !(x > 0 && y > 0);\r\n    };\r\n    return RedChariot;\r\n}(Chariot));\r\nexports.RedChariot = RedChariot;\r\nvar BlackChariot = /** @class */ (function (_super) {\r\n    __extends(BlackChariot, _super);\r\n    function BlackChariot(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PieceColor.BLACK) || this;\r\n        _this.elem.src = '../img/pieces/black-ju.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    BlackChariot.prototype.movablePoints = function () {\r\n        // Log.trace('inside this.movablePoints()')\r\n        var moveable_points = [];\r\n        // moveable_points.length = 0;\r\n        moveable_points = moveable_points.concat(this.checkRow());\r\n        moveable_points = moveable_points.concat(this.checkColumn());\r\n        // Log.trace('moveable_points is empty here !!!!')\r\n        // Log.trace(moveable_points)\r\n        return moveable_points;\r\n    };\r\n    //returns the grids that General can go in a column\r\n    BlackChariot.prototype.checkColumn = function () {\r\n        Util_1.default.trace(\"in checkColumns\");\r\n        var Y_coor = this.point.y_coor;\r\n        var X_coor = this.point.x_coor;\r\n        var piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0; //row 1\r\n        var end_flag = 9; //row 10 \r\n        //trasversing the column (Point [])\r\n        for (var index in piece_col) {\r\n            //if the piece in that point is not null, do some checking\r\n            if (piece_col[index].piece != null) {\r\n                //checks the indices that are smaller than the point\r\n                if (parseInt(index) < Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PieceColor.BLACK)\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === Y_coor - 1) // if a friendly piece is blocking right abovbe it\r\n                        start_flag = Y_coor; // start_flag is set to the next row \r\n                    // Log.trace(\"start_flag:\" + start_flag)\r\n                }\r\n                //checks those larger than that point\r\n                else if (parseInt(index) > Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PieceColor.BLACK)\r\n                        end_flag = parseInt(index) - 1; // the index is not added, but the last one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === Y_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = Y_coor - 2; // start_flag is set to the next row \r\n                    // Log.trace(\"end_flag:\" + end_flag)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_column = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (Y_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_column.push(piece_col[i]);\r\n        }\r\n        console.log(movable_points_in_this_column);\r\n        return movable_points_in_this_column;\r\n        // console.log(this.board.getColFromXCoordinate(X_coor));\r\n    };\r\n    //returns the grids that the General can go in a row\r\n    BlackChariot.prototype.checkRow = function () {\r\n        Util_1.default.trace(\"in checkRows()\");\r\n        // let Y_coor = this.point.y_coor\r\n        var X_coor = this.point.x_coor;\r\n        // let piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0;\r\n        var end_flag = 8;\r\n        //trasversing the column (Point [])\r\n        for (var index in piece_row) {\r\n            //if the piece in that point is not null, do some checking\r\n            if (piece_row[index].piece != null) {\r\n                //checks the indices that are smaller than the point\r\n                if (parseInt(index) < X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].piece.isFriendly())\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === X_coor - 1) // if a friendly piece is blocking right abovbe it\r\n                        start_flag = X_coor; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"start_flag:\" + start_flag);\r\n                }\r\n                //checks those larger than that point\r\n                else if (parseInt(index) > X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].piece.isFriendly())\r\n                        end_flag = parseInt(index) - 1; // Friendly blocking: the index is not added, but the previous one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === X_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = X_coor - 2; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"end_flag:\" + end_flag);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_row = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (X_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_row.push(piece_row[i]);\r\n        }\r\n        console.log(movable_points_in_this_row);\r\n        return movable_points_in_this_row;\r\n    };\r\n    BlackChariot.prototype.isValidChariotPosition = function (x, y) {\r\n        return (y >= 0) && (y <= 10) && (x >= 0) && (x <= 9) && !(x > 0 && y > 0);\r\n    };\r\n    return BlackChariot;\r\n}(Chariot));\r\nexports.BlackChariot = BlackChariot;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PieceColor = exports.PieceRole = exports.Piece = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\n// used in class Piece\r\nvar PieceColor;\r\n(function (PieceColor) {\r\n    PieceColor[PieceColor[\"BLACK\"] = 0] = \"BLACK\";\r\n    PieceColor[PieceColor[\"RED\"] = 1] = \"RED\";\r\n})(PieceColor || (PieceColor = {}));\r\nexports.PieceColor = PieceColor;\r\n// used in class Game, \r\nvar PlayerColor;\r\n(function (PlayerColor) {\r\n    PlayerColor[PlayerColor[\"black\"] = 0] = \"black\";\r\n    PlayerColor[PlayerColor[\"red\"] = 1] = \"red\";\r\n})(PlayerColor || (PlayerColor = {}));\r\nvar PieceRole;\r\n(function (PieceRole) {\r\n    PieceRole[PieceRole[\"General\"] = 0] = \"General\";\r\n    PieceRole[PieceRole[\"Advisor\"] = 1] = \"Advisor\";\r\n    PieceRole[PieceRole[\"Elephant\"] = 2] = \"Elephant\";\r\n    PieceRole[PieceRole[\"Chariot\"] = 3] = \"Chariot\";\r\n    PieceRole[PieceRole[\"Horse\"] = 4] = \"Horse\";\r\n    PieceRole[PieceRole[\"Cannon\"] = 5] = \"Cannon\";\r\n    PieceRole[PieceRole[\"Soldier\"] = 6] = \"Soldier\";\r\n})(PieceRole || (PieceRole = {}));\r\nexports.PieceRole = PieceRole;\r\nvar Piece = /** @class */ (function () {\r\n    function Piece(point, board, role, color) {\r\n        this.point = point;\r\n        this.has_moved = false;\r\n        this.active = false;\r\n        this.ratio = 100;\r\n        this.side_length = this.ratio * 0.01 * frontend_utils_1.SIDE_LENGTH;\r\n        this.board = board;\r\n        this.elem = document.createElement(\"img\");\r\n        this.piece_role = role;\r\n        this.color = color;\r\n        // 0 -> not selected\r\n        // 1 -> selected, not moved\r\n        // 2 -> moved, refesh state to 0\r\n        this.state = { step: 0 };\r\n        $(window).on('mousedown', function (e) {\r\n            e.preventDefault(); //get rid of non-game experience (selecting pictures and stuff)\r\n        });\r\n        $(window).on('change', function (e) {\r\n            e.preventDefault(); //get rid of non-game experience (selecting pictures and stuff)\r\n            console.log('changed');\r\n        });\r\n        this.listenerManager();\r\n    }\r\n    Piece.prototype.listenerManager = function () {\r\n        var stateRef = this.state;\r\n        console.log('listenerManger');\r\n        var obj = {\r\n            state: stateRef,\r\n            get foo() {\r\n                console.log({ name: 'foo', object: stateRef, type: 'get' });\r\n                return stateRef;\r\n            },\r\n        };\r\n        //   obj.bar = 2;\r\n        // {name: 'bar', object: <obj>, type: 'set', oldValue: undefined}\r\n        obj.state;\r\n        // {name: 'foo', object: <obj>, type: 'get'}\r\n        // if(this.state===0){\r\n        //     this.state++\r\n        // }\r\n        // if(this.state===1){\r\n        //     this.state++\r\n        // }\r\n        // if(this.state===2){\r\n        //     this.state++\r\n        // }\r\n        this.attachSelectPieceListener();\r\n        this.attachMoveToGridListener();\r\n        this.removeMoveToGridListener();\r\n    };\r\n    /**\r\n     *  I. When the player clicks on a piece,\r\n     *  The listener invokes the method to determine movable grids,\r\n     *  then it highlights all the grids\r\n     */\r\n    Piece.prototype.attachSelectPieceListener = function () {\r\n        var _this = this;\r\n        $(this.elem).on('click', function (e) {\r\n            e.preventDefault();\r\n            // 1. clearing all the colored background first:\r\n            $('.className_grid_div').css('background', 'rgba(3, 181, 252,0.0)');\r\n            // 2. highlight all the movalbe positions\r\n            var movable_points = [];\r\n            movable_points = _this.movablePoints();\r\n            console.log(movable_points);\r\n            // 3. highlight all the movalbe positions\r\n            movable_points.forEach(function (point) {\r\n                $(point.elem).css('background', 'rgba(3, 181, 252,0.5');\r\n            });\r\n            _this.active = true;\r\n        });\r\n    };\r\n    /**\r\n     *  II. once the user has selected the piece,\r\n     *  a listener is attached to the grid to check\r\n     *  which grid the user is moving to\r\n     */\r\n    Piece.prototype.attachMoveToGridListener = function () {\r\n        //3. attach another listener which listens to the next click:\r\n        $('.className_grid_div').on('click', function (e) {\r\n            console.log('clicked');\r\n            // $('.className_grid_div').unbind('click');  // after clicking, we need to get rid of the listener\r\n            $('.className_grid_div').css('background', 'rgba(0,0,0,0.0)'); // setting back the background to non-colored and transparent\r\n        });\r\n    };\r\n    //upon finishing the listener, it removes the listener from the grid\r\n    Piece.prototype.removeMoveToGridListener = function () {\r\n        //4. remove the click listener from the grids\r\n        $('.className_grid_div').on('click', function (e) {\r\n            console.log('clicked');\r\n            // $('.className_grid_div').unbind('click');  // after clicking, we need to get rid of the listener\r\n            $('.className_grid_div').css('background', 'rgba(0,0,0,0.0)'); // setting back the background to non-colored and transparent\r\n        });\r\n    };\r\n    Piece.prototype.movablePoints = function () {\r\n        Util_1.default.trace('movable points of a piece');\r\n        return [];\r\n    };\r\n    Piece.prototype.getElement = function () {\r\n        return this.elem;\r\n    };\r\n    Piece.prototype.getRole = function () {\r\n        return this.piece_role;\r\n    };\r\n    Piece.prototype.getColor = function () {\r\n        return this.color;\r\n    };\r\n    //sets the point of the piece\r\n    Piece.prototype.moveToPoint = function (point) {\r\n        this.point = point;\r\n    };\r\n    /**\r\n     * @param point Check if a point has a piece with the same side\r\n     *\r\n     */\r\n    Piece.prototype.checkSameColorPieceInPoint = function (point) {\r\n        var piece = point.getPiece();\r\n        if (!piece) {\r\n            return false;\r\n        }\r\n        return piece.getColor() === this.color;\r\n    };\r\n    /**\r\n * @param point Check if a point has a piece with the same side\r\n *\r\n */\r\n    Piece.prototype.isFriendly = function (piece) {\r\n        if (!piece) {\r\n            return false;\r\n        }\r\n        return piece.getColor() === this.color;\r\n    };\r\n    Piece.prototype.isEnemy = function (piece) {\r\n        if (!piece) {\r\n            return false;\r\n        }\r\n        return piece.getColor() != this.color;\r\n    };\r\n    Piece.prototype.render = function () {\r\n        this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].elem.append(this.elem); // encapsulates the next line of code;\r\n        $(this.elem).addClass('pieces');\r\n        //add className for the HTML <img> of the piece - PieceRole\r\n        $(this.elem).addClass(PieceRole[this.piece_role].toString());\r\n        //add className for the HTML <img> of the piece - PieceColor\r\n        $(this.elem).addClass(PieceColor[this.color].toString());\r\n        // $(window).on('resize',Piece.adjustResize);\r\n        // $(this.elem)\r\n        //     .on('mousedown',function () {\r\n        //         isDragging = false;\r\n        //         console.log(isDragging)\r\n        //     })\r\n        //     .on('mousemove',function () {\r\n        //         isDragging = true;\r\n        //         console.log(isDragging)\r\n        //     })\r\n        //     .on('mouseup',function () {\r\n        //         var wasDragging = isDragging;\r\n        //         isDragging = false;\r\n        //         console.log(isDragging)\r\n        //         if (!wasDragging) {\r\n        //             console.log('dragging')\r\n        //             $(\"#throbble\").toggle();\r\n        //         }\r\n        //     });\r\n        // TODO: click events:\r\n    };\r\n    Piece.adjustResize = function () {\r\n        if (screen.width == window.innerWidth) {\r\n            console.log(\"at exact 100%\");\r\n            frontend_utils_1.getChessBoardSize();\r\n            $('.className_grid_div').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.className_grid_div').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $(\"#board\").css(\"width\", $(\"#board\").css('height'));\r\n            $(\"#id_chessboard\").css(\"width\", $(\"#board\").css('width'));\r\n        }\r\n        else if (screen.width > window.innerWidth) {\r\n            console.log(\"you have zoomed in the page i.e more than 100%\");\r\n            frontend_utils_1.getZoomedRatio();\r\n            frontend_utils_1.getChessBoardSize();\r\n            $('.className_grid_div').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.className_grid_div').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $(\"#board\").css(\"width\", $(\"#board\").css('height'));\r\n            $(\"#id_chessboard\").css(\"width\", $(\"#board\").css('width'));\r\n        }\r\n        else {\r\n            console.log(\"you have zoomed out i.e less than 100%\");\r\n            frontend_utils_1.getZoomedRatio();\r\n            frontend_utils_1.getChessBoardSize();\r\n            var current_width = $('.className_grid_div').css('width');\r\n            $('.className_grid_div').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.className_grid_div').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $(\"#board\").css(\"width\", $(\"#board\").css('height'));\r\n            $(\"#id_chessboard\").css(\"width\", $(\"#board\").css('width'));\r\n        }\r\n    };\r\n    return Piece;\r\n}());\r\nexports.Piece = Piece;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Boards_1 = require(\"./Boards\");\r\nvar Chariot_1 = require(\"./Chariot\");\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\nvar General_1 = require(\"./General\");\r\nvar Game = /** @class */ (function () {\r\n    // Stub constructor to be a placeholder\r\n    function Game() {\r\n        this.currentPlayer = frontend_utils_1.PlayerColor.red;\r\n        this.board = new Boards_1.Board();\r\n    }\r\n    // gets the public player\r\n    Game.prototype.getCurrentPlayer = function () {\r\n        return this.currentPlayer;\r\n    };\r\n    //switch current player to the other player\r\n    Game.prototype.alternatePlayer = function () {\r\n        if (this.currentPlayer === frontend_utils_1.PlayerColor.red)\r\n            this.currentPlayer = frontend_utils_1.PlayerColor.black;\r\n        else\r\n            this.currentPlayer = frontend_utils_1.PlayerColor.red;\r\n    };\r\n    Game.prototype.render = function () {\r\n        this.board.render();\r\n        var red_shuai = new General_1.RedGeneral(this.board, this.board.getPointFromCoordinates(5, 10)); //new Point() doesn't make sense.\r\n        red_shuai.render();\r\n        var black_jiang = new General_1.BlackGeneral(this.board, this.board.getPointFromCoordinates(5, 1)); // using getPoint from coor now\r\n        black_jiang.render();\r\n        var red_ju_one = new Chariot_1.RedChariot(this.board, this.board.getPointFromCoordinates(1, 1));\r\n        var red_ju_two = new Chariot_1.RedChariot(this.board, this.board.getPointFromCoordinates(9, 1));\r\n        var red_ju_test = new Chariot_1.RedChariot(this.board, this.board.getPointFromCoordinates(9, 3));\r\n        var red_ju_test2 = new Chariot_1.RedChariot(this.board, this.board.getPointFromCoordinates(9, 4));\r\n        var black_ju_one = new Chariot_1.BlackChariot(this.board, this.board.getPointFromCoordinates(1, 10));\r\n        var black_ju_two = new Chariot_1.BlackChariot(this.board, this.board.getPointFromCoordinates(9, 10));\r\n        red_ju_one.render();\r\n        red_ju_two.render();\r\n        black_ju_one.render();\r\n        black_ju_two.render();\r\n        red_ju_test.render();\r\n        red_ju_test2.render();\r\n    };\r\n    return Game;\r\n}());\r\nvar game = new Game();\r\ngame.render();\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BlackGeneral = exports.RedGeneral = void 0;\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar General = /** @class */ (function (_super) {\r\n    __extends(General, _super);\r\n    function General(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.General, color) || this;\r\n    }\r\n    General.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the dest is not inside of the \"田\" shaped space of the board\r\n        //Returns false.\r\n        if (!this.isValidGeneralPosition(x, y))\r\n            return false;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    return General;\r\n}(ChessPiece_1.Piece));\r\nvar RedGeneral = /** @class */ (function (_super) {\r\n    __extends(RedGeneral, _super);\r\n    function RedGeneral(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PieceColor.RED) || this;\r\n        _this.elem.src = '../img/pieces/red-shuai.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    //returns the grids that General can go in a column\r\n    RedGeneral.prototype.checkColumns = function () {\r\n        var Y_coor = this.point.y_coor;\r\n        var X_coor = this.point.x_coor;\r\n        var front = this.board.getPointFromCoordinates(X_coor, Y_coor - 1);\r\n        var back = this.board.getPointFromCoordinates(X_coor, Y_coor + 1); //out of bound err\r\n        if (front) {\r\n            console.log('front.getPiece()');\r\n            console.log(front.getPiece());\r\n        }\r\n        console.log(this.board.getColFromXCoordinate(X_coor));\r\n    };\r\n    //returns the grids that General can go in a row\r\n    RedGeneral.prototype.checkRows = function () {\r\n        var Y_coor = this.point.y_coor;\r\n        var X_coor = this.point.x_coor;\r\n        var front = this.board.getPointFromCoordinates(X_coor, Y_coor - 1);\r\n        var back = this.board.getPointFromCoordinates(X_coor, Y_coor + 1); //out of bound err\r\n        if (front) {\r\n            console.log('front.getPiece()');\r\n            console.log(front.getPiece());\r\n        }\r\n        console.log(this.board.getColFromXCoordinate(X_coor));\r\n    };\r\n    RedGeneral.prototype.isValidGeneralPosition = function (x, y) {\r\n        return (y >= 8) && (y <= 10) && (x >= 4) && (x <= 6) && !(x > 0 && y > 0);\r\n    };\r\n    return RedGeneral;\r\n}(General));\r\nexports.RedGeneral = RedGeneral;\r\nvar BlackGeneral = /** @class */ (function (_super) {\r\n    __extends(BlackGeneral, _super);\r\n    function BlackGeneral(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PieceColor.BLACK) || this;\r\n        _this.elem.src = '../img/pieces/black-jiang.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    BlackGeneral.prototype.isValidGeneralPosition = function (x, y) {\r\n        return (y >= 1) && (y <= 3) && (x >= 4) && (x <= 6) && !(x > 0 && y > 0);\r\n    };\r\n    return BlackGeneral;\r\n}(General));\r\nexports.BlackGeneral = BlackGeneral;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PlayerColor = exports.PieceColor = exports.SIDE_LENGTH_vw = exports.SIDE_LENGTH = exports.Point = exports.fitSize = exports.getChessBoardSize = exports.getZoomedRatio = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\n// used in class Piece\r\nvar PieceColor;\r\n(function (PieceColor) {\r\n    PieceColor[PieceColor[\"black\"] = 0] = \"black\";\r\n    PieceColor[PieceColor[\"red\"] = 1] = \"red\";\r\n})(PieceColor || (PieceColor = {}));\r\nexports.PieceColor = PieceColor;\r\n// used in class Game, \r\nvar PlayerColor;\r\n(function (PlayerColor) {\r\n    PlayerColor[PlayerColor[\"black\"] = 0] = \"black\";\r\n    PlayerColor[PlayerColor[\"red\"] = 1] = \"red\";\r\n})(PlayerColor || (PlayerColor = {}));\r\nexports.PlayerColor = PlayerColor;\r\nfunction getZoomedRatio() {\r\n    var ratio = 0;\r\n    if (window.devicePixelRatio !== undefined) {\r\n        ratio = window.devicePixelRatio;\r\n    }\r\n    else if (window.outerWidth !== undefined && window.innerWidth !== undefined) {\r\n        ratio = window.outerWidth / window.innerWidth;\r\n    }\r\n    if (ratio) {\r\n        ratio = Math.round(ratio * 100);\r\n    }\r\n    return ratio;\r\n}\r\nexports.getZoomedRatio = getZoomedRatio;\r\nfunction getChessBoardSize() {\r\n    Util_1.default.trace('chessboard size:');\r\n    var chessboard = $('#id_chessboard');\r\n    Util_1.default.trace('chessboad width');\r\n    Util_1.default.trace(chessboard.css('width'));\r\n    Util_1.default.trace('chessboad height');\r\n    Util_1.default.trace(chessboard.css('height'));\r\n}\r\nexports.getChessBoardSize = getChessBoardSize;\r\n// The vertical lines are known as files (Chinese: 路; pinyin: lù; \"road\")\r\n// the horizontal lines are known as ranks 线 xiàn; \"line\"\r\nvar Point = /** @class */ (function () {\r\n    function Point(col, row) {\r\n        // this.board = board;\r\n        this.x_coor = col; //col -> verticle\r\n        this.y_coor = row; //row -> horizontal\r\n        // A dummy element for initialization first and then update in method\r\n        this.elem = document.createElement('div');\r\n        this.updateElement(col, row);\r\n    }\r\n    /** when piece moves in\r\n        it binds the piece with the grid.\r\n        notice when the piece is moving out from a grid\r\n        the piece should be set to null.\r\n        @param piece: a nullable Piece object\r\n    */\r\n    Point.prototype.setPiece = function (piece) {\r\n        this.piece = piece;\r\n    };\r\n    Point.prototype.hasPiece = function () {\r\n        return this.piece ? true : false;\r\n    };\r\n    //gets the piece in the current grid\r\n    Point.prototype.getPiece = function () {\r\n        return this.piece;\r\n    };\r\n    Point.prototype.updateElement = function (newCol, newRow) {\r\n        var grid_div = this.elem;\r\n        var oldCol = this.x_coor;\r\n        var oldRow = this.y_coor;\r\n        /* code previously found in board initialization, with div_2d_array\r\n           now divs are bound to specific points.\r\n        */\r\n        grid_div.id = \"grid_div_\" + oldCol + \"_\" + oldRow;\r\n        $(\"#\" + grid_div.id).remove(); //must remove the original one, in order to make it unique.\r\n        grid_div.className = 'className_grid_div';\r\n        $(grid_div).css('grid-column', newCol);\r\n        $(grid_div).css('grid-row', newRow);\r\n        $('#board').append(grid_div);\r\n        // this.board.intersections[newCol-1][newRow-1] = this; //replace the original point with the newly updated point.\r\n    };\r\n    return Point;\r\n}());\r\nexports.Point = Point;\r\n//how many px when it's zoomed 100%\r\nvar SIDE_LENGTH = 75;\r\nexports.SIDE_LENGTH = SIDE_LENGTH;\r\nvar SIDE_LENGTH_vw = 70 / (getZoomedRatio() * 0.01);\r\nexports.SIDE_LENGTH_vw = SIDE_LENGTH_vw;\r\nfunction fitSize() {\r\n    var board = $('#board');\r\n    $.when()\r\n        //fiting size for the board\r\n        .then(function () {\r\n        console.log('background-size');\r\n        console.log(board.css('background-size'));\r\n        board.css('width', board.css('height'));\r\n        board.css('height', board.css('width'));\r\n        // board.css('row-gap','0px')\r\n        board.css('column-gap', '0px');\r\n        console.log(board.css('row-gap'));\r\n    })\r\n        //fiting sizes for the grids\r\n        .then(function () {\r\n        $('.className_grid_div').css('width', parseInt(board.css('width')) / 11);\r\n        $('.className_grid_div').css('height', parseInt(board.css('height')) / 10);\r\n        $('.className_grid_div').css('z-index', 10);\r\n        $('.className_grid_div').css('margin', 0);\r\n    })\r\n        //fiting sizes for the pieces\r\n        .then(function () {\r\n        $('.pieces').css('width', parseInt($('.className_grid_div').css('width')));\r\n        $('.pieces').css('height', parseInt($('.className_grid_div').css('width')));\r\n    })\r\n        .then(function () {\r\n        board.css('max-width', board.css('height'));\r\n    });\r\n}\r\nexports.fitSize = fitSize;\r\n","\"use strict\";\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Log = /** @class */ (function () {\r\n    function Log() {\r\n    }\r\n    Log.trace = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.log.apply(console, __spreadArrays([\"<T> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.info = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.info.apply(console, __spreadArrays([\"<I> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.warn = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.warn.apply(console, __spreadArrays([\"<W> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.error = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.error.apply(console, __spreadArrays([\"<E> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.test = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.log.apply(console, __spreadArrays([\"<X> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    return Log;\r\n}());\r\nexports.default = Log;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module\n__webpack_require__(20);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}