{"version":3,"sources":["webpack://html5-chess/./frontend/src/Boards.ts","webpack://html5-chess/./frontend/src/Cannon.ts","webpack://html5-chess/./frontend/src/Chariot.ts","webpack://html5-chess/./frontend/src/ChessPiece.ts","webpack://html5-chess/./frontend/src/Game.ts","webpack://html5-chess/./frontend/src/General.ts","webpack://html5-chess/./frontend/src/frontend-utils.ts","webpack://html5-chess/./src/Util.ts","webpack://html5-chess/webpack/bootstrap","webpack://html5-chess/webpack/startup"],"names":["Object","defineProperty","exports","value","Board","frontend_utils_1","game","this","ratio","side_length","SIDE_LENGTH","target_coordinate","intersections","Array","i","j","Point","prototype","movePieceFromSrcToDest","piece","point_source","point_dest","setPiece","moveToPoint","getPointFromCoordinates","x_coor","y_coor","validateXCoordinate","validateYCoordinate","getCoordinateFromElemId","id","console","log","split_arr","split","coor_x","coor_y","parseInt","x","y","getRowFromYCoordinate","row","push","getColFromXCoordinate","col","detectZoom","undefined","window","devicePixelRatio","outerWidth","innerWidth","Math","round","render","board","$","css","on","fitSize","document","extendStatics","__extends","d","b","setPrototypeOf","__proto__","p","hasOwnProperty","call","__","constructor","create","__importDefault","mod","__esModule","BlackCannon","Util_1","ChessPiece_1","_super","point","_this","PlayerColor","BLACK","elem","src","movablePoints","isValidCannonPosition","Cannon","color","PieceRole","General","canMove","dest","abs","checkSameColorPieceInPoint","moveable_points","concat","checkRow","checkColumn","checkShellingRow","checkShellingCol","default","trace","X_coor","piece_row","cornerstone_flag","shellable_points_in_this_column","index","Y_coor","piece_col","start_flag","end_flag","movable_points_in_this_column","getPiece","isFriendly","movable_points_in_this_row","Piece","BlackChariot","RedChariot","Chariot","isValidChariotPosition","RED","enumerable","get","role","active","piece_role","createElement","state","e","preventDefault","listenerManager","attachSelectPieceListener","active_piece","movable_points","getCurrentPlayer","forEach","setTimeout","attachMoveToGridListener","target","tagName","parentNode","parentElement","toUpperCase","hasPiece","alert","removeMoveToGridListener","innerHTML","next_x_coor","next_y_coor","alternatePlayer","off","getElement","removeChild","appendChild","getRole","getColor","getTargetPointCoordinate","getTargetPointXCoordinate","getTargetPointYCoordinate","isEnemy","append","addClass","toString","adjustResize","screen","width","getChessBoardSize","getZoomedRatio","Boards_1","Chariot_1","General_1","Cannon_1","Game","currentPlayer","RedGeneral","BlackGeneral","red_ju_one","red_ju_two","black_ju_one","black_ju_two","black_cannon_one","black_cannon_two","checkPeriphery","front","back","left","right","isValidGeneralPosition","targetPoint","getX","getY","err","error","SIDE_LENGTH_vw","chessboard","updateElement","newCol","newRow","grid_div","oldCol","oldRow","remove","className","when","then","__spreadArrays","s","il","arguments","length","r","k","a","jl","Log","msg","_i","apply","Date","toLocaleString","info","warn","test","__webpack_module_cache__","__webpack_require__","moduleId","module","__webpack_modules__"],"mappings":"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","file":"bundle.js","sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Board = void 0;\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\n// 棋盘\r\nvar Board = /** @class */ (function () {\r\n    function Board(game) {\r\n        // 游戏和棋盘要耦合\r\n        this.game = game;\r\n        // 缩放相关\r\n        this.ratio = 100; //default ratio 100%\r\n        this.side_length = this.ratio * 0.01 * frontend_utils_1.SIDE_LENGTH;\r\n        // 玩家选择的下一个位置\r\n        this.target_coordinate = [-1, -1];\r\n        //A.K.A points.\r\n        this.intersections = new Array();\r\n        for (var i = 0; i < 9; i++) {\r\n            this.intersections[i] = [];\r\n            for (var j = 0; j < 10; j++) {\r\n                // 1 2 3 4 5 6 7 8 9\r\n                // 2\r\n                // 3\r\n                // 4\r\n                // 5\r\n                // 6\r\n                // 7\r\n                // 8\r\n                // 9\r\n                // 10\r\n                this.intersections[i][j] = (new frontend_utils_1.Point((i + 1), (j + 1)));\r\n            }\r\n        }\r\n    }\r\n    //invokes functions in Piece and Point simutaniously\r\n    Board.prototype.movePieceFromSrcToDest = function (piece, point_source, point_dest) {\r\n        point_source.setPiece(null); //the piece is moving out to another grid, so it's set to null.\r\n        piece.moveToPoint(point_dest); // the piece now knows which new place it's in\r\n        point_dest.setPiece(piece); // the point the piece moves in knows which piece it's receiving.\r\n    };\r\n    //get a specific point from coordinates\r\n    Board.prototype.getPointFromCoordinates = function (x_coor, y_coor) {\r\n        if (!this.validateXCoordinate(x_coor) || !this.validateYCoordinate(y_coor))\r\n            return null;\r\n        return this.intersections[x_coor - 1][y_coor - 1];\r\n    };\r\n    // 从HTML Element的ID中获取坐标\r\n    Board.prototype.getCoordinateFromElemId = function (id) {\r\n        // grid_div_5_6\r\n        console.log(id);\r\n        var split_arr = id.split('_');\r\n        var coor_x = split_arr[2];\r\n        var coor_y = split_arr[3];\r\n        return [parseInt(coor_x), parseInt(coor_y)];\r\n    };\r\n    // Check for valid x coordinate\r\n    Board.prototype.validateXCoordinate = function (x) {\r\n        return x >= 1 && x <= 9;\r\n    };\r\n    // Check for valid y coordinate\r\n    Board.prototype.validateYCoordinate = function (y) {\r\n        return y >= 1 && y <= 10;\r\n    };\r\n    //get a row from y_coor(nth row)\r\n    Board.prototype.getRowFromYCoordinate = function (y_coor) {\r\n        var row = [];\r\n        for (var i = 0; i < 9; i++) {\r\n            row.push(this.intersections[i][y_coor - 1]);\r\n        }\r\n        return row;\r\n    };\r\n    //get a column from x_coor(nth col)\r\n    Board.prototype.getColFromXCoordinate = function (x_coor) {\r\n        var col = [];\r\n        for (var j = 0; j < 10; j++) {\r\n            col.push(this.intersections[x_coor - 1][j]);\r\n        }\r\n        return col;\r\n    };\r\n    Board.prototype.detectZoom = function () {\r\n        var ratio = 0;\r\n        if (window.devicePixelRatio !== undefined) {\r\n            ratio = window.devicePixelRatio;\r\n        }\r\n        // ???? not working, why?\r\n        // else if (~ua.indexOf('msie')) {\r\n        //     if (screen.deviceXDPI && screen.logicalXDPI) {\r\n        //         ratio = screen.deviceXDPI / screen.logicalXDPI;\r\n        //     }\r\n        // }\r\n        else if (window.outerWidth !== undefined && window.innerWidth !== undefined) {\r\n            ratio = window.outerWidth / window.innerWidth;\r\n        }\r\n        if (ratio) {\r\n            ratio = Math.round(ratio * 100);\r\n        }\r\n        this.ratio = ratio;\r\n    };\r\n    Board.prototype.render = function () {\r\n        var board = $('#board');\r\n        // $(board).css('height', 'fit-content');\r\n        $(\"#id_chessboard\").css(\"position\", \"fixed\");\r\n        $(\"#id_chessboard\").css(\"max-height\", '100vh');\r\n        // $(\"#board\").css(\"left\", \"0px\");\r\n        $(\"#id_chessboard\").css(\"margin\", \"0\");\r\n        $(\"#id_chessboard\").css(\"padding\", \"0vw\");\r\n        board.css('margin-left', 'auto');\r\n        board.css('margin-right', 'auto');\r\n        board.css('padding', 0);\r\n        //for testing purposes, added some color to the background\r\n        $('.className_grid_div').css('background-color', 'rgba(255,0,0,0.3)');\r\n        //fits the size when resizing\r\n        $(window).on('resize', function () {\r\n            frontend_utils_1.fitSize();\r\n        });\r\n        //fixed the size issue upon entry\r\n        $(document).on('ready', function () {\r\n            frontend_utils_1.fitSize();\r\n        });\r\n        $(\"#board\").css(\"max-width\", \"100vh\");\r\n    };\r\n    return Board;\r\n}());\r\nexports.Board = Board;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BlackCannon = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar Cannon = /** @class */ (function (_super) {\r\n    __extends(Cannon, _super);\r\n    function Cannon(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.General, color) || this;\r\n    }\r\n    Cannon.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the dest is not inside of the \"田\" shaped space of the board\r\n        //Returns false.\r\n        if (!this.isValidCannonPosition(x, y))\r\n            return false;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    Cannon.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        moveable_points = moveable_points.concat(this.checkRow());\r\n        moveable_points = moveable_points.concat(this.checkColumn());\r\n        moveable_points = moveable_points.concat(this.checkShellingRow());\r\n        moveable_points = moveable_points.concat(this.checkShellingCol());\r\n        return moveable_points;\r\n    };\r\n    // 检查可以炮轰的地方\r\n    Cannon.prototype.checkShellingRow = function () {\r\n        Util_1.default.trace(\"in checkShelling()\");\r\n        Util_1.default.trace(\"Cannon\");\r\n        // let Y_coor = this.point.y_coor\r\n        var X_coor = this.point.x_coor;\r\n        // let piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var cornerstone_flag = false;\r\n        var target_point_flag = -1;\r\n        var shellable_points_in_this_column = [];\r\n        for (var index in piece_row) {\r\n            if (parseInt(index) < X_coor - 1) {\r\n                Util_1.default.trace(\"正在检测该棋子的左侧\");\r\n                // 有任何一方的棋子\r\n                if (piece_row[index].piece) {\r\n                    // 有了炮台，下一个有棋子的格子就是可以走的\r\n                    if (cornerstone_flag) {\r\n                        shellable_points_in_this_column.push(piece_row[index]);\r\n                        break; //只加一个点进去就结束了\r\n                    }\r\n                    // 没有炮台，这就是炮台\r\n                    else if (!cornerstone_flag) {\r\n                        cornerstone_flag = true; // the index is not added, but the next one is.\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n            else if (parseInt(index) > X_coor + 1) {\r\n                Util_1.default.trace(\"正在检测该棋子的右侧\");\r\n                // 有任何一方的棋子\r\n                if (piece_row[index].piece) {\r\n                    // 有了炮台，下一个有棋子的格子就是可以走的\r\n                    if (cornerstone_flag) {\r\n                        shellable_points_in_this_column.push(piece_row[index]);\r\n                        break; //只加一个点进去就结束了\r\n                    }\r\n                    // 没有炮台，这就是炮台\r\n                    else if (!cornerstone_flag) {\r\n                        cornerstone_flag = true; // the index is not added, but the next one is.\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return shellable_points_in_this_column;\r\n    };\r\n    // 检查可以炮轰的地方\r\n    Cannon.prototype.checkShellingCol = function () {\r\n        Util_1.default.trace(\"in checkShelling()\");\r\n        Util_1.default.trace(\"Cannon\");\r\n        var Y_coor = this.point.y_coor;\r\n        // let X_coor = this.point.x_coor\r\n        var piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        // let piece_row = this.board.getRowFromYCoordinate(this.point.y_coor);//Checks the points in this row\r\n        var cornerstone_flag = false;\r\n        var target_point_flag = -1;\r\n        var shellable_points_in_this_column = [];\r\n        for (var index in piece_col) {\r\n            if (parseInt(index) < Y_coor) {\r\n                Util_1.default.trace(\"正在检测该棋子的上方\");\r\n                // 有任何一方的棋子\r\n                if (piece_col[index].piece) {\r\n                    console.log('piece_col[index]piece_col[index] ===================++');\r\n                    console.log(piece_col[index]);\r\n                    // 有了炮台，下一个有棋子的格子就是可以走的\r\n                    if (cornerstone_flag) {\r\n                        Util_1.default.trace(\"有炮台了，添加以下点：\");\r\n                        Util_1.default.trace(piece_col[index]);\r\n                        shellable_points_in_this_column.push(piece_col[index]);\r\n                        break; //只加一个点进去就结束了\r\n                    }\r\n                    // 没有炮台，这就是炮台\r\n                    else if (!cornerstone_flag) {\r\n                        Util_1.default.trace(\"无炮台\");\r\n                        cornerstone_flag = true; // the index is not added, but the next one is.\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n            else if (parseInt(index) > Y_coor) {\r\n                Util_1.default.trace(\"正在检测该棋子的下方\");\r\n                // 检测到该点内有任何一方的棋子\r\n                if (piece_col[index].piece) {\r\n                    console.log('piece_col[index] ===================++');\r\n                    console.log(piece_col[index]);\r\n                    console.log(\"cornerstone_flag:\");\r\n                    console.log(cornerstone_flag);\r\n                    // console.log('piece_col-------------------------------------')\r\n                    // console.log(piece_col)\r\n                    // console.log(shellable_points_in_this_column)\r\n                    // 有了炮台，下一个有棋子的格子就是可以走的\r\n                    if (cornerstone_flag == true) {\r\n                        Util_1.default.trace(\"有炮台了，正在添加以下点：\");\r\n                        Util_1.default.trace(piece_col[index]);\r\n                        shellable_points_in_this_column.push(piece_col[index]);\r\n                        break; //只加一个点进去就结束了\r\n                    }\r\n                    // 没有炮台，这就是炮台\r\n                    else if (!cornerstone_flag) {\r\n                        cornerstone_flag = true; // the index is not added, but the next that has a piece is.\\\r\n                        Util_1.default.trace(\"之前无炮台，现在有炮台了。\");\r\n                        console.log(cornerstone_flag);\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return shellable_points_in_this_column;\r\n    };\r\n    //returns the grids that General can go in a column\r\n    Cannon.prototype.checkColumn = function () {\r\n        Util_1.default.trace(\"in checkColumn()\");\r\n        Util_1.default.trace(\"Cannon\");\r\n        var Y_coor = this.point.y_coor;\r\n        // let X_coor = this.point.x_coor\r\n        var piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        // let piece_row = this.board.getRowFromYCoordinate(this.point.y_coor);//Checks the points in this row\r\n        var start_flag = 0; //row 1\r\n        var end_flag = 9; //row 10 \r\n        //trasversing the column (Point [])\r\n        for (var index in piece_col) {\r\n            Util_1.default.trace('piece_col:');\r\n            Util_1.default.trace(piece_col);\r\n            //if the piece in that point is not null, do some checking\r\n            if (piece_col[index].piece != null) {\r\n                Util_1.default.trace(\"有棋子\");\r\n                //checks the indices that are smaller than the point\r\n                // 这颗待处理棋子在上方\r\n                if (parseInt(index) < Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PlayerColor.BLACK) {\r\n                        Util_1.default.trace(\"队友在上方\");\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    }\r\n                    else if (piece_col[index].piece.color != ChessPiece_1.PlayerColor.BLACK) {\r\n                        start_flag = parseInt(index);\r\n                        console.log(\"debugging...........................\");\r\n                        console.log(start_flag);\r\n                    }\r\n                    if (start_flag === Y_coor - 1) // if a friendly piece is blocking right abovbe it\r\n                        start_flag = Y_coor; // start_flag is set to the next row \r\n                    // Log.trace(\"start_flag:\" + start_flag)\r\n                }\r\n                //checks those larger than that point\r\n                // 这颗待处理棋子在下方\r\n                else if (parseInt(index) > Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PlayerColor.BLACK)\r\n                        end_flag = parseInt(index) - 1; // the index is not added, but the last one is.\r\n                    // 是敌方棋子的话：\r\n                    else if (piece_col[index].piece.color != ChessPiece_1.PlayerColor.BLACK)\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === Y_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = Y_coor - 2; // start_flag is set to the next row \r\n                    // Log.trace(\"end_flag:\" + end_flag)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_column = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (Y_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_column.push(piece_col[i]);\r\n        }\r\n        console.log(movable_points_in_this_column);\r\n        return movable_points_in_this_column;\r\n        // console.log(this.board.getColFromXCoordinate(X_coor));\r\n    };\r\n    //returns the grids that the General can go in a row\r\n    Cannon.prototype.checkRow = function () {\r\n        Util_1.default.trace(\"in checkRows()\");\r\n        // let Y_coor = this.point.y_coor\r\n        var X_coor = this.point.x_coor;\r\n        // let piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0;\r\n        var end_flag = 8;\r\n        //trasversing the column (Point [])\r\n        //遍历横行\r\n        for (var index in piece_row) {\r\n            //if the piece in that point is not null, do some checking\r\n            //发现该点内有棋子，判断是敌是友\r\n            if (piece_row[index].piece != null) {\r\n                Util_1.default.trace(\"有棋子\");\r\n                Util_1.default.trace(piece_row);\r\n                //checks the indices that are smaller than the point\r\n                // 该枚车的左边\r\n                if (parseInt(index) < X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].getPiece().isFriendly()) {\r\n                        console.log(\"---------------------------------debug-----------------------------\");\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    }\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === X_coor - 1) // if a friendly piece is blocking immediately left to it\r\n                        start_flag = X_coor; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"start_flag:\" + start_flag);\r\n                }\r\n                //checks those larger than that point\r\n                // 检查该车的右边\r\n                else if (parseInt(index) > X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].getPiece().isFriendly())\r\n                        end_flag = parseInt(index) - 1; // Friendly blocking: the index is not added, but the previous one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === X_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = X_coor - 2; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"end_flag:\" + end_flag);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_row = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (X_coor - 1 === i) {\r\n                continue;\r\n            }\r\n            movable_points_in_this_row.push(piece_row[i]);\r\n        }\r\n        console.log(movable_points_in_this_row);\r\n        return movable_points_in_this_row;\r\n    };\r\n    return Cannon;\r\n}(ChessPiece_1.Piece));\r\nvar BlackCannon = /** @class */ (function (_super) {\r\n    __extends(BlackCannon, _super);\r\n    function BlackCannon(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.BLACK) || this;\r\n        _this.elem.src = '../img/pieces/black-pao.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        $(_this.elem).on('click', function () {\r\n            _super.prototype.movablePoints.call(_this);\r\n        });\r\n        return _this;\r\n    }\r\n    BlackCannon.prototype.isValidCannonPosition = function (x, y) {\r\n        return (y >= 0) && (y <= 10) && (x >= 0) && (x <= 9);\r\n    };\r\n    return BlackCannon;\r\n}(Cannon));\r\nexports.BlackCannon = BlackCannon;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BlackChariot = exports.RedChariot = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar Chariot = /** @class */ (function (_super) {\r\n    __extends(Chariot, _super);\r\n    function Chariot(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.General, color) || this;\r\n    }\r\n    Chariot.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the dest is not inside of the \"田\" shaped space of the board\r\n        //Returns false.\r\n        if (!this.isValidChariotPosition(x, y))\r\n            return false;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    return Chariot;\r\n}(ChessPiece_1.Piece));\r\nvar RedChariot = /** @class */ (function (_super) {\r\n    __extends(RedChariot, _super);\r\n    function RedChariot(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.RED) || this;\r\n        _this.elem.src = '../img/pieces/red-ju.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        $(_this.elem).on('click', function () {\r\n            // Log.trace(\"invoked this.checkColumns()\")\r\n            // Log.trace(this.checkColumn())\r\n            // Log.trace(this.checkRow())\r\n            _this.movablePoints();\r\n        });\r\n        return _this;\r\n    }\r\n    RedChariot.prototype.movablePoints = function () {\r\n        // Log.trace('inside this.movablePoints()')\r\n        var moveable_points = [];\r\n        // moveable_points.length = 0;\r\n        moveable_points = moveable_points.concat(this.checkRow());\r\n        moveable_points = moveable_points.concat(this.checkColumn());\r\n        // Log.trace('moveable_points is empty here !!!!')\r\n        // Log.trace(moveable_points)\r\n        return moveable_points;\r\n    };\r\n    //returns the grids that General can go in a column\r\n    RedChariot.prototype.checkColumn = function () {\r\n        Util_1.default.trace(\"in checkColumns\");\r\n        var Y_coor = this.point.y_coor;\r\n        var X_coor = this.point.x_coor;\r\n        var piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0; //row 1\r\n        var end_flag = 9; //row 10 \r\n        //trasversing the column (Point [])\r\n        for (var index in piece_col) {\r\n            //if the piece in that point is not null, do some checking\r\n            if (piece_col[index].piece != null) {\r\n                //checks the indices that are smaller than the point\r\n                if (parseInt(index) < Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PlayerColor.RED)\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === Y_coor - 1) // if a friendly piece is blocking right abovbe it\r\n                        start_flag = Y_coor; // start_flag is set to the next row \r\n                    // Log.trace(\"start_flag:\" + start_flag)\r\n                }\r\n                //checks those larger than that point\r\n                else if (parseInt(index) > Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PlayerColor.RED)\r\n                        end_flag = parseInt(index) - 1; // the index is not added, but the last one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === Y_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = Y_coor - 2; // start_flag is set to the next row \r\n                    // Log.trace(\"end_flag:\" + end_flag)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_column = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (Y_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_column.push(piece_col[i]);\r\n        }\r\n        return movable_points_in_this_column;\r\n        // console.log(this.board.getColFromXCoordinate(X_coor));\r\n    };\r\n    //returns the grids that the General can go in a row\r\n    RedChariot.prototype.checkRow = function () {\r\n        Util_1.default.trace(\"in checkRows()\");\r\n        // let Y_coor = this.point.y_coor\r\n        var X_coor = this.point.x_coor;\r\n        // let piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0;\r\n        var end_flag = 8;\r\n        //trasversing the column (Point [])\r\n        for (var index in piece_row) {\r\n            //if the piece in that point is not null, do some checking\r\n            // 判定敌友\r\n            if (piece_row[index].piece != null) {\r\n                //checks the indices that are smaller than the point\r\n                // 车的左边\r\n                if (parseInt(index) < X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].piece.color == ChessPiece_1.PlayerColor.RED)\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === X_coor - 1) // if a friendly piece is blocking right above it\r\n                        start_flag = X_coor; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"start_flag:\" + start_flag);\r\n                }\r\n                //checks those larger than that point\r\n                else if (parseInt(index) > X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].piece.color == ChessPiece_1.PlayerColor.RED)\r\n                        end_flag = parseInt(index) - 1; // the index is not added, but the last one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === X_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = X_coor - 2; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"end_flag:\" + end_flag);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_row = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (X_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_row.push(piece_row[i]);\r\n        }\r\n        return movable_points_in_this_row;\r\n    };\r\n    RedChariot.prototype.isValidChariotPosition = function (x, y) {\r\n        return (y >= 8) && (y <= 10) && (x >= 4) && (x <= 6);\r\n        // && !(x > 0 && y > 0);\r\n    };\r\n    return RedChariot;\r\n}(Chariot));\r\nexports.RedChariot = RedChariot;\r\nvar BlackChariot = /** @class */ (function (_super) {\r\n    __extends(BlackChariot, _super);\r\n    function BlackChariot(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.BLACK) || this;\r\n        _this.elem.src = '../img/pieces/black-ju.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        $(_this.elem).on('click', function () {\r\n            // Log.trace(\"invoked this.checkColumns()\")\r\n            // Log.trace(this.checkColumn())\r\n            // Log.trace(this.checkRow())\r\n            _this.movablePoints();\r\n        });\r\n        return _this;\r\n    }\r\n    BlackChariot.prototype.movablePoints = function () {\r\n        // Log.trace('inside this.movablePoints()')\r\n        var moveable_points = [];\r\n        // moveable_points.length = 0;\r\n        moveable_points = moveable_points.concat(this.checkRow());\r\n        moveable_points = moveable_points.concat(this.checkColumn());\r\n        // Log.trace('moveable_points is empty here !!!!')\r\n        // Log.trace(moveable_points)\r\n        return moveable_points;\r\n    };\r\n    //returns the grids that General can go in a column\r\n    BlackChariot.prototype.checkColumn = function () {\r\n        Util_1.default.trace(\"in checkColumns\");\r\n        Util_1.default.trace(\"Chariots\");\r\n        var Y_coor = this.point.y_coor;\r\n        // let X_coor = this.point.x_coor\r\n        var piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        // let piece_row = this.board.getRowFromYCoordinate(this.point.y_coor);//Checks the points in this row\r\n        var start_flag = 0; //row 1\r\n        var end_flag = 9; //row 10 \r\n        //trasversing the column (Point [])\r\n        for (var index in piece_col) {\r\n            Util_1.default.trace('piece_col:');\r\n            Util_1.default.trace(piece_col);\r\n            //if the piece in that point is not null, do some checking\r\n            if (piece_col[index].piece != null) {\r\n                Util_1.default.trace(\"有棋子\");\r\n                //checks the indices that are smaller than the point\r\n                // 这颗待处理棋子在上方\r\n                if (parseInt(index) < Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PlayerColor.BLACK) {\r\n                        Util_1.default.trace(\"队友在上方\");\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    }\r\n                    else if (piece_col[index].piece.color != ChessPiece_1.PlayerColor.BLACK) {\r\n                        start_flag = parseInt(index);\r\n                        console.log(\"debugging...........................\");\r\n                        console.log(start_flag);\r\n                    }\r\n                    if (start_flag === Y_coor - 1) // if a friendly piece is blocking right abovbe it\r\n                        start_flag = Y_coor; // start_flag is set to the next row \r\n                    // Log.trace(\"start_flag:\" + start_flag)\r\n                }\r\n                //checks those larger than that point\r\n                // 这颗待处理棋子在下方\r\n                else if (parseInt(index) > Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PlayerColor.BLACK)\r\n                        end_flag = parseInt(index) - 1; // the index is not added, but the last one is.\r\n                    // 是敌方棋子的话：\r\n                    else if (piece_col[index].piece.color != ChessPiece_1.PlayerColor.BLACK)\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === Y_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = Y_coor - 2; // start_flag is set to the next row \r\n                    // Log.trace(\"end_flag:\" + end_flag)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_column = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (Y_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_column.push(piece_col[i]);\r\n        }\r\n        console.log(movable_points_in_this_column);\r\n        return movable_points_in_this_column;\r\n        // console.log(this.board.getColFromXCoordinate(X_coor));\r\n    };\r\n    //returns the grids that the General can go in a row\r\n    BlackChariot.prototype.checkRow = function () {\r\n        Util_1.default.trace(\"in checkRows()\");\r\n        // let Y_coor = this.point.y_coor\r\n        var X_coor = this.point.x_coor;\r\n        // let piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0;\r\n        var end_flag = 8;\r\n        //trasversing the column (Point [])\r\n        //遍历横行\r\n        for (var index in piece_row) {\r\n            //if the piece in that point is not null, do some checking\r\n            //发现该点内有棋子，判断是敌是友\r\n            if (piece_row[index].piece != null) {\r\n                Util_1.default.trace(\"有棋子\");\r\n                Util_1.default.trace(piece_row);\r\n                //checks the indices that are smaller than the point\r\n                // 该枚车的左边\r\n                if (parseInt(index) < X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].getPiece().isFriendly()) {\r\n                        console.log(\"---------------------------------debug-----------------------------\");\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    }\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === X_coor - 1) // if a friendly piece is blocking immediately left to it\r\n                        start_flag = X_coor; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"start_flag:\" + start_flag);\r\n                }\r\n                //checks those larger than that point\r\n                // 检查该车的右边\r\n                else if (parseInt(index) > X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].getPiece().isFriendly())\r\n                        end_flag = parseInt(index) - 1; // Friendly blocking: the index is not added, but the previous one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === X_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = X_coor - 2; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"end_flag:\" + end_flag);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_row = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (X_coor - 1 === i) {\r\n                continue;\r\n            }\r\n            movable_points_in_this_row.push(piece_row[i]);\r\n        }\r\n        console.log(movable_points_in_this_row);\r\n        return movable_points_in_this_row;\r\n    };\r\n    BlackChariot.prototype.isValidChariotPosition = function (x, y) {\r\n        return (y >= 0) && (y <= 10) && (x >= 0) && (x <= 9);\r\n        // && !(x > 0 && y > 0);\r\n    };\r\n    return BlackChariot;\r\n}(Chariot));\r\nexports.BlackChariot = BlackChariot;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PlayerColor = exports.PieceRole = exports.Piece = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\nObject.defineProperty(exports, \"PlayerColor\", { enumerable: true, get: function () { return frontend_utils_1.PlayerColor; } });\r\n// used in class Piece\r\n// 棋子颜色\r\n// enum PlayerColor {\r\n//     'BLACK',\r\n//     'RED'\r\n// }\r\n// used in class Game, \r\n// 玩家颜色\r\n// enum PlayerColor {\r\n//     'BLACK',\r\n//     'RED'\r\n// }\r\n// 棋子类型\r\nvar PieceRole;\r\n(function (PieceRole) {\r\n    PieceRole[PieceRole[\"General\"] = 0] = \"General\";\r\n    PieceRole[PieceRole[\"Advisor\"] = 1] = \"Advisor\";\r\n    PieceRole[PieceRole[\"Elephant\"] = 2] = \"Elephant\";\r\n    PieceRole[PieceRole[\"Chariot\"] = 3] = \"Chariot\";\r\n    PieceRole[PieceRole[\"Horse\"] = 4] = \"Horse\";\r\n    PieceRole[PieceRole[\"Cannon\"] = 5] = \"Cannon\";\r\n    PieceRole[PieceRole[\"Soldier\"] = 6] = \"Soldier\";\r\n})(PieceRole || (PieceRole = {}));\r\nexports.PieceRole = PieceRole;\r\nvar Piece = /** @class */ (function () {\r\n    function Piece(point, board, role, color) {\r\n        // 与移动相关      \r\n        this.point = point; // 被置于某个点\r\n        // this.has_moved = false;                           // 是否已经被移动\r\n        this.active = false; // 是否被选中\r\n        // 与棋子属性相关\r\n        this.board = board;\r\n        this.piece_role = role;\r\n        this.color = color;\r\n        this.elem = document.createElement(\"img\");\r\n        // 与棋子大小有关\r\n        this.ratio = 100; // TODO:放大倍率 ?\r\n        this.side_length = this.ratio * 0.01 * frontend_utils_1.SIDE_LENGTH; // 棋子的边长\r\n        // 0 -> not selected\r\n        // 1 -> selected, not moved\r\n        // 2 -> moved, refesh state to 0\r\n        this.state = 0;\r\n        $(window).on('mousedown', function (e) {\r\n            e.preventDefault(); //get rid of non-game experience (selecting pictures and stuff)\r\n        });\r\n        $(window).on('change', function (e) {\r\n            e.preventDefault(); //get rid of non-game experience (selecting pictures and stuff)\r\n            console.log('changed');\r\n        });\r\n        // 运行这个，就会把所有的Listener都加上\r\n        this.listenerManager();\r\n    }\r\n    Piece.prototype.listenerManager = function () {\r\n        this.attachSelectPieceListener();\r\n        // this.attachMoveToGridListener()\r\n        // this.removeMoveToGridListener()\r\n    };\r\n    /**\r\n     *  I. When the player clicks on a piece,\r\n     *  The listener invokes the method to determine movable grids,\r\n     *  then it highlights all the grids\r\n     */\r\n    Piece.prototype.attachSelectPieceListener = function () {\r\n        var _this = this;\r\n        console.log(\"attachSelectPieceListener, check active:\");\r\n        console.log(this.board.active_piece);\r\n        // TODO：需要写一个逻辑，判断是否之前已经点过一个棋子\r\n        // 点击了棋子的img之后\r\n        $(this.elem).on('click', function (e) {\r\n            if (_this.board.active_piece) {\r\n                console.log(\"其他棋子还没走呢！\");\r\n            }\r\n            else {\r\n                console.log(\"其他棋子走过了\");\r\n                console.log('点击了棋子：');\r\n                console.log(_this.elem);\r\n                e.preventDefault();\r\n                // 1. clearing all the colored background first:\r\n                $('.className_grid_div').css('background', 'rgba(3, 181, 252,0.0)');\r\n                // 2. put all the movalbe positions into an array\r\n                var movable_points = [];\r\n                movable_points = _this.movablePoints();\r\n                // console.log(movable_points)\r\n                // 3. highlight all the movalbe positions\r\n                // If the currentPlayer's color is the same as the piece color   \r\n                if (_this.getCurrentPlayer() == _this.color) {\r\n                    movable_points.forEach(function (point) {\r\n                        $(point.elem).css('background', 'rgba(3, 181, 252,0.5');\r\n                    });\r\n                }\r\n                // 设置自己被选中，告知棋盘选中的是自己\r\n                _this.active = true;\r\n                _this.board.active_piece = _this;\r\n                // TODO:找到ListenerManager的问题所在，并且把这个移动到那里面。\r\n                // 下一步是Move To Grid\r\n                setTimeout(function () {\r\n                    _this.attachMoveToGridListener();\r\n                }, 100);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     *  The user has selected a piece in step I.\r\n     *\r\n     *  II. once the user has selected the piece,\r\n     *  a listener is attached to the grid to check\r\n     *  which grid the user is moving to\r\n     *\r\n     *\r\n     *  在I中玩家已经选择了棋子\r\n     *\r\n     *  II.\r\n     *  在用attachSelectPieceListener()选择了棋子之后,\r\n     *  再用attachMoveToGridListener() 选择移动到哪个格子\r\n     */\r\n    Piece.prototype.attachMoveToGridListener = function () {\r\n        var _this = this;\r\n        console.log(this.point);\r\n        //1. attach another listener which listens to the next click:\r\n        $('.className_grid_div').on('click', function (e) {\r\n            console.log(\"点击了棋子:\");\r\n            console.log(e.target);\r\n            console.log(e.target.tagName);\r\n            console.log(\"\\u68CB\\u5B50\\u6240\\u5728\\u7684\\u683C\\u5B50:\");\r\n            console.log(e.target.parentNode);\r\n            console.log(e.target.parentElement);\r\n            // ① if the piece is selected, then go on and see if the grid is moveable\r\n            // ① 如果已经选择了某个棋子，判断是否能够走\r\n            if (_this.board.active_piece && // Condition #1 : 选中了棋子\r\n                _this.board.game.getCurrentPlayer() == _this.color) { // Condition #2 : 是当前玩家走\r\n                console.log('the piece is selected?' + _this.active);\r\n                console.log(\"active piece:\");\r\n                console.log(_this.board.active_piece);\r\n                console.log(_this.board.target_coordinate);\r\n                // 如果点击的是棋子，而不是空的格子\r\n                // 判断条件：HTML元素是IMG而不是DIV\r\n                if ((e.target.tagName).toUpperCase() == 'IMG') {\r\n                    console.log(\"点击了另一个棋子\");\r\n                    var parentNode = e.target.parentElement;\r\n                    if (parentNode != null) {\r\n                        console.log(\"棋子所在的格子：\");\r\n                        console.log(parentNode);\r\n                        // 记录下一步要走的坐标\r\n                        _this.board.target_coordinate = _this.board.getCoordinateFromElemId(parentNode.id);\r\n                    }\r\n                }\r\n                else {\r\n                    console.log(\"点击了一个空的格子\");\r\n                    _this.board.target_coordinate = _this.board.getCoordinateFromElemId(e.target.id);\r\n                }\r\n                console.log(_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]));\r\n                // ①.a 如果不是 [-1, -1], 说明玩家选择了某个格子\r\n                if (_this.board.target_coordinate[0] != -1 && _this.board.target_coordinate[1] != -1) {\r\n                    // 增加一个判断条件，看这个位置是否有棋子\r\n                    // TODO: check if the point's 'piece' key is available at all?\r\n                    if (_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).hasPiece()) {\r\n                        console.log(\"该点有棋子\");\r\n                        console.log(\"=========================== debug =================================\");\r\n                        console.log(_this.isFriendly(_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).getPiece()));\r\n                        // 棋子是自己人的\r\n                        // 那么选中的棋子则换为该棋子\r\n                        if (_this.isFriendly(_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).getPiece())) {\r\n                            alert(\"You Can't Move Here, A Friendly Piece is at this Position\");\r\n                            _this.removeMoveToGridListener();\r\n                            return; //直接结束\r\n                        }\r\n                        // 不是自己人的，要提子\r\n                        // TODO:增加提子逻辑\r\n                        else if (!_this.isFriendly(_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).getPiece())) {\r\n                            // alert(\"正在提子\")\r\n                            // 目标Point中移除piece\r\n                            delete _this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).piece;\r\n                            console.log(\"=========  debug ===========\");\r\n                            console.log(_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]));\r\n                            // 目标Point.elem 移除 HTML元素\r\n                            _this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).elem.innerHTML = '';\r\n                        }\r\n                        else {\r\n                            // 目标Point中移除piece\r\n                            delete _this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).piece;\r\n                            console.log(\"=========  debug ===========\");\r\n                            console.log(_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]));\r\n                            // 目标Point.elem 移除 HTML元素\r\n                            _this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).elem.innerHTML = '';\r\n                        }\r\n                    }\r\n                    // \r\n                    else {\r\n                        _this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).elem.innerHTML = '';\r\n                    }\r\n                    console.log(_this.board.target_coordinate);\r\n                    var next_x_coor = _this.board.target_coordinate[0];\r\n                    var next_y_coor = _this.board.target_coordinate[1];\r\n                    // 棋子属性、Element移动到目标点, 详见moveToPoint\r\n                    _this.board.active_piece.moveToPoint(_this.board.getPointFromCoordinates(next_x_coor, next_y_coor));\r\n                    $('.className_grid_div').css('background', 'rgba(0,0,0,0.0)'); // setting back the background to non-colored and transparent\r\n                    _this.board.target_coordinate = [-1, -1]; // 重新归[-1, -1]\r\n                    _this.active = false; // 棋子状态为不再选中\r\n                    // TODO >>>>>  Remove if not needed anymore <<<<<<<<<\r\n                    // console.log('the piece is selected?' + this.active);\r\n                    // console.log(`active piece:`);\r\n                    // console.log(this.board.active_piece);\r\n                    // console.log(this.board.target_coordinate )\r\n                    _this.board.game.alternatePlayer(); // 切换到下一个玩家\r\n                }\r\n            }\r\n            // ② 还没有选中棋子\r\n            else {\r\n                console.log(\"还没有选择棋子......\");\r\n                console.log('Is the piece is selected? ' + _this.active);\r\n                console.log('Doing nothing...');\r\n                $('.className_grid_div').css('background', 'rgba(0,0,0,0.0)'); // setting back the background to non-colored and transparent\r\n            }\r\n            _this.removeMoveToGridListener();\r\n            // $('.className_grid_div').unbind('click');  // HACK after clicking, we need to get rid of the listener\r\n            // $('.className_grid_div').css('background', 'rgba(0,0,0,0.0)') // setting back the background to non-colored and transparent\r\n        });\r\n    };\r\n    //upon finishing the listener, it removes the listener from the grid\r\n    Piece.prototype.removeMoveToGridListener = function () {\r\n        this.board.active_piece = null;\r\n        //4. remove the click listener from the grids\r\n        console.log('已经点击了移动目标格,现在移除MoveToGridListener');\r\n        $('.className_grid_div').off('click'); // after clicking, we need to get rid of the listener\r\n        $('.className_grid_div').css('background', 'rgba(0,0,0,0.0)'); // setting back the background to non-colored and transparent\r\n    };\r\n    Piece.prototype.movablePoints = function () {\r\n        Util_1.default.trace('movable points of a piece');\r\n        return [];\r\n    };\r\n    Piece.prototype.getElement = function () {\r\n        return this.elem;\r\n    };\r\n    //sets the point of the piece\r\n    Piece.prototype.moveToPoint = function (point) {\r\n        // 删除原来的元素\r\n        this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].elem.removeChild(this.elem);\r\n        delete this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].piece;\r\n        // console.log(\"===================== debug ==============================\");\r\n        // console.log(this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1])\r\n        // 更换到新的点\r\n        this.point = point;\r\n        this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].elem.appendChild(this.elem);\r\n        this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].piece = this;\r\n        console.log(this.board.intersections);\r\n        console.log(this.point);\r\n        console.log(this.point.x_coor);\r\n        console.log(this.point.y_coor);\r\n    };\r\n    // ========= Getter & Setters =========================================\r\n    /**\r\n     * 获取棋子的类型\r\n     * Get Piece Role\r\n     */\r\n    Piece.prototype.getRole = function () {\r\n        return this.piece_role;\r\n    };\r\n    /**\r\n     * 获取棋子的颜色\r\n     * Get Piece Color\r\n     */\r\n    Piece.prototype.getColor = function () {\r\n        return this.color;\r\n    };\r\n    Piece.prototype.getCurrentPlayer = function () {\r\n        return this.board.game.getCurrentPlayer();\r\n    };\r\n    // \r\n    // ------------------ 下一目标点 ------------------------\r\n    // 目标点的坐标\r\n    Piece.prototype.getTargetPointCoordinate = function () {\r\n        return this.board.target_coordinate;\r\n    };\r\n    // 获得目标点的 X 坐标\r\n    Piece.prototype.getTargetPointXCoordinate = function () {\r\n        return this.board.target_coordinate[0];\r\n    };\r\n    // 获得目标点的 Y 坐标\r\n    Piece.prototype.getTargetPointYCoordinate = function () {\r\n        return this.board.target_coordinate[1];\r\n    };\r\n    /**\r\n     * @param point Check if a point has a piece with the same side\r\n     *\r\n     */\r\n    Piece.prototype.checkSameColorPieceInPoint = function (point) {\r\n        var piece = point.getPiece();\r\n        if (!piece) {\r\n            return false;\r\n        }\r\n        return piece.getColor() === this.color;\r\n    };\r\n    /**\r\n    * @param point Check if a point has a piece with the same side\r\n    */\r\n    Piece.prototype.isFriendly = function (piece) {\r\n        // console.log(piece)\r\n        try {\r\n            if (!piece) {\r\n                console.log(\"没有棋子！\");\r\n            }\r\n            // FIXME：PROBLEM\r\n            return piece.getColor() === this.color;\r\n        }\r\n        catch (e) {\r\n            console.log(\"没有棋子！\");\r\n        }\r\n        return true;\r\n    };\r\n    Piece.prototype.isEnemy = function (piece) {\r\n        if (!piece) {\r\n            return false;\r\n        }\r\n        return piece.getColor() != this.color;\r\n    };\r\n    // 渲染HTML Elements.\r\n    // Render the html elements to the webpage.\r\n    Piece.prototype.render = function () {\r\n        this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].elem.append(this.elem); // encapsulates the next line of code;\r\n        $(this.elem).addClass('pieces');\r\n        //add className for the HTML <img> of the piece - PieceRole\r\n        $(this.elem).addClass(PieceRole[this.piece_role].toString());\r\n        //add className for the HTML <img> of the piece - PieceColor\r\n        $(this.elem).addClass(frontend_utils_1.PlayerColor[this.color].toString());\r\n        // $(window).on('resize',Piece.adjustResize);\r\n        // $(this.elem)\r\n        //     .on('mousedown',function () {\r\n        //         isDragging = false;\r\n        //         console.log(isDragging)\r\n        //     })\r\n        //     .on('mousemove',function () {\r\n        //         isDragging = true;\r\n        //         console.log(isDragging)\r\n        //     })\r\n        //     .on('mouseup',function () {\r\n        //         var wasDragging = isDragging;\r\n        //         isDragging = false;\r\n        //         console.log(isDragging)\r\n        //         if (!wasDragging) {\r\n        //             console.log('dragging')\r\n        //             $(\"#throbble\").toggle();\r\n        //         }\r\n        //     });\r\n        // TODO: click events:\r\n    };\r\n    // 调整棋盘、棋子的大小\r\n    Piece.adjustResize = function () {\r\n        if (screen.width == window.innerWidth) {\r\n            console.log(\"at exact 100%\");\r\n            frontend_utils_1.getChessBoardSize(); // 判断棋盘的大小\r\n            $('.className_grid_div').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100)); // 更新棋盘的宽度\r\n            $('.className_grid_div').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100)); // 更新棋盘的高度\r\n            $('.pieces').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100)); // 更新棋子的高度\r\n            $('.pieces').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100)); // 更新棋子的宽度\r\n            $(\"#board\").css(\"width\", $(\"#board\").css('height'));\r\n            $(\"#id_chessboard\").css(\"width\", $(\"#board\").css('width')); // 棋盘的宽度和高度统一 \r\n        }\r\n        else if (screen.width > window.innerWidth) {\r\n            console.log(\"you have zoomed in the page i.e more than 100%\");\r\n            frontend_utils_1.getZoomedRatio();\r\n            frontend_utils_1.getChessBoardSize();\r\n            $('.className_grid_div').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.className_grid_div').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $(\"#board\").css(\"width\", $(\"#board\").css('height'));\r\n            $(\"#id_chessboard\").css(\"width\", $(\"#board\").css('width'));\r\n        }\r\n        else {\r\n            console.log(\"you have zoomed out i.e less than 100%\");\r\n            frontend_utils_1.getZoomedRatio();\r\n            frontend_utils_1.getChessBoardSize();\r\n            var current_width = $('.className_grid_div').css('width');\r\n            $('.className_grid_div').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.className_grid_div').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $(\"#board\").css(\"width\", $(\"#board\").css('height'));\r\n            $(\"#id_chessboard\").css(\"width\", $(\"#board\").css('width'));\r\n        }\r\n    };\r\n    return Piece;\r\n}());\r\nexports.Piece = Piece;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Game = void 0;\r\nvar Boards_1 = require(\"./Boards\");\r\nvar Chariot_1 = require(\"./Chariot\");\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\nvar General_1 = require(\"./General\");\r\nvar Cannon_1 = require(\"./Cannon\");\r\nvar Game = /** @class */ (function () {\r\n    function Game() {\r\n        this.currentPlayer = frontend_utils_1.PlayerColor.RED;\r\n        this.board = new Boards_1.Board(this);\r\n    }\r\n    // gets the public player\r\n    // 获取当前玩家\r\n    Game.prototype.getCurrentPlayer = function () {\r\n        return this.currentPlayer;\r\n    };\r\n    //Switch current player to the other player\r\n    //到另一个人下\r\n    Game.prototype.alternatePlayer = function () {\r\n        if (this.currentPlayer === frontend_utils_1.PlayerColor.RED)\r\n            this.currentPlayer = frontend_utils_1.PlayerColor.BLACK;\r\n        else\r\n            this.currentPlayer = frontend_utils_1.PlayerColor.RED;\r\n    };\r\n    Game.prototype.render = function () {\r\n        this.board.render(); // 渲染棋盘\r\n        // ============================= 棋子初始化 Initialization of ChessPieces =====================================================\r\n        //                               先横坐标后纵坐标\r\n        //                              1 2 3 4 5 6 7 8 9\r\n        //                              2\r\n        //                              3\r\n        //                              4\r\n        //                              5\r\n        //                              6\r\n        //                              7\r\n        //                              8\r\n        //                              9\r\n        //                              10\r\n        // 将/帅   Generals:\r\n        var red_shuai = new General_1.RedGeneral(this.board, this.board.getPointFromCoordinates(5, 10)); //new Point() doesn't make sense.\r\n        red_shuai.render();\r\n        var black_jiang = new General_1.BlackGeneral(this.board, this.board.getPointFromCoordinates(5, 1)); // using getPoint from coor now\r\n        black_jiang.render();\r\n        // 红车    Red Chariots\r\n        var red_ju_one = new Chariot_1.RedChariot(this.board, this.board.getPointFromCoordinates(1, 10));\r\n        var red_ju_two = new Chariot_1.RedChariot(this.board, this.board.getPointFromCoordinates(9, 10));\r\n        // let red_ju_test = new RedChariot(this.board, this.board.getPointFromCoordinates(9,3));\r\n        // let red_ju_test2 = new RedChariot(this.board, this.board.getPointFromCoordinates(9,4));\r\n        // 黑车    Black Chariots\r\n        var black_ju_one = new Chariot_1.BlackChariot(this.board, this.board.getPointFromCoordinates(1, 1));\r\n        var black_ju_two = new Chariot_1.BlackChariot(this.board, this.board.getPointFromCoordinates(9, 1));\r\n        // 黑炮 BlackCannon\r\n        var black_cannon_one = new Cannon_1.BlackCannon(this.board, this.board.getPointFromCoordinates(2, 3));\r\n        var black_cannon_two = new Cannon_1.BlackCannon(this.board, this.board.getPointFromCoordinates(2, 4));\r\n        // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ 棋子初始化 Initialization of ChessPieces ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        // 红车\r\n        red_ju_one.render();\r\n        red_ju_two.render();\r\n        // 黑车\r\n        black_ju_one.render();\r\n        black_ju_two.render();\r\n        // 炮\r\n        black_cannon_one.render();\r\n        black_cannon_two.render();\r\n    };\r\n    return Game;\r\n}());\r\nexports.Game = Game;\r\nvar game = new Game();\r\ngame.render();\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BlackGeneral = exports.RedGeneral = void 0;\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\nvar General = /** @class */ (function (_super) {\r\n    __extends(General, _super);\r\n    function General(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.General, color) || this;\r\n    }\r\n    General.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the dest is not inside of the \"田\" shaped space of the board\r\n        //Returns false.\r\n        // if (!this.isValidGeneralPosition(x, y))\r\n        //     return false;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    return General;\r\n}(ChessPiece_1.Piece));\r\nvar RedGeneral = /** @class */ (function (_super) {\r\n    __extends(RedGeneral, _super);\r\n    function RedGeneral(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.RED) || this;\r\n        _this.elem.src = '../img/pieces/red-shuai.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    RedGeneral.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        moveable_points = moveable_points.concat(this.checkPeriphery());\r\n        return moveable_points;\r\n    };\r\n    //returns the grids that General can go in a column\r\n    RedGeneral.prototype.checkPeriphery = function () {\r\n        var Y_coor = this.point.y_coor;\r\n        var X_coor = this.point.x_coor;\r\n        var front = this.board.getPointFromCoordinates(X_coor, Y_coor - 1);\r\n        var back = this.board.getPointFromCoordinates(X_coor, Y_coor + 1); //out of bound err\r\n        var left = this.board.getPointFromCoordinates(X_coor - 1, Y_coor);\r\n        var right = this.board.getPointFromCoordinates(X_coor + 1, Y_coor);\r\n        var movable_points_in_this_column = [];\r\n        //  __ __   \r\n        // |__|__|\r\n        // |__|__|\r\n        // \r\n        console.log(\"+++++++++++++ debug +++++++++++++++++++++++\");\r\n        // 面前的格子\r\n        if (front && this.isValidGeneralPosition(front)) {\r\n            console.log('front.getPiece()');\r\n            console.log(front.getPiece());\r\n            movable_points_in_this_column.push(front);\r\n        }\r\n        if (back && this.isValidGeneralPosition(back)) {\r\n            console.log('back.getPiece()');\r\n            console.log(back.getPiece());\r\n            movable_points_in_this_column.push(back);\r\n        }\r\n        if (left && this.isValidGeneralPosition(left)) {\r\n            console.log('back.getPiece()');\r\n            console.log(left.getPiece());\r\n            movable_points_in_this_column.push(left);\r\n        }\r\n        if (right && this.isValidGeneralPosition(right)) {\r\n            console.log('back.getPiece()');\r\n            console.log(right.getPiece());\r\n            movable_points_in_this_column.push(right);\r\n        }\r\n        return movable_points_in_this_column;\r\n    };\r\n    RedGeneral.prototype.isValidGeneralPosition = function (targetPoint) {\r\n        console.log('isValidGeneralPosition +++++++++++');\r\n        console.log(targetPoint);\r\n        console.log(targetPoint.getX());\r\n        console.log(targetPoint.getY());\r\n        // 外层if表示田字的横坐标范围\r\n        if (targetPoint.getX() - 1 >= 3 && targetPoint.getX() - 1 <= 5) {\r\n            // 内层是纵坐标范围\r\n            if (targetPoint.getY() - 1 >= 7 && targetPoint.getY() - 1 <= 9) {\r\n                return true;\r\n            }\r\n        }\r\n        // 以上条件不满足，则return false.\r\n        return false;\r\n    };\r\n    return RedGeneral;\r\n}(General));\r\nexports.RedGeneral = RedGeneral;\r\nvar BlackGeneral = /** @class */ (function (_super) {\r\n    __extends(BlackGeneral, _super);\r\n    function BlackGeneral(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.BLACK) || this;\r\n        _this.elem.src = '../img/pieces/black-jiang.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    BlackGeneral.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        moveable_points = moveable_points.concat(this.checkPeriphery());\r\n        return moveable_points;\r\n    };\r\n    BlackGeneral.prototype.checkPeriphery = function () {\r\n        var X_coor = this.point.getX();\r\n        var Y_coor = this.point.getY();\r\n        var front = this.board.getPointFromCoordinates(X_coor, Y_coor - 1);\r\n        var back = new frontend_utils_1.Point(-1, -1);\r\n        try {\r\n            back = this.board.getPointFromCoordinates(X_coor, Y_coor + 1); //out of bound err\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n        var left = this.board.getPointFromCoordinates(X_coor - 1, Y_coor);\r\n        var right = this.board.getPointFromCoordinates(X_coor + 1, Y_coor);\r\n        var movable_points_in_this_column = [];\r\n        //  __ __   \r\n        // |__|__|\r\n        // |__|__|\r\n        // \r\n        console.log(\"++++++++++++++++++++++ debug +++++++++++++++++++++++\");\r\n        // 面前的格子\r\n        if (front && this.isValidGeneralPosition(front)) {\r\n            console.log('front.getPiece()');\r\n            console.log(front.getPiece());\r\n            movable_points_in_this_column.push(front);\r\n        }\r\n        if (back && this.isValidGeneralPosition(back)) {\r\n            console.log('back.getPiece()');\r\n            console.log(back.getPiece());\r\n            movable_points_in_this_column.push(back);\r\n        }\r\n        if (left && this.isValidGeneralPosition(left)) {\r\n            console.log('back.getPiece()');\r\n            console.log(left.getPiece());\r\n            movable_points_in_this_column.push(left);\r\n        }\r\n        if (right && this.isValidGeneralPosition(right)) {\r\n            console.log('back.getPiece()');\r\n            console.log(right.getPiece());\r\n            movable_points_in_this_column.push(right);\r\n        }\r\n        return movable_points_in_this_column;\r\n    };\r\n    BlackGeneral.prototype.isValidGeneralPosition = function (targetPoint) {\r\n        console.log('isValidGeneralPosition +++++++++++');\r\n        console.log(targetPoint);\r\n        console.log(targetPoint.getX());\r\n        console.log(targetPoint.getY());\r\n        // 外层if表示田字的横坐标范围\r\n        if (targetPoint.getX() >= 4 && targetPoint.getX() - 1 <= 6) {\r\n            // 内层是纵坐标范围\r\n            if (targetPoint.getY() >= 1 && targetPoint.getY() <= 3) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    return BlackGeneral;\r\n}(General));\r\nexports.BlackGeneral = BlackGeneral;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PlayerColor = exports.SIDE_LENGTH_vw = exports.SIDE_LENGTH = exports.Point = exports.fitSize = exports.getChessBoardSize = exports.getZoomedRatio = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\n// // used in class Piece\r\n// enum PieceColor {\r\n//     'black',\r\n//     'red'\r\n// }\r\n// used in class Game, \r\nvar PlayerColor;\r\n(function (PlayerColor) {\r\n    PlayerColor[PlayerColor[\"BLACK\"] = 0] = \"BLACK\";\r\n    PlayerColor[PlayerColor[\"RED\"] = 1] = \"RED\";\r\n    PlayerColor[PlayerColor[\"NEUTRAL\"] = 2] = \"NEUTRAL\";\r\n    PlayerColor[PlayerColor[\"SPECTATOR\"] = 3] = \"SPECTATOR\"; // Cannot control either side. 双方都不可以控制\r\n})(PlayerColor || (PlayerColor = {}));\r\nexports.PlayerColor = PlayerColor;\r\n// 得到当前的放大倍率\r\nfunction getZoomedRatio() {\r\n    var ratio = 0;\r\n    if (window.devicePixelRatio !== undefined) {\r\n        ratio = window.devicePixelRatio;\r\n    }\r\n    else if (window.outerWidth !== undefined && window.innerWidth !== undefined) {\r\n        ratio = window.outerWidth / window.innerWidth;\r\n    }\r\n    if (ratio) {\r\n        ratio = Math.round(ratio * 100);\r\n    }\r\n    return ratio;\r\n}\r\nexports.getZoomedRatio = getZoomedRatio;\r\n// 得到棋盘的当前大小\r\nfunction getChessBoardSize() {\r\n    Util_1.default.trace('chessboard size:');\r\n    var chessboard = $('#id_chessboard');\r\n    Util_1.default.trace('chessboad width');\r\n    Util_1.default.trace(chessboard.css('width'));\r\n    Util_1.default.trace('chessboad height');\r\n    Util_1.default.trace(chessboard.css('height'));\r\n}\r\nexports.getChessBoardSize = getChessBoardSize;\r\n// The vertical lines are known as files (Chinese: 路; pinyin: lù; \"road\")\r\n// the horizontal lines are known as ranks 线 xiàn; \"line\"\r\nvar Point = /** @class */ (function () {\r\n    function Point(col, row) {\r\n        // this.board = board;\r\n        this.x_coor = col; //col -> verticle\r\n        this.y_coor = row; //row -> horizontal\r\n        // A dummy element for initialization first and then update in method\r\n        this.elem = document.createElement('div');\r\n        this.updateElement(col, row);\r\n    }\r\n    /** when piece moves in\r\n        it binds the piece with the grid.\r\n        notice when the piece is moving out from a grid\r\n        the piece should be set to null.\r\n        @param piece: a nullable Piece object\r\n    */\r\n    Point.prototype.setPiece = function (piece) {\r\n        this.piece = piece;\r\n    };\r\n    // 判断点上是否有棋子\r\n    Point.prototype.hasPiece = function () {\r\n        return this.piece ? true : false;\r\n    };\r\n    //gets the piece in the current grid\r\n    Point.prototype.getPiece = function () {\r\n        return this.piece;\r\n    };\r\n    Point.prototype.getX = function () {\r\n        return this.x_coor;\r\n    };\r\n    Point.prototype.getY = function () {\r\n        return this.y_coor;\r\n    };\r\n    // 更新渲染\r\n    Point.prototype.updateElement = function (newCol, newRow) {\r\n        var grid_div = this.elem;\r\n        var oldCol = this.x_coor;\r\n        var oldRow = this.y_coor;\r\n        /* code previously found in board initialization, with div_2d_array\r\n           now divs are bound to specific points.\r\n        */\r\n        grid_div.id = \"grid_div_\" + oldCol + \"_\" + oldRow;\r\n        $(\"#\" + grid_div.id).remove(); //must remove the original one, in order to make it unique.\r\n        grid_div.className = 'className_grid_div';\r\n        $(grid_div).css('grid-column', newCol);\r\n        $(grid_div).css('grid-row', newRow);\r\n        $('#board').append(grid_div);\r\n        // this.board.intersections[newCol-1][newRow-1] = this; //replace the original point with the newly updated point.\r\n    };\r\n    return Point;\r\n}());\r\nexports.Point = Point;\r\n//how many px when it's zoomed 100%\r\nvar SIDE_LENGTH = 75;\r\nexports.SIDE_LENGTH = SIDE_LENGTH;\r\nvar SIDE_LENGTH_vw = 70 / (getZoomedRatio() * 0.01);\r\nexports.SIDE_LENGTH_vw = SIDE_LENGTH_vw;\r\n/**\r\n * 固定大小用的function\r\n *\r\n*/\r\nfunction fitSize() {\r\n    var board = $('#board');\r\n    $.when(board)\r\n        //fiting size for the board\r\n        .then(function () {\r\n        console.log('background-size');\r\n        console.log(board.css('background-size'));\r\n        board.css('width', board.css('height'));\r\n        board.css('height', board.css('width'));\r\n        // board.css('row-gap','0px')\r\n        board.css('column-gap', '0px');\r\n        console.log(board.css('row-gap'));\r\n    })\r\n        //fiting sizes for the grids\r\n        .then(function () {\r\n        $('.className_grid_div').css('width', parseInt(board.css('width')) / 11);\r\n        $('.className_grid_div').css('height', parseInt(board.css('height')) / 10);\r\n        $('.className_grid_div').css('z-index', 10);\r\n        $('.className_grid_div').css('margin', 0);\r\n    })\r\n        //fiting sizes for the pieces\r\n        .then(function () {\r\n        $('.pieces').css('width', parseInt($('.className_grid_div').css('width')));\r\n        $('.pieces').css('height', parseInt($('.className_grid_div').css('width')));\r\n    })\r\n        .then(function () {\r\n        board.css('max-width', board.css('height'));\r\n    });\r\n}\r\nexports.fitSize = fitSize;\r\n","\"use strict\";\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Log = /** @class */ (function () {\r\n    function Log() {\r\n    }\r\n    Log.trace = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.log.apply(console, __spreadArrays([\"<T> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.info = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.info.apply(console, __spreadArrays([\"<I> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.warn = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.warn.apply(console, __spreadArrays([\"<W> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.error = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.error.apply(console, __spreadArrays([\"<E> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.test = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.log.apply(console, __spreadArrays([\"<X> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    return Log;\r\n}());\r\nexports.default = Log;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module\n__webpack_require__(20);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}