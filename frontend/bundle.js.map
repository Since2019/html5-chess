{"version":3,"sources":["webpack://html5-chess/./frontend/src/Advisor.ts","webpack://html5-chess/./frontend/src/Boards.ts","webpack://html5-chess/./frontend/src/Cannon.ts","webpack://html5-chess/./frontend/src/Chariot.ts","webpack://html5-chess/./frontend/src/ChessPiece.ts","webpack://html5-chess/./frontend/src/FootSoldier.ts","webpack://html5-chess/./frontend/src/Game.ts","webpack://html5-chess/./frontend/src/General.ts","webpack://html5-chess/./frontend/src/frontend-utils.ts","webpack://html5-chess/./src/Util.ts","webpack://html5-chess/webpack/bootstrap","webpack://html5-chess/webpack/startup"],"names":["extendStatics","__extends","this","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__","constructor","create","__importDefault","mod","__esModule","defineProperty","exports","value","BlackAdvisor","RedAdvisor","Util_1","ChessPiece_1","frontend_utils_1","Advisor","_super","point","board","color","PieceRole","General","canMove","dest","x","x_coor","y","y_coor","Math","abs","checkSameColorPieceInPoint","Piece","_this","PlayerColor","RED","elem","src","setPiece","movablePoints","moveable_points","concat","checkPeriphery","X_coor","getX","Y_coor","getY","front_left","getPointFromCoordinates","front_right","back_left","Point","back_right","err","default","trace","console","error","movable_points_in_this_column","log","isValidGeneralPosition","push","getPiece","targetPoint","BLACK","Board","game","ratio","side_length","SIDE_LENGTH","target_coordinate","intersections","i","j","movePieceFromSrcToDest","piece","point_source","point_dest","moveToPoint","validateXCoordinate","validateYCoordinate","getCoordinateFromElemId","id","split_arr","split","coor_x","coor_y","parseInt","getRowFromYCoordinate","row","getColFromXCoordinate","col","detectZoom","undefined","window","devicePixelRatio","outerWidth","innerWidth","round","render","$","css","on","fitSize","document","BlackCannon","RedCannon","Cannon","isValidCannonPosition","checkRow","checkColumn","checkShellingRow","checkShellingCol","piece_row","cornerstone_flag","shellable_points_in_this_column","index","piece_col","start_flag","end_flag","isFriendly","movable_points_in_this_row","BlackChariot","RedChariot","Chariot","isValidChariotPosition","enumerable","get","role","active","piece_role","createElement","state","e","preventDefault","listenerManager","attachSelectPieceListener","active_piece","movable_points","getCurrentPlayer","forEach","setTimeout","attachMoveToGridListener","target","tagName","parentNode","parentElement","toUpperCase","hasPiece","alert","removeMoveToGridListener","innerHTML","next_x_coor","next_y_coor","alternatePlayer","off","getElement","removeChild","appendChild","getRole","getColor","getTargetPointCoordinate","getTargetPointXCoordinate","getTargetPointYCoordinate","isEnemy","append","addClass","toString","adjustResize","screen","width","getChessBoardSize","getZoomedRatio","BlackFootSoldier","RedFootSoldier","FootSoldier","isValidFootSoldierPosition","afterLanding","beforeLanding","front","movable_points_before_landing","left","right","movable_points_after_landing","Boards_1","Chariot_1","General_1","Cannon_1","FootSoldier_1","Advisor_1","Game","currentPlayer","RedGeneral","BlackGeneral","red_ju_one","red_ju_two","black_ju_one","black_ju_two","red_cannon_one","red_cannon_two","black_cannon_one","black_cannon_two","red_bing_one","black_zu_one","red_advisor_one","red_advisor_two","black_advisor_one","black_advisor_two","back","SIDE_LENGTH_vw","chessboard","updateElement","newCol","newRow","grid_div","oldCol","oldRow","remove","className","when","then","__spreadArrays","s","il","arguments","length","r","k","a","jl","Log","msg","_i","apply","Date","toLocaleString","info","warn","test","__webpack_module_cache__","__webpack_require__","moduleId","module","__webpack_modules__"],"mappings":"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","file":"bundle.js","sourcesContent":["\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BlackAdvisor = exports.RedAdvisor = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\nvar Advisor = /** @class */ (function (_super) {\r\n    __extends(Advisor, _super);\r\n    function Advisor(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.General, color) || this;\r\n    }\r\n    Advisor.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the dest is not inside of the \"田\" shaped space of the board\r\n        //Returns false.\r\n        // if (!this.isValidGeneralPosition(x, y))\r\n        //     return false;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    return Advisor;\r\n}(ChessPiece_1.Piece));\r\nvar RedAdvisor = /** @class */ (function (_super) {\r\n    __extends(RedAdvisor, _super);\r\n    function RedAdvisor(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.RED) || this;\r\n        _this.elem.src = '../img/pieces/red-shi.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    RedAdvisor.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        moveable_points = moveable_points.concat(this.checkPeriphery());\r\n        return moveable_points;\r\n    };\r\n    RedAdvisor.prototype.checkPeriphery = function () {\r\n        var X_coor = this.point.getX();\r\n        var Y_coor = this.point.getY();\r\n        var front_left = this.board.getPointFromCoordinates(X_coor - 1, Y_coor - 1);\r\n        var front_right = this.board.getPointFromCoordinates(X_coor + 1, Y_coor - 1); // HACK: tabnine generated those  '+' signs !\r\n        var back_left = new frontend_utils_1.Point(-1, -1); // WHY: 如果不建一个点，try catch里面的会是局部变量\r\n        var back_right = new frontend_utils_1.Point(-1, -1);\r\n        try {\r\n            back_left = this.board.getPointFromCoordinates(X_coor - 1, Y_coor + 1); //out of bound err\r\n            back_right = this.board.getPointFromCoordinates(X_coor + 1, Y_coor + 1);\r\n        }\r\n        catch (err) {\r\n            Util_1.default.trace(\"出错！\");\r\n            console.error(err);\r\n        }\r\n        var movable_points_in_this_column = [];\r\n        //  __ __   \r\n        // |__|__|\r\n        // |__|__|\r\n        // \r\n        console.log(\"++++++++++++++++++++++ debug +++++++++++++++++++++++\");\r\n        // 面前的格子\r\n        if (front_left && this.isValidGeneralPosition(front_left)) {\r\n            movable_points_in_this_column.push(front_left);\r\n        }\r\n        // \r\n        if (front_right && this.isValidGeneralPosition(front_right)) {\r\n            movable_points_in_this_column.push(front_right);\r\n        }\r\n        if (back_left && this.isValidGeneralPosition(back_left)) {\r\n            movable_points_in_this_column.push(back_left);\r\n        }\r\n        if (back_right && this.isValidGeneralPosition(back_right)) {\r\n            console.log(back_right.getPiece());\r\n            movable_points_in_this_column.push(back_right);\r\n        }\r\n        return movable_points_in_this_column;\r\n    };\r\n    RedAdvisor.prototype.isValidGeneralPosition = function (targetPoint) {\r\n        console.log('isValidGeneralPosition +++++++++++');\r\n        console.log(targetPoint);\r\n        console.log(targetPoint.getX());\r\n        console.log(targetPoint.getY());\r\n        // 外层if表示田字的横坐标范围\r\n        if (targetPoint.getX() >= 4 && targetPoint.getX() <= 6) {\r\n            // 内层是纵坐标范围\r\n            if (targetPoint.getY() >= 8 && targetPoint.getY() <= 10) {\r\n                return true;\r\n            }\r\n        }\r\n        // 以上条件不满足，则return false.\r\n        return false;\r\n    };\r\n    return RedAdvisor;\r\n}(Advisor));\r\nexports.RedAdvisor = RedAdvisor;\r\nvar BlackAdvisor = /** @class */ (function (_super) {\r\n    __extends(BlackAdvisor, _super);\r\n    function BlackAdvisor(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.BLACK) || this;\r\n        _this.elem.src = '../img/pieces/black-shi.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    BlackAdvisor.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        moveable_points = moveable_points.concat(this.checkPeriphery());\r\n        return moveable_points;\r\n    };\r\n    BlackAdvisor.prototype.checkPeriphery = function () {\r\n        var X_coor = this.point.getX();\r\n        var Y_coor = this.point.getY();\r\n        var front_left = this.board.getPointFromCoordinates(X_coor + 1, Y_coor + 1);\r\n        var front_right = this.board.getPointFromCoordinates(X_coor - 1, Y_coor + 1); // HACK: tabnine generated those  '+' signs !\r\n        var back_left = new frontend_utils_1.Point(-1, -1); // WHY: 如果不建一个点，try catch里面的会是局部变量\r\n        var back_right = new frontend_utils_1.Point(-1, -1);\r\n        try {\r\n            back_left = this.board.getPointFromCoordinates(X_coor + 1, Y_coor - 1); //out of bound err\r\n            back_right = this.board.getPointFromCoordinates(X_coor - 1, Y_coor - 1);\r\n        }\r\n        catch (err) {\r\n            Util_1.default.trace(\"出错！\");\r\n            console.error(err);\r\n        }\r\n        var movable_points_in_this_column = [];\r\n        //  __ __   \r\n        // |__|__|\r\n        // |__|__|\r\n        // \r\n        console.log(\"++++++++++++++++++++++ debug +++++++++++++++++++++++\");\r\n        // 面前的格子\r\n        if (front_left && this.isValidGeneralPosition(front_left)) {\r\n            movable_points_in_this_column.push(front_left);\r\n        }\r\n        // \r\n        if (front_right && this.isValidGeneralPosition(front_right)) {\r\n            movable_points_in_this_column.push(front_right);\r\n        }\r\n        if (back_left && this.isValidGeneralPosition(back_left)) {\r\n            movable_points_in_this_column.push(back_left);\r\n        }\r\n        if (back_right && this.isValidGeneralPosition(back_right)) {\r\n            console.log(back_right.getPiece());\r\n            movable_points_in_this_column.push(back_right);\r\n        }\r\n        return movable_points_in_this_column;\r\n    };\r\n    BlackAdvisor.prototype.isValidGeneralPosition = function (targetPoint) {\r\n        console.log('isValidGeneralPosition +++++++++++');\r\n        console.log(targetPoint);\r\n        console.log(targetPoint.getX());\r\n        console.log(targetPoint.getY());\r\n        // 外层if表示田字的横坐标范围\r\n        if (targetPoint.getX() >= 4 && targetPoint.getX() <= 6) {\r\n            // 内层是纵坐标范围\r\n            if (targetPoint.getY() >= 1 && targetPoint.getY() <= 3) {\r\n                return true;\r\n            }\r\n        }\r\n        // 以上条件不满足，则return false.\r\n        return false;\r\n    };\r\n    return BlackAdvisor;\r\n}(Advisor));\r\nexports.BlackAdvisor = BlackAdvisor;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Board = void 0;\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\n// 棋盘\r\nvar Board = /** @class */ (function () {\r\n    function Board(game) {\r\n        // 游戏和棋盘要耦合\r\n        this.game = game;\r\n        // 缩放相关\r\n        this.ratio = 100; //default ratio 100%\r\n        this.side_length = this.ratio * 0.01 * frontend_utils_1.SIDE_LENGTH;\r\n        // 玩家选择的下一个位置\r\n        this.target_coordinate = [-1, -1];\r\n        //A.K.A points.\r\n        this.intersections = new Array();\r\n        for (var i = 0; i < 9; i++) {\r\n            this.intersections[i] = [];\r\n            for (var j = 0; j < 10; j++) {\r\n                // 1 2 3 4 5 6 7 8 9\r\n                // 2\r\n                // 3\r\n                // 4\r\n                // 5\r\n                // 6\r\n                // 7\r\n                // 8\r\n                // 9\r\n                // 10\r\n                this.intersections[i][j] = (new frontend_utils_1.Point((i + 1), (j + 1)));\r\n            }\r\n        }\r\n    }\r\n    //invokes functions in Piece and Point simutaniously\r\n    Board.prototype.movePieceFromSrcToDest = function (piece, point_source, point_dest) {\r\n        point_source.setPiece(null); //the piece is moving out to another grid, so it's set to null.\r\n        piece.moveToPoint(point_dest); // the piece now knows which new place it's in\r\n        point_dest.setPiece(piece); // the point the piece moves in knows which piece it's receiving.\r\n    };\r\n    //get a specific point from coordinates\r\n    Board.prototype.getPointFromCoordinates = function (x_coor, y_coor) {\r\n        if (!this.validateXCoordinate(x_coor) || !this.validateYCoordinate(y_coor))\r\n            return null;\r\n        return this.intersections[x_coor - 1][y_coor - 1];\r\n    };\r\n    // 从HTML Element的ID中获取坐标\r\n    Board.prototype.getCoordinateFromElemId = function (id) {\r\n        // grid_div_5_6\r\n        console.log(id);\r\n        var split_arr = id.split('_');\r\n        var coor_x = split_arr[2];\r\n        var coor_y = split_arr[3];\r\n        return [parseInt(coor_x), parseInt(coor_y)];\r\n    };\r\n    // Check for valid x coordinate\r\n    Board.prototype.validateXCoordinate = function (x) {\r\n        return x >= 1 && x <= 9;\r\n    };\r\n    // Check for valid y coordinate\r\n    Board.prototype.validateYCoordinate = function (y) {\r\n        return y >= 1 && y <= 10;\r\n    };\r\n    //get a row from y_coor(nth row)\r\n    Board.prototype.getRowFromYCoordinate = function (y_coor) {\r\n        var row = [];\r\n        for (var i = 0; i < 9; i++) {\r\n            row.push(this.intersections[i][y_coor - 1]);\r\n        }\r\n        return row;\r\n    };\r\n    //get a column from x_coor(nth col)\r\n    Board.prototype.getColFromXCoordinate = function (x_coor) {\r\n        var col = [];\r\n        for (var j = 0; j < 10; j++) {\r\n            col.push(this.intersections[x_coor - 1][j]);\r\n        }\r\n        return col;\r\n    };\r\n    Board.prototype.detectZoom = function () {\r\n        var ratio = 0;\r\n        if (window.devicePixelRatio !== undefined) {\r\n            ratio = window.devicePixelRatio;\r\n        }\r\n        // ???? not working, why?\r\n        // else if (~ua.indexOf('msie')) {\r\n        //     if (screen.deviceXDPI && screen.logicalXDPI) {\r\n        //         ratio = screen.deviceXDPI / screen.logicalXDPI;\r\n        //     }\r\n        // }\r\n        else if (window.outerWidth !== undefined && window.innerWidth !== undefined) {\r\n            ratio = window.outerWidth / window.innerWidth;\r\n        }\r\n        if (ratio) {\r\n            ratio = Math.round(ratio * 100);\r\n        }\r\n        this.ratio = ratio;\r\n    };\r\n    Board.prototype.render = function () {\r\n        var board = $('#board');\r\n        // $(board).css('height', 'fit-content');\r\n        $(\"#id_chessboard\").css(\"position\", \"fixed\");\r\n        $(\"#id_chessboard\").css(\"max-height\", '100vh');\r\n        // $(\"#board\").css(\"left\", \"0px\");\r\n        $(\"#id_chessboard\").css(\"margin\", \"0\");\r\n        $(\"#id_chessboard\").css(\"padding\", \"0vw\");\r\n        board.css('margin-left', 'auto');\r\n        board.css('margin-right', 'auto');\r\n        board.css('padding', 0);\r\n        //for testing purposes, added some color to the background\r\n        $('.className_grid_div').css('background-color', 'rgba(255,0,0,0.3)');\r\n        //fits the size when resizing\r\n        $(window).on('resize', function () {\r\n            frontend_utils_1.fitSize();\r\n        });\r\n        //fixed the size issue upon entry\r\n        $(document).on('ready', function () {\r\n            frontend_utils_1.fitSize();\r\n        });\r\n        $(\"#board\").css(\"max-width\", \"100vh\");\r\n    };\r\n    return Board;\r\n}());\r\nexports.Board = Board;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BlackCannon = exports.RedCannon = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar Cannon = /** @class */ (function (_super) {\r\n    __extends(Cannon, _super);\r\n    function Cannon(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.General, color) || this;\r\n    }\r\n    /**\r\n     *\r\n     * @param x\r\n     * @param y\r\n     * @returns boolean to indicate if the pass in coordinate is valid general position\r\n     */\r\n    Cannon.prototype.isValidCannonPosition = function (x, y) {\r\n        return (y >= 0) && (y <= 10) && (x >= 0) && (x <= 9);\r\n    };\r\n    Cannon.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the dest is not inside of the \"田\" shaped space of the board\r\n        //Returns false.\r\n        if (!this.isValidCannonPosition(x, y))\r\n            return false;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    Cannon.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        moveable_points = moveable_points.concat(this.checkRow());\r\n        moveable_points = moveable_points.concat(this.checkColumn());\r\n        moveable_points = moveable_points.concat(this.checkShellingRow());\r\n        moveable_points = moveable_points.concat(this.checkShellingCol());\r\n        return moveable_points;\r\n    };\r\n    // 检查可以炮轰的地方\r\n    Cannon.prototype.checkShellingRow = function () {\r\n        Util_1.default.trace(\"in checkShelling()\");\r\n        Util_1.default.trace(\"Cannon\");\r\n        // let Y_coor = this.point.y_coor\r\n        var X_coor = this.point.x_coor;\r\n        // let piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var cornerstone_flag = false;\r\n        var target_point_flag = -1;\r\n        var shellable_points_in_this_column = [];\r\n        for (var index in piece_row) {\r\n            if (parseInt(index) < X_coor - 1) {\r\n                Util_1.default.trace(\"正在检测该棋子的左侧\");\r\n                // 有任何一方的棋子\r\n                if (piece_row[index].piece) {\r\n                    // 有了炮台，下一个有棋子的格子就是可以走的\r\n                    if (cornerstone_flag) {\r\n                        shellable_points_in_this_column.push(piece_row[index]);\r\n                        break; //只加一个点进去就结束了\r\n                    }\r\n                    // 没有炮台，这就是炮台\r\n                    else if (!cornerstone_flag) {\r\n                        cornerstone_flag = true; // the index is not added, but the next one is.\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n            else if (parseInt(index) > X_coor + 1) {\r\n                Util_1.default.trace(\"正在检测该棋子的右侧\");\r\n                // 有任何一方的棋子\r\n                if (piece_row[index].piece) {\r\n                    // 有了炮台，下一个有棋子的格子就是可以走的\r\n                    if (cornerstone_flag) {\r\n                        shellable_points_in_this_column.push(piece_row[index]);\r\n                        break; //只加一个点进去就结束了\r\n                    }\r\n                    // 没有炮台，这就是炮台\r\n                    else if (!cornerstone_flag) {\r\n                        cornerstone_flag = true; // the index is not added, but the next one is.\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return shellable_points_in_this_column;\r\n    };\r\n    // 检查可以炮轰的地方\r\n    Cannon.prototype.checkShellingCol = function () {\r\n        Util_1.default.trace(\"in checkShelling()\");\r\n        Util_1.default.trace(\"Cannon\");\r\n        var Y_coor = this.point.y_coor;\r\n        // let X_coor = this.point.x_coor\r\n        var piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        // let piece_row = this.board.getRowFromYCoordinate(this.point.y_coor);//Checks the points in this row\r\n        var cornerstone_flag = false;\r\n        var target_point_flag = -1;\r\n        var shellable_points_in_this_column = [];\r\n        for (var index in piece_col) {\r\n            if (parseInt(index) < Y_coor) {\r\n                Util_1.default.trace(\"正在检测该棋子的上方\");\r\n                // 有任何一方的棋子\r\n                if (piece_col[index].piece) {\r\n                    console.log('piece_col[index]piece_col[index] ===================++');\r\n                    console.log(piece_col[index]);\r\n                    // 有了炮台，下一个有棋子的格子就是可以走的\r\n                    if (cornerstone_flag) {\r\n                        Util_1.default.trace(\"有炮台了，添加以下点：\");\r\n                        Util_1.default.trace(piece_col[index]);\r\n                        shellable_points_in_this_column.push(piece_col[index]);\r\n                        break; //只加一个点进去就结束了\r\n                    }\r\n                    // 没有炮台，这就是炮台\r\n                    else if (!cornerstone_flag) {\r\n                        Util_1.default.trace(\"无炮台\");\r\n                        cornerstone_flag = true; // the index is not added, but the next one is.\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n            else if (parseInt(index) > Y_coor) {\r\n                Util_1.default.trace(\"正在检测该棋子的下方\");\r\n                // 检测到该点内有任何一方的棋子\r\n                if (piece_col[index].piece) {\r\n                    console.log('piece_col[index] ===================++');\r\n                    console.log(piece_col[index]);\r\n                    console.log(\"cornerstone_flag:\");\r\n                    console.log(cornerstone_flag);\r\n                    // console.log('piece_col-------------------------------------')\r\n                    // console.log(piece_col)\r\n                    // console.log(shellable_points_in_this_column)\r\n                    // 有了炮台，下一个有棋子的格子就是可以走的\r\n                    if (cornerstone_flag == true) {\r\n                        Util_1.default.trace(\"有炮台了，正在添加以下点：\");\r\n                        Util_1.default.trace(piece_col[index]);\r\n                        shellable_points_in_this_column.push(piece_col[index]);\r\n                        break; //只加一个点进去就结束了\r\n                    }\r\n                    // 没有炮台，这就是炮台\r\n                    else if (!cornerstone_flag) {\r\n                        cornerstone_flag = true; // the index is not added, but the next that has a piece is.\\\r\n                        Util_1.default.trace(\"之前无炮台，现在有炮台了。\");\r\n                        console.log(cornerstone_flag);\r\n                        continue;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return shellable_points_in_this_column;\r\n    };\r\n    //returns the grids that General can go in a column\r\n    Cannon.prototype.checkColumn = function () {\r\n        Util_1.default.trace(\"in checkColumn()\");\r\n        Util_1.default.trace(\"Cannon\");\r\n        var Y_coor = this.point.y_coor;\r\n        // let X_coor = this.point.x_coor\r\n        var piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        // let piece_row = this.board.getRowFromYCoordinate(this.point.y_coor);//Checks the points in this row\r\n        var start_flag = 0; //row 1\r\n        var end_flag = 9; //row 10 \r\n        //trasversing the column (Point [])\r\n        for (var index in piece_col) {\r\n            Util_1.default.trace('piece_col:');\r\n            Util_1.default.trace(piece_col);\r\n            //if the piece in that point is not null, do some checking\r\n            if (piece_col[index].piece != null) {\r\n                Util_1.default.trace(\"有棋子\");\r\n                //checks the indices that are smaller than the point\r\n                // 这颗待处理棋子在上方\r\n                if (parseInt(index) < Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PlayerColor.BLACK) {\r\n                        Util_1.default.trace(\"队友在上方\");\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    }\r\n                    else if (piece_col[index].piece.color != ChessPiece_1.PlayerColor.BLACK) {\r\n                        start_flag = parseInt(index);\r\n                        console.log(\"debugging...........................\");\r\n                        console.log(start_flag);\r\n                    }\r\n                    if (start_flag === Y_coor - 1) // if a friendly piece is blocking right abovbe it\r\n                        start_flag = Y_coor; // start_flag is set to the next row \r\n                    // Log.trace(\"start_flag:\" + start_flag)\r\n                }\r\n                //checks those larger than that point\r\n                // 这颗待处理棋子在下方\r\n                else if (parseInt(index) > Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PlayerColor.BLACK)\r\n                        end_flag = parseInt(index) - 1; // the index is not added, but the last one is.\r\n                    // 是敌方棋子的话：\r\n                    else if (piece_col[index].piece.color != ChessPiece_1.PlayerColor.BLACK)\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === Y_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = Y_coor - 2; // start_flag is set to the next row \r\n                    // Log.trace(\"end_flag:\" + end_flag)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_column = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (Y_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_column.push(piece_col[i]);\r\n        }\r\n        console.log(movable_points_in_this_column);\r\n        return movable_points_in_this_column;\r\n        // console.log(this.board.getColFromXCoordinate(X_coor));\r\n    };\r\n    //returns the grids that the General can go in a row\r\n    Cannon.prototype.checkRow = function () {\r\n        Util_1.default.trace(\"in checkRows()\");\r\n        // let Y_coor = this.point.y_coor\r\n        var X_coor = this.point.x_coor;\r\n        // let piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0;\r\n        var end_flag = 8;\r\n        //trasversing the column (Point [])\r\n        //遍历横行\r\n        for (var index in piece_row) {\r\n            //if the piece in that point is not null, do some checking\r\n            //发现该点内有棋子，判断是敌是友\r\n            if (piece_row[index].piece != null) {\r\n                Util_1.default.trace(\"有棋子\");\r\n                Util_1.default.trace(piece_row);\r\n                //checks the indices that are smaller than the point\r\n                // 该枚车的左边\r\n                if (parseInt(index) < X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].getPiece().isFriendly()) {\r\n                        console.log(\"---------------------------------debug-----------------------------\");\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    }\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === X_coor - 1) // if a friendly piece is blocking immediately left to it\r\n                        start_flag = X_coor; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"start_flag:\" + start_flag);\r\n                }\r\n                //checks those larger than that point\r\n                // 检查该车的右边\r\n                else if (parseInt(index) > X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].getPiece().isFriendly())\r\n                        end_flag = parseInt(index) - 1; // Friendly blocking: the index is not added, but the previous one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === X_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = X_coor - 2; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"end_flag:\" + end_flag);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_row = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (X_coor - 1 === i) {\r\n                continue;\r\n            }\r\n            movable_points_in_this_row.push(piece_row[i]);\r\n        }\r\n        console.log(movable_points_in_this_row);\r\n        return movable_points_in_this_row;\r\n    };\r\n    return Cannon;\r\n}(ChessPiece_1.Piece));\r\nvar BlackCannon = /** @class */ (function (_super) {\r\n    __extends(BlackCannon, _super);\r\n    function BlackCannon(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.BLACK) || this;\r\n        _this.elem.src = '../img/pieces/black-pao.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        $(_this.elem).on('click', function () {\r\n            _super.prototype.movablePoints.call(_this);\r\n        });\r\n        return _this;\r\n    }\r\n    return BlackCannon;\r\n}(Cannon));\r\nexports.BlackCannon = BlackCannon;\r\nvar RedCannon = /** @class */ (function (_super) {\r\n    __extends(RedCannon, _super);\r\n    function RedCannon(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.RED) || this;\r\n        _this.elem.src = '../img/pieces/red-pao.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        $(_this.elem).on('click', function () {\r\n            _super.prototype.movablePoints.call(_this);\r\n        });\r\n        return _this;\r\n    }\r\n    return RedCannon;\r\n}(Cannon));\r\nexports.RedCannon = RedCannon;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BlackChariot = exports.RedChariot = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar Chariot = /** @class */ (function (_super) {\r\n    __extends(Chariot, _super);\r\n    function Chariot(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.General, color) || this;\r\n    }\r\n    Chariot.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the dest is not inside of the \"田\" shaped space of the board\r\n        //Returns false.\r\n        if (!this.isValidChariotPosition(x, y))\r\n            return false;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    return Chariot;\r\n}(ChessPiece_1.Piece));\r\nvar RedChariot = /** @class */ (function (_super) {\r\n    __extends(RedChariot, _super);\r\n    function RedChariot(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.RED) || this;\r\n        _this.elem.src = '../img/pieces/red-ju.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        $(_this.elem).on('click', function () {\r\n            // Log.trace(\"invoked this.checkColumns()\")\r\n            // Log.trace(this.checkColumn())\r\n            // Log.trace(this.checkRow())\r\n            _this.movablePoints();\r\n        });\r\n        return _this;\r\n    }\r\n    RedChariot.prototype.movablePoints = function () {\r\n        // Log.trace('inside this.movablePoints()')\r\n        var moveable_points = [];\r\n        // moveable_points.length = 0;\r\n        moveable_points = moveable_points.concat(this.checkRow());\r\n        moveable_points = moveable_points.concat(this.checkColumn());\r\n        // Log.trace('moveable_points is empty here !!!!')\r\n        // Log.trace(moveable_points)\r\n        return moveable_points;\r\n    };\r\n    //returns the grids that General can go in a column\r\n    RedChariot.prototype.checkColumn = function () {\r\n        Util_1.default.trace(\"in checkColumns\");\r\n        var Y_coor = this.point.y_coor;\r\n        var X_coor = this.point.x_coor;\r\n        var piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0; //row 1\r\n        var end_flag = 9; //row 10 \r\n        //trasversing the column (Point [])\r\n        for (var index in piece_col) {\r\n            //if the piece in that point is not null, do some checking\r\n            if (piece_col[index].piece != null) {\r\n                //checks the indices that are smaller than the point\r\n                if (parseInt(index) < Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PlayerColor.RED)\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === Y_coor - 1) // if a friendly piece is blocking right abovbe it\r\n                        start_flag = Y_coor; // start_flag is set to the next row \r\n                    // Log.trace(\"start_flag:\" + start_flag)\r\n                }\r\n                //checks those larger than that point\r\n                else if (parseInt(index) > Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PlayerColor.RED)\r\n                        end_flag = parseInt(index) - 1; // the index is not added, but the last one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === Y_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = Y_coor - 2; // start_flag is set to the next row \r\n                    // Log.trace(\"end_flag:\" + end_flag)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_column = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (Y_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_column.push(piece_col[i]);\r\n        }\r\n        return movable_points_in_this_column;\r\n        // console.log(this.board.getColFromXCoordinate(X_coor));\r\n    };\r\n    //returns the grids that the General can go in a row\r\n    RedChariot.prototype.checkRow = function () {\r\n        Util_1.default.trace(\"in checkRows()\");\r\n        // let Y_coor = this.point.y_coor\r\n        var X_coor = this.point.x_coor;\r\n        // let piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0;\r\n        var end_flag = 8;\r\n        //trasversing the column (Point [])\r\n        for (var index in piece_row) {\r\n            //if the piece in that point is not null, do some checking\r\n            // 判定敌友\r\n            if (piece_row[index].piece != null) {\r\n                //checks the indices that are smaller than the point\r\n                // 车的左边\r\n                if (parseInt(index) < X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].piece.color == ChessPiece_1.PlayerColor.RED)\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === X_coor - 1) // if a friendly piece is blocking right above it\r\n                        start_flag = X_coor; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"start_flag:\" + start_flag);\r\n                }\r\n                //checks those larger than that point\r\n                else if (parseInt(index) > X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].piece.color == ChessPiece_1.PlayerColor.RED)\r\n                        end_flag = parseInt(index) - 1; // the index is not added, but the last one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === X_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = X_coor - 2; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"end_flag:\" + end_flag);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_row = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (X_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_row.push(piece_row[i]);\r\n        }\r\n        return movable_points_in_this_row;\r\n    };\r\n    RedChariot.prototype.isValidChariotPosition = function (x, y) {\r\n        return (y >= 8) && (y <= 10) && (x >= 4) && (x <= 6);\r\n        // && !(x > 0 && y > 0);\r\n    };\r\n    return RedChariot;\r\n}(Chariot));\r\nexports.RedChariot = RedChariot;\r\nvar BlackChariot = /** @class */ (function (_super) {\r\n    __extends(BlackChariot, _super);\r\n    function BlackChariot(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.BLACK) || this;\r\n        _this.elem.src = '../img/pieces/black-ju.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        $(_this.elem).on('click', function () {\r\n            // Log.trace(\"invoked this.checkColumns()\")\r\n            // Log.trace(this.checkColumn())\r\n            // Log.trace(this.checkRow())\r\n            _this.movablePoints();\r\n        });\r\n        return _this;\r\n    }\r\n    BlackChariot.prototype.movablePoints = function () {\r\n        // Log.trace('inside this.movablePoints()')\r\n        var moveable_points = [];\r\n        // moveable_points.length = 0;\r\n        moveable_points = moveable_points.concat(this.checkRow());\r\n        moveable_points = moveable_points.concat(this.checkColumn());\r\n        // Log.trace('moveable_points is empty here !!!!')\r\n        // Log.trace(moveable_points)\r\n        return moveable_points;\r\n    };\r\n    //returns the grids that General can go in a column\r\n    BlackChariot.prototype.checkColumn = function () {\r\n        Util_1.default.trace(\"in checkColumns\");\r\n        Util_1.default.trace(\"Chariots\");\r\n        var Y_coor = this.point.y_coor;\r\n        // let X_coor = this.point.x_coor\r\n        var piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        // let piece_row = this.board.getRowFromYCoordinate(this.point.y_coor);//Checks the points in this row\r\n        var start_flag = 0; //row 1\r\n        var end_flag = 9; //row 10 \r\n        //trasversing the column (Point [])\r\n        for (var index in piece_col) {\r\n            Util_1.default.trace('piece_col:');\r\n            Util_1.default.trace(piece_col);\r\n            //if the piece in that point is not null, do some checking\r\n            if (piece_col[index].piece != null) {\r\n                Util_1.default.trace(\"有棋子\");\r\n                //checks the indices that are smaller than the point\r\n                // 这颗待处理棋子在上方\r\n                if (parseInt(index) < Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PlayerColor.BLACK) {\r\n                        Util_1.default.trace(\"队友在上方\");\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    }\r\n                    else if (piece_col[index].piece.color != ChessPiece_1.PlayerColor.BLACK) {\r\n                        start_flag = parseInt(index);\r\n                        console.log(\"debugging...........................\");\r\n                        console.log(start_flag);\r\n                    }\r\n                    if (start_flag === Y_coor - 1) // if a friendly piece is blocking right abovbe it\r\n                        start_flag = Y_coor; // start_flag is set to the next row \r\n                    // Log.trace(\"start_flag:\" + start_flag)\r\n                }\r\n                //checks those larger than that point\r\n                // 这颗待处理棋子在下方\r\n                else if (parseInt(index) > Y_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_col[index].piece.color == ChessPiece_1.PlayerColor.BLACK)\r\n                        end_flag = parseInt(index) - 1; // the index is not added, but the last one is.\r\n                    // 是敌方棋子的话：\r\n                    else if (piece_col[index].piece.color != ChessPiece_1.PlayerColor.BLACK)\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === Y_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = Y_coor - 2; // start_flag is set to the next row \r\n                    // Log.trace(\"end_flag:\" + end_flag)\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_column = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (Y_coor - 1 === i) {\r\n                // Log.trace('skip');\r\n                continue;\r\n            }\r\n            movable_points_in_this_column.push(piece_col[i]);\r\n        }\r\n        console.log(movable_points_in_this_column);\r\n        return movable_points_in_this_column;\r\n        // console.log(this.board.getColFromXCoordinate(X_coor));\r\n    };\r\n    //returns the grids that the General can go in a row\r\n    BlackChariot.prototype.checkRow = function () {\r\n        Util_1.default.trace(\"in checkRows()\");\r\n        // let Y_coor = this.point.y_coor\r\n        var X_coor = this.point.x_coor;\r\n        // let piece_col = this.board.getColFromXCoordinate(this.point.x_coor); //Checks the points in this column\r\n        var piece_row = this.board.getRowFromYCoordinate(this.point.y_coor); //Checks the points in this row\r\n        var start_flag = 0;\r\n        var end_flag = 8;\r\n        //trasversing the column (Point [])\r\n        //遍历横行\r\n        for (var index in piece_row) {\r\n            //if the piece in that point is not null, do some checking\r\n            //发现该点内有棋子，判断是敌是友\r\n            if (piece_row[index].piece != null) {\r\n                Util_1.default.trace(\"有棋子\");\r\n                Util_1.default.trace(piece_row);\r\n                //checks the indices that are smaller than the point\r\n                // 该枚车的左边\r\n                if (parseInt(index) < X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].getPiece().isFriendly()) {\r\n                        console.log(\"---------------------------------debug-----------------------------\");\r\n                        start_flag = parseInt(index) + 1; // the index is not added, but the next one is.\r\n                    }\r\n                    else\r\n                        start_flag = parseInt(index);\r\n                    if (start_flag === X_coor - 1) // if a friendly piece is blocking immediately left to it\r\n                        start_flag = X_coor; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"start_flag:\" + start_flag);\r\n                }\r\n                //checks those larger than that point\r\n                // 检查该车的右边\r\n                else if (parseInt(index) > X_coor - 1) {\r\n                    //if the point holds a friendly piece:\r\n                    if (piece_row[index].getPiece().isFriendly())\r\n                        end_flag = parseInt(index) - 1; // Friendly blocking: the index is not added, but the previous one is.\r\n                    else\r\n                        end_flag = parseInt(index);\r\n                    if (end_flag === X_coor - 1) // if a friendly piece is blocking right below it\r\n                        end_flag = X_coor - 2; // start_flag is set to the next row \r\n                    Util_1.default.trace(\"end_flag:\" + end_flag);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        // an array to store all the movable points in a column\r\n        var movable_points_in_this_row = [];\r\n        for (var i = start_flag; i <= end_flag; i++) {\r\n            //If the coordinate is the one that piece is in\r\n            //It does not push it into the array.\r\n            if (X_coor - 1 === i) {\r\n                continue;\r\n            }\r\n            movable_points_in_this_row.push(piece_row[i]);\r\n        }\r\n        console.log(movable_points_in_this_row);\r\n        return movable_points_in_this_row;\r\n    };\r\n    BlackChariot.prototype.isValidChariotPosition = function (x, y) {\r\n        return (y >= 0) && (y <= 10) && (x >= 0) && (x <= 9);\r\n        // && !(x > 0 && y > 0);\r\n    };\r\n    return BlackChariot;\r\n}(Chariot));\r\nexports.BlackChariot = BlackChariot;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PlayerColor = exports.PieceRole = exports.Piece = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\nObject.defineProperty(exports, \"PlayerColor\", { enumerable: true, get: function () { return frontend_utils_1.PlayerColor; } });\r\n// used in class Piece\r\n// 棋子颜色\r\n// enum PlayerColor {\r\n//     'BLACK',\r\n//     'RED'\r\n// }\r\n// used in class Game, \r\n// 玩家颜色\r\n// enum PlayerColor {\r\n//     'BLACK',\r\n//     'RED'\r\n// }\r\n// 棋子类型\r\nvar PieceRole;\r\n(function (PieceRole) {\r\n    PieceRole[PieceRole[\"General\"] = 0] = \"General\";\r\n    PieceRole[PieceRole[\"Advisor\"] = 1] = \"Advisor\";\r\n    PieceRole[PieceRole[\"Elephant\"] = 2] = \"Elephant\";\r\n    PieceRole[PieceRole[\"Chariot\"] = 3] = \"Chariot\";\r\n    PieceRole[PieceRole[\"Horse\"] = 4] = \"Horse\";\r\n    PieceRole[PieceRole[\"Cannon\"] = 5] = \"Cannon\";\r\n    PieceRole[PieceRole[\"FootSoldier\"] = 6] = \"FootSoldier\";\r\n})(PieceRole || (PieceRole = {}));\r\nexports.PieceRole = PieceRole;\r\nvar Piece = /** @class */ (function () {\r\n    function Piece(point, board, role, color) {\r\n        // 与移动相关      \r\n        this.point = point; // 被置于某个点\r\n        // this.has_moved = false;                           // 是否已经被移动\r\n        this.active = false; // 是否被选中\r\n        // 与棋子属性相关\r\n        this.board = board;\r\n        this.piece_role = role;\r\n        this.color = color;\r\n        this.elem = document.createElement(\"img\");\r\n        // 与棋子大小有关\r\n        this.ratio = 100; // TODO:放大倍率 ?\r\n        this.side_length = this.ratio * 0.01 * frontend_utils_1.SIDE_LENGTH; // 棋子的边长\r\n        // 0 -> not selected\r\n        // 1 -> selected, not moved\r\n        // 2 -> moved, refesh state to 0\r\n        this.state = 0;\r\n        $(window).on('mousedown', function (e) {\r\n            e.preventDefault(); //get rid of non-game experience (selecting pictures and stuff)\r\n        });\r\n        $(window).on('change', function (e) {\r\n            e.preventDefault(); //get rid of non-game experience (selecting pictures and stuff)\r\n            console.log('changed');\r\n        });\r\n        // 运行这个，就会把所有的Listener都加上\r\n        this.listenerManager();\r\n    }\r\n    Piece.prototype.listenerManager = function () {\r\n        this.attachSelectPieceListener();\r\n        // this.attachMoveToGridListener()\r\n        // this.removeMoveToGridListener()\r\n    };\r\n    /**\r\n     *  I. When the player clicks on a piece,\r\n     *  The listener invokes the method to determine movable grids,\r\n     *  then it highlights all the grids\r\n     */\r\n    Piece.prototype.attachSelectPieceListener = function () {\r\n        var _this = this;\r\n        console.log(\"attachSelectPieceListener, check active:\");\r\n        console.log(this.board.active_piece);\r\n        // TODO：需要写一个逻辑，判断是否之前已经点过一个棋子\r\n        // 点击了棋子的img之后\r\n        $(this.elem).on('click', function (e) {\r\n            if (_this.board.active_piece) {\r\n                console.log(\"其他棋子还没走呢！\");\r\n            }\r\n            else {\r\n                console.log(\"其他棋子走过了\");\r\n                console.log('点击了棋子：');\r\n                console.log(_this.elem);\r\n                e.preventDefault();\r\n                // 1. clearing all the colored background first:\r\n                $('.className_grid_div').css('background', 'rgba(3, 181, 252,0.0)');\r\n                // 2. put all the movalbe positions into an array\r\n                var movable_points = [];\r\n                movable_points = _this.movablePoints();\r\n                // console.log(movable_points)\r\n                // 3. highlight all the movalbe positions\r\n                // If the currentPlayer's color is the same as the piece color   \r\n                if (_this.getCurrentPlayer() == _this.color) {\r\n                    movable_points.forEach(function (point) {\r\n                        $(point.elem).css('background', 'rgba(3, 181, 252,0.5');\r\n                    });\r\n                }\r\n                // 设置自己被选中，告知棋盘选中的是自己\r\n                _this.active = true;\r\n                _this.board.active_piece = _this;\r\n                // TODO:找到ListenerManager的问题所在，并且把这个移动到那里面。\r\n                // 下一步是Move To Grid\r\n                setTimeout(function () {\r\n                    _this.attachMoveToGridListener();\r\n                }, 100);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     *  The user has selected a piece in step I.\r\n     *\r\n     *  II. once the user has selected the piece,\r\n     *  a listener is attached to the grid to check\r\n     *  which grid the user is moving to\r\n     *\r\n     *\r\n     *  在I中玩家已经选择了棋子\r\n     *\r\n     *  II.\r\n     *  在用attachSelectPieceListener()选择了棋子之后,\r\n     *  再用attachMoveToGridListener() 选择移动到哪个格子\r\n     */\r\n    Piece.prototype.attachMoveToGridListener = function () {\r\n        var _this = this;\r\n        console.log(this.point);\r\n        //1. attach another listener which listens to the next click:\r\n        $('.className_grid_div').on('click', function (e) {\r\n            console.log(\"点击了棋子:\");\r\n            console.log(e.target);\r\n            console.log(e.target.tagName);\r\n            console.log(\"\\u68CB\\u5B50\\u6240\\u5728\\u7684\\u683C\\u5B50:\");\r\n            console.log(e.target.parentNode);\r\n            console.log(e.target.parentElement);\r\n            // ① if the piece is selected, then go on and see if the grid is moveable\r\n            // ① 如果已经选择了某个棋子，判断是否能够走\r\n            if (_this.board.active_piece && // Condition #1 : 选中了棋子\r\n                _this.board.game.getCurrentPlayer() == _this.color) { // Condition #2 : 是当前玩家走\r\n                console.log('the piece is selected?' + _this.active);\r\n                console.log(\"active piece:\");\r\n                console.log(_this.board.active_piece);\r\n                console.log(_this.board.target_coordinate);\r\n                // 如果点击的是棋子，而不是空的格子\r\n                // 判断条件：HTML元素是IMG而不是DIV\r\n                if ((e.target.tagName).toUpperCase() == 'IMG') {\r\n                    console.log(\"点击了另一个棋子\");\r\n                    var parentNode = e.target.parentElement;\r\n                    if (parentNode != null) {\r\n                        console.log(\"棋子所在的格子：\");\r\n                        console.log(parentNode);\r\n                        // 记录下一步要走的坐标\r\n                        _this.board.target_coordinate = _this.board.getCoordinateFromElemId(parentNode.id);\r\n                    }\r\n                }\r\n                else {\r\n                    console.log(\"点击了一个空的格子\");\r\n                    _this.board.target_coordinate = _this.board.getCoordinateFromElemId(e.target.id);\r\n                }\r\n                console.log(_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]));\r\n                // ①.a 如果不是 [-1, -1], 说明玩家选择了某个格子\r\n                if (_this.board.target_coordinate[0] != -1 && _this.board.target_coordinate[1] != -1) {\r\n                    // 增加一个判断条件，看这个位置是否有棋子\r\n                    // TODO: check if the point's 'piece' key is available at all?\r\n                    if (_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).hasPiece()) {\r\n                        console.log(\"该点有棋子\");\r\n                        console.log(\"=========================== debug =================================\");\r\n                        console.log(_this.isFriendly(_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).getPiece()));\r\n                        // 棋子是自己人的\r\n                        // 那么选中的棋子则换为该棋子\r\n                        if (_this.isFriendly(_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).getPiece())) {\r\n                            alert(\"You Can't Move Here, A Friendly Piece is at this Position\");\r\n                            _this.removeMoveToGridListener();\r\n                            return; //直接结束\r\n                        }\r\n                        // 不是自己人的，要提子\r\n                        // TODO:增加提子逻辑\r\n                        else if (!_this.isFriendly(_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).getPiece())) {\r\n                            // alert(\"正在提子\")\r\n                            // 目标Point中移除piece\r\n                            delete _this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).piece;\r\n                            console.log(\"=========  debug ===========\");\r\n                            console.log(_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]));\r\n                            // 目标Point.elem 移除 HTML元素\r\n                            _this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).elem.innerHTML = '';\r\n                        }\r\n                        else {\r\n                            // 目标Point中移除piece\r\n                            delete _this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).piece;\r\n                            console.log(\"=========  debug ===========\");\r\n                            console.log(_this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]));\r\n                            // 目标Point.elem 移除 HTML元素\r\n                            _this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).elem.innerHTML = '';\r\n                        }\r\n                    }\r\n                    // \r\n                    else {\r\n                        _this.board.getPointFromCoordinates(_this.board.target_coordinate[0], _this.board.target_coordinate[1]).elem.innerHTML = '';\r\n                    }\r\n                    console.log(_this.board.target_coordinate);\r\n                    var next_x_coor = _this.board.target_coordinate[0];\r\n                    var next_y_coor = _this.board.target_coordinate[1];\r\n                    // 棋子属性、Element移动到目标点, 详见moveToPoint\r\n                    _this.board.active_piece.moveToPoint(_this.board.getPointFromCoordinates(next_x_coor, next_y_coor));\r\n                    $('.className_grid_div').css('background', 'rgba(0,0,0,0.0)'); // setting back the background to non-colored and transparent\r\n                    _this.board.target_coordinate = [-1, -1]; // 重新归[-1, -1]\r\n                    _this.active = false; // 棋子状态为不再选中\r\n                    // TODO >>>>>  Remove if not needed anymore <<<<<<<<<\r\n                    // console.log('the piece is selected?' + this.active);\r\n                    // console.log(`active piece:`);\r\n                    // console.log(this.board.active_piece);\r\n                    // console.log(this.board.target_coordinate )\r\n                    _this.board.game.alternatePlayer(); // 切换到下一个玩家\r\n                }\r\n            }\r\n            // ② 还没有选中棋子\r\n            else {\r\n                console.log(\"还没有选择棋子......\");\r\n                console.log('Is the piece is selected? ' + _this.active);\r\n                console.log('Doing nothing...');\r\n                $('.className_grid_div').css('background', 'rgba(0,0,0,0.0)'); // setting back the background to non-colored and transparent\r\n            }\r\n            _this.removeMoveToGridListener();\r\n            // $('.className_grid_div').unbind('click');  // HACK after clicking, we need to get rid of the listener\r\n            // $('.className_grid_div').css('background', 'rgba(0,0,0,0.0)') // setting back the background to non-colored and transparent\r\n        });\r\n    };\r\n    //upon finishing the listener, it removes the listener from the grid\r\n    Piece.prototype.removeMoveToGridListener = function () {\r\n        this.board.active_piece = null;\r\n        //4. remove the click listener from the grids\r\n        console.log('已经点击了移动目标格,现在移除MoveToGridListener');\r\n        $('.className_grid_div').off('click'); // after clicking, we need to get rid of the listener\r\n        $('.className_grid_div').css('background', 'rgba(0,0,0,0.0)'); // setting back the background to non-colored and transparent\r\n    };\r\n    Piece.prototype.movablePoints = function () {\r\n        Util_1.default.trace('movable points of a piece');\r\n        return [];\r\n    };\r\n    Piece.prototype.getElement = function () {\r\n        return this.elem;\r\n    };\r\n    //sets the point of the piece\r\n    Piece.prototype.moveToPoint = function (point) {\r\n        // 删除原来的元素\r\n        this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].elem.removeChild(this.elem);\r\n        delete this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].piece;\r\n        // console.log(\"===================== debug ==============================\");\r\n        // console.log(this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1])\r\n        // 更换到新的点\r\n        this.point = point;\r\n        this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].elem.appendChild(this.elem);\r\n        this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].piece = this;\r\n        console.log(this.board.intersections);\r\n        console.log(this.point);\r\n        console.log(this.point.x_coor);\r\n        console.log(this.point.y_coor);\r\n    };\r\n    // ========= Getter & Setters =========================================\r\n    /**\r\n     * 获取棋子的类型\r\n     * Get Piece Role\r\n     */\r\n    Piece.prototype.getRole = function () {\r\n        return this.piece_role;\r\n    };\r\n    /**\r\n     * 获取棋子的颜色\r\n     * Get Piece Color\r\n     */\r\n    Piece.prototype.getColor = function () {\r\n        return this.color;\r\n    };\r\n    Piece.prototype.getCurrentPlayer = function () {\r\n        return this.board.game.getCurrentPlayer();\r\n    };\r\n    // \r\n    // ------------------ 下一目标点 ------------------------\r\n    // 目标点的坐标\r\n    Piece.prototype.getTargetPointCoordinate = function () {\r\n        return this.board.target_coordinate;\r\n    };\r\n    // 获得目标点的 X 坐标\r\n    Piece.prototype.getTargetPointXCoordinate = function () {\r\n        return this.board.target_coordinate[0];\r\n    };\r\n    // 获得目标点的 Y 坐标\r\n    Piece.prototype.getTargetPointYCoordinate = function () {\r\n        return this.board.target_coordinate[1];\r\n    };\r\n    /**\r\n     * @param point Check if a point has a piece with the same side\r\n     *\r\n     */\r\n    Piece.prototype.checkSameColorPieceInPoint = function (point) {\r\n        var piece = point.getPiece();\r\n        if (!piece) {\r\n            return false;\r\n        }\r\n        return piece.getColor() === this.color;\r\n    };\r\n    /**\r\n    * @param point Check if a point has a piece with the same side\r\n    */\r\n    Piece.prototype.isFriendly = function (piece) {\r\n        // console.log(piece)\r\n        try {\r\n            if (!piece) {\r\n                console.log(\"没有棋子！\");\r\n            }\r\n            // FIXME：PROBLEM\r\n            return piece.getColor() === this.color;\r\n        }\r\n        catch (e) {\r\n            console.log(\"没有棋子！\");\r\n        }\r\n        return true;\r\n    };\r\n    Piece.prototype.isEnemy = function (piece) {\r\n        if (!piece) {\r\n            return false;\r\n        }\r\n        return piece.getColor() != this.color;\r\n    };\r\n    // 渲染HTML Elements.\r\n    // Render the html elements to the webpage.\r\n    Piece.prototype.render = function () {\r\n        this.board.intersections[this.point.x_coor - 1][this.point.y_coor - 1].elem.append(this.elem); // encapsulates the next line of code;\r\n        $(this.elem).addClass('pieces');\r\n        //add className for the HTML <img> of the piece - PieceRole\r\n        $(this.elem).addClass(PieceRole[this.piece_role].toString());\r\n        //add className for the HTML <img> of the piece - PieceColor\r\n        $(this.elem).addClass(frontend_utils_1.PlayerColor[this.color].toString());\r\n        // $(window).on('resize',Piece.adjustResize);\r\n        // $(this.elem)\r\n        //     .on('mousedown',function () {\r\n        //         isDragging = false;\r\n        //         console.log(isDragging)\r\n        //     })\r\n        //     .on('mousemove',function () {\r\n        //         isDragging = true;\r\n        //         console.log(isDragging)\r\n        //     })\r\n        //     .on('mouseup',function () {\r\n        //         var wasDragging = isDragging;\r\n        //         isDragging = false;\r\n        //         console.log(isDragging)\r\n        //         if (!wasDragging) {\r\n        //             console.log('dragging')\r\n        //             $(\"#throbble\").toggle();\r\n        //         }\r\n        //     });\r\n        // TODO: click events:\r\n    };\r\n    // 调整棋盘、棋子的大小\r\n    Piece.adjustResize = function () {\r\n        if (screen.width == window.innerWidth) {\r\n            console.log(\"at exact 100%\");\r\n            frontend_utils_1.getChessBoardSize(); // 判断棋盘的大小\r\n            $('.className_grid_div').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100)); // 更新棋盘的宽度\r\n            $('.className_grid_div').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100)); // 更新棋盘的高度\r\n            $('.pieces').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100)); // 更新棋子的高度\r\n            $('.pieces').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100)); // 更新棋子的宽度\r\n            $(\"#board\").css(\"width\", $(\"#board\").css('height'));\r\n            $(\"#id_chessboard\").css(\"width\", $(\"#board\").css('width')); // 棋盘的宽度和高度统一 \r\n        }\r\n        else if (screen.width > window.innerWidth) {\r\n            console.log(\"you have zoomed in the page i.e more than 100%\");\r\n            frontend_utils_1.getZoomedRatio();\r\n            frontend_utils_1.getChessBoardSize();\r\n            $('.className_grid_div').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.className_grid_div').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $(\"#board\").css(\"width\", $(\"#board\").css('height'));\r\n            $(\"#id_chessboard\").css(\"width\", $(\"#board\").css('width'));\r\n        }\r\n        else {\r\n            console.log(\"you have zoomed out i.e less than 100%\");\r\n            frontend_utils_1.getZoomedRatio();\r\n            frontend_utils_1.getChessBoardSize();\r\n            var current_width = $('.className_grid_div').css('width');\r\n            $('.className_grid_div').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.className_grid_div').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('width', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $('.pieces').css('height', frontend_utils_1.SIDE_LENGTH * (frontend_utils_1.getZoomedRatio() / 100));\r\n            $(\"#board\").css(\"width\", $(\"#board\").css('height'));\r\n            $(\"#id_chessboard\").css(\"width\", $(\"#board\").css('width'));\r\n        }\r\n    };\r\n    return Piece;\r\n}());\r\nexports.Piece = Piece;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BlackFootSoldier = exports.RedFootSoldier = void 0;\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar FootSoldier = /** @class */ (function (_super) {\r\n    __extends(FootSoldier, _super);\r\n    function FootSoldier(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.General, color) || this;\r\n    }\r\n    /**\r\n     *\r\n     * @param x\r\n     * @param y\r\n     * @returns boolean to indicate if the pass in coordinate is valid general position\r\n     */\r\n    FootSoldier.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the dest is not inside of the \"田\" shaped space of the board\r\n        //Returns false.\r\n        // if (!this.isValidGeneralPosition(x, y))\r\n        //     return false;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    FootSoldier.prototype.isValidFootSoldierPosition = function (targetPoint) {\r\n        return (targetPoint.getY() >= 1) && (targetPoint.getY() <= 10) && (targetPoint.getX() >= 1) && (targetPoint.getX() <= 9);\r\n    };\r\n    return FootSoldier;\r\n}(ChessPiece_1.Piece));\r\nvar RedFootSoldier = /** @class */ (function (_super) {\r\n    __extends(RedFootSoldier, _super);\r\n    function RedFootSoldier(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.RED) || this;\r\n        _this.elem.src = '../img/pieces/red-bing.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    RedFootSoldier.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        if (this.point.getY() <= 5) {\r\n            console.log(\"过河后\");\r\n            moveable_points = moveable_points.concat(this.afterLanding());\r\n        }\r\n        else if (this.point.getY() >= 6) {\r\n            console.log(\"过河前\");\r\n            moveable_points = moveable_points.concat(this.beforeLanding());\r\n        }\r\n        return moveable_points;\r\n    };\r\n    // 渡河之前\r\n    RedFootSoldier.prototype.beforeLanding = function () {\r\n        var X_coor = this.point.getX();\r\n        var Y_coor = this.point.getY();\r\n        var front = this.board.getPointFromCoordinates(X_coor, Y_coor - 1);\r\n        var movable_points_before_landing = [];\r\n        // 面前的格子\r\n        if (front && this.isValidFootSoldierPosition(front)) {\r\n            movable_points_before_landing.push(front);\r\n        }\r\n        return movable_points_before_landing;\r\n    };\r\n    // 渡河以后\r\n    RedFootSoldier.prototype.afterLanding = function () {\r\n        var X_coor = this.point.getX();\r\n        var Y_coor = this.point.getY();\r\n        var front = this.board.getPointFromCoordinates(X_coor, Y_coor - 1);\r\n        // let back = this.board.getPointFromCoordinates(X_coor, Y_coor + 1) // Not one step back!\r\n        var left = this.board.getPointFromCoordinates(X_coor - 1, Y_coor);\r\n        var right = this.board.getPointFromCoordinates(X_coor + 1, Y_coor);\r\n        var movable_points_after_landing = [];\r\n        // 面前的格子\r\n        if (front && this.isValidFootSoldierPosition(front)) {\r\n            movable_points_after_landing.push(front);\r\n        }\r\n        // 左边 \r\n        if (left && this.isValidFootSoldierPosition(left)) {\r\n            console.log('back.getPiece()');\r\n            console.log(left.getPiece());\r\n            movable_points_after_landing.push(left);\r\n        }\r\n        // 右边\r\n        if (right && this.isValidFootSoldierPosition(right)) {\r\n            console.log('back.getPiece()');\r\n            console.log(right.getPiece());\r\n            movable_points_after_landing.push(right);\r\n        }\r\n        return movable_points_after_landing;\r\n    };\r\n    return RedFootSoldier;\r\n}(FootSoldier));\r\nexports.RedFootSoldier = RedFootSoldier;\r\nvar BlackFootSoldier = /** @class */ (function (_super) {\r\n    __extends(BlackFootSoldier, _super);\r\n    function BlackFootSoldier(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.BLACK) || this;\r\n        _this.elem.src = '../img/pieces/black-zu.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    BlackFootSoldier.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        if (this.point.getY() <= 5) {\r\n            console.log(\"过河前\");\r\n            moveable_points = moveable_points.concat(this.beforeLanding());\r\n        }\r\n        else if (this.point.getY() >= 6) {\r\n            console.log(\"过河后\");\r\n            moveable_points = moveable_points.concat(this.afterLanding());\r\n        }\r\n        return moveable_points;\r\n    };\r\n    // 渡河之前\r\n    BlackFootSoldier.prototype.beforeLanding = function () {\r\n        var X_coor = this.point.getX();\r\n        var Y_coor = this.point.getY();\r\n        var front = this.board.getPointFromCoordinates(X_coor, Y_coor + 1);\r\n        var movable_points_before_landing = [];\r\n        // 面前的格子\r\n        if (front && this.isValidFootSoldierPosition(front)) {\r\n            movable_points_before_landing.push(front);\r\n        }\r\n        return movable_points_before_landing;\r\n    };\r\n    // 渡河以后\r\n    BlackFootSoldier.prototype.afterLanding = function () {\r\n        var X_coor = this.point.getX();\r\n        var Y_coor = this.point.getY();\r\n        var front = this.board.getPointFromCoordinates(X_coor, Y_coor + 1);\r\n        // let back = this.board.getPointFromCoordinates(X_coor, Y_coor + 1) // Not one step back!\r\n        var left = this.board.getPointFromCoordinates(X_coor - 1, Y_coor);\r\n        var right = this.board.getPointFromCoordinates(X_coor + 1, Y_coor);\r\n        var movable_points_after_landing = [];\r\n        // 面前的格子\r\n        if (front && this.isValidFootSoldierPosition(front)) {\r\n            movable_points_after_landing.push(front);\r\n        }\r\n        // 左边 \r\n        if (left && this.isValidFootSoldierPosition(left)) {\r\n            console.log('back.getPiece()');\r\n            console.log(left.getPiece());\r\n            movable_points_after_landing.push(left);\r\n        }\r\n        // 右边\r\n        if (right && this.isValidFootSoldierPosition(right)) {\r\n            console.log('back.getPiece()');\r\n            console.log(right.getPiece());\r\n            movable_points_after_landing.push(right);\r\n        }\r\n        return movable_points_after_landing;\r\n    };\r\n    return BlackFootSoldier;\r\n}(FootSoldier));\r\nexports.BlackFootSoldier = BlackFootSoldier;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Game = void 0;\r\nvar Boards_1 = require(\"./Boards\");\r\nvar Chariot_1 = require(\"./Chariot\");\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\nvar General_1 = require(\"./General\");\r\nvar Cannon_1 = require(\"./Cannon\");\r\n'./Cannon';\r\nvar FootSoldier_1 = require(\"./FootSoldier\");\r\nvar Advisor_1 = require(\"./Advisor\");\r\nvar Game = /** @class */ (function () {\r\n    function Game() {\r\n        this.currentPlayer = frontend_utils_1.PlayerColor.RED;\r\n        this.board = new Boards_1.Board(this);\r\n    }\r\n    // gets the public player\r\n    // 获取当前玩家\r\n    Game.prototype.getCurrentPlayer = function () {\r\n        return this.currentPlayer;\r\n    };\r\n    //Switch current player to the other player\r\n    //到另一个人下\r\n    Game.prototype.alternatePlayer = function () {\r\n        if (this.currentPlayer === frontend_utils_1.PlayerColor.RED)\r\n            this.currentPlayer = frontend_utils_1.PlayerColor.BLACK;\r\n        else\r\n            this.currentPlayer = frontend_utils_1.PlayerColor.RED;\r\n    };\r\n    Game.prototype.render = function () {\r\n        this.board.render(); // 渲染棋盘\r\n        // ============================= 棋子初始化 Initialization of ChessPieces =====================================================\r\n        //                               先横坐标后纵坐标\r\n        //                              1 2 3 4 5 6 7 8 9\r\n        //                              2\r\n        //                              3\r\n        //                              4\r\n        //                              5\r\n        //                              6\r\n        //                              7\r\n        //                              8\r\n        //                              9\r\n        //                              10\r\n        // 将/帅   Generals:\r\n        var red_shuai = new General_1.RedGeneral(this.board, this.board.getPointFromCoordinates(5, 10)); //new Point() doesn't make sense.\r\n        red_shuai.render();\r\n        var black_jiang = new General_1.BlackGeneral(this.board, this.board.getPointFromCoordinates(5, 1)); // using getPoint from coor now\r\n        black_jiang.render();\r\n        // 红车    Red Chariots\r\n        var red_ju_one = new Chariot_1.RedChariot(this.board, this.board.getPointFromCoordinates(1, 10));\r\n        var red_ju_two = new Chariot_1.RedChariot(this.board, this.board.getPointFromCoordinates(9, 10));\r\n        // let red_ju_test = new RedChariot(this.board, this.board.getPointFromCoordinates(9,3));\r\n        // let red_ju_test2 = new RedChariot(this.board, this.board.getPointFromCoordinates(9,4));\r\n        // 黑车  Black Chariots\r\n        var black_ju_one = new Chariot_1.BlackChariot(this.board, this.board.getPointFromCoordinates(1, 1));\r\n        var black_ju_two = new Chariot_1.BlackChariot(this.board, this.board.getPointFromCoordinates(9, 1));\r\n        // 红炮 RedCannons\r\n        var red_cannon_one = new Cannon_1.RedCannon(this.board, this.board.getPointFromCoordinates(8, 3));\r\n        var red_cannon_two = new Cannon_1.RedCannon(this.board, this.board.getPointFromCoordinates(8, 4));\r\n        // 黑炮 BlackCannon\r\n        var black_cannon_one = new Cannon_1.BlackCannon(this.board, this.board.getPointFromCoordinates(2, 3));\r\n        var black_cannon_two = new Cannon_1.BlackCannon(this.board, this.board.getPointFromCoordinates(2, 4));\r\n        // 兵、卒 FOOTSOLDIERS\r\n        var red_bing_one = new FootSoldier_1.RedFootSoldier(this.board, this.board.getPointFromCoordinates(1, 7));\r\n        var black_zu_one = new FootSoldier_1.BlackFootSoldier(this.board, this.board.getPointFromCoordinates(1, 4));\r\n        // 红士 RedAdvisor\r\n        var red_advisor_one = new Advisor_1.RedAdvisor(this.board, this.board.getPointFromCoordinates(4, 10));\r\n        var red_advisor_two = new Advisor_1.RedAdvisor(this.board, this.board.getPointFromCoordinates(6, 10));\r\n        // 黑仕 BlackAdvisor\r\n        var black_advisor_one = new Advisor_1.BlackAdvisor(this.board, this.board.getPointFromCoordinates(4, 1));\r\n        var black_advisor_two = new Advisor_1.BlackAdvisor(this.board, this.board.getPointFromCoordinates(6, 1));\r\n        // ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ 棋子初始化 Initialization of ChessPieces ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n        // 红车\r\n        red_ju_one.render();\r\n        red_ju_two.render();\r\n        // 黑车\r\n        black_ju_one.render();\r\n        black_ju_two.render();\r\n        // 炮\r\n        red_cannon_one.render();\r\n        red_cannon_two.render();\r\n        black_cannon_one.render();\r\n        black_cannon_two.render();\r\n        // 红兵\r\n        red_bing_one.render();\r\n        // 黑兵\r\n        black_zu_one.render();\r\n        // \r\n        red_advisor_one.render();\r\n        red_advisor_two.render();\r\n        black_advisor_one.render();\r\n        black_advisor_two.render();\r\n    };\r\n    return Game;\r\n}());\r\nexports.Game = Game;\r\nvar game = new Game();\r\ngame.render();\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.BlackGeneral = exports.RedGeneral = void 0;\r\nvar ChessPiece_1 = require(\"./ChessPiece\");\r\nvar frontend_utils_1 = require(\"./frontend-utils\");\r\nvar General = /** @class */ (function (_super) {\r\n    __extends(General, _super);\r\n    function General(point, board, color) {\r\n        return _super.call(this, point, board, ChessPiece_1.PieceRole.General, color) || this;\r\n    }\r\n    General.prototype.canMove = function (dest) {\r\n        var x = dest.x_coor;\r\n        var y = dest.y_coor;\r\n        //If the dest is not inside of the \"田\" shaped space of the board\r\n        //Returns false.\r\n        // if (!this.isValidGeneralPosition(x, y))\r\n        //     return false;\r\n        //If the place is outside of reach from the General,\r\n        //It returns false.\r\n        if (Math.abs(x - this.point.x_coor) > 1 || Math.abs(y - this.point.y_coor) > 1)\r\n            return false;\r\n        // We will add more logic for checking valid move later\r\n        // Current check is only for a valid position and no same side piece\r\n        return !_super.prototype.checkSameColorPieceInPoint.call(this, dest);\r\n    };\r\n    return General;\r\n}(ChessPiece_1.Piece));\r\nvar RedGeneral = /** @class */ (function (_super) {\r\n    __extends(RedGeneral, _super);\r\n    function RedGeneral(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.RED) || this;\r\n        _this.elem.src = '../img/pieces/red-shuai.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    RedGeneral.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        moveable_points = moveable_points.concat(this.checkPeriphery());\r\n        return moveable_points;\r\n    };\r\n    //returns the grids that General can go in a column\r\n    RedGeneral.prototype.checkPeriphery = function () {\r\n        var Y_coor = this.point.y_coor;\r\n        var X_coor = this.point.x_coor;\r\n        var front = this.board.getPointFromCoordinates(X_coor, Y_coor - 1);\r\n        var back = this.board.getPointFromCoordinates(X_coor, Y_coor + 1); //out of bound err\r\n        var left = this.board.getPointFromCoordinates(X_coor - 1, Y_coor);\r\n        var right = this.board.getPointFromCoordinates(X_coor + 1, Y_coor);\r\n        var movable_points_in_this_column = [];\r\n        //  __ __   \r\n        // |__|__|\r\n        // |__|__|\r\n        // \r\n        console.log(\"+++++++++++++ debug +++++++++++++++++++++++\");\r\n        // 面前的格子\r\n        if (front && this.isValidGeneralPosition(front)) {\r\n            console.log('front.getPiece()');\r\n            console.log(front.getPiece());\r\n            movable_points_in_this_column.push(front);\r\n        }\r\n        if (back && this.isValidGeneralPosition(back)) {\r\n            console.log('back.getPiece()');\r\n            console.log(back.getPiece());\r\n            movable_points_in_this_column.push(back);\r\n        }\r\n        if (left && this.isValidGeneralPosition(left)) {\r\n            console.log('back.getPiece()');\r\n            console.log(left.getPiece());\r\n            movable_points_in_this_column.push(left);\r\n        }\r\n        if (right && this.isValidGeneralPosition(right)) {\r\n            console.log('back.getPiece()');\r\n            console.log(right.getPiece());\r\n            movable_points_in_this_column.push(right);\r\n        }\r\n        return movable_points_in_this_column;\r\n    };\r\n    RedGeneral.prototype.isValidGeneralPosition = function (targetPoint) {\r\n        console.log('isValidGeneralPosition +++++++++++');\r\n        console.log(targetPoint);\r\n        console.log(targetPoint.getX());\r\n        console.log(targetPoint.getY());\r\n        // 外层if表示田字的横坐标范围\r\n        if (targetPoint.getX() - 1 >= 3 && targetPoint.getX() - 1 <= 5) {\r\n            // 内层是纵坐标范围\r\n            if (targetPoint.getY() - 1 >= 7 && targetPoint.getY() - 1 <= 9) {\r\n                return true;\r\n            }\r\n        }\r\n        // 以上条件不满足，则return false.\r\n        return false;\r\n    };\r\n    return RedGeneral;\r\n}(General));\r\nexports.RedGeneral = RedGeneral;\r\nvar BlackGeneral = /** @class */ (function (_super) {\r\n    __extends(BlackGeneral, _super);\r\n    function BlackGeneral(board, point) {\r\n        var _this = _super.call(this, point, board, ChessPiece_1.PlayerColor.BLACK) || this;\r\n        _this.elem.src = '../img/pieces/black-jiang.png';\r\n        _this.board = board;\r\n        _this.point.setPiece(_this); //sets the piece to the point.\r\n        return _this;\r\n    }\r\n    BlackGeneral.prototype.movablePoints = function () {\r\n        var moveable_points = [];\r\n        moveable_points = moveable_points.concat(this.checkPeriphery());\r\n        return moveable_points;\r\n    };\r\n    BlackGeneral.prototype.checkPeriphery = function () {\r\n        var X_coor = this.point.getX();\r\n        var Y_coor = this.point.getY();\r\n        var front = this.board.getPointFromCoordinates(X_coor, Y_coor - 1);\r\n        var back = new frontend_utils_1.Point(-1, -1);\r\n        try {\r\n            back = this.board.getPointFromCoordinates(X_coor, Y_coor + 1); //out of bound err\r\n        }\r\n        catch (err) {\r\n            console.error(err);\r\n        }\r\n        var left = this.board.getPointFromCoordinates(X_coor - 1, Y_coor);\r\n        var right = this.board.getPointFromCoordinates(X_coor + 1, Y_coor);\r\n        var movable_points_in_this_column = [];\r\n        //  __ __   \r\n        // |__|__|\r\n        // |__|__|\r\n        // \r\n        console.log(\"++++++++++++++++++++++ debug +++++++++++++++++++++++\");\r\n        // 面前的格子\r\n        if (front && this.isValidGeneralPosition(front)) {\r\n            console.log('front.getPiece()');\r\n            console.log(front.getPiece());\r\n            movable_points_in_this_column.push(front);\r\n        }\r\n        if (back && this.isValidGeneralPosition(back)) {\r\n            console.log('back.getPiece()');\r\n            console.log(back.getPiece());\r\n            movable_points_in_this_column.push(back);\r\n        }\r\n        if (left && this.isValidGeneralPosition(left)) {\r\n            console.log('back.getPiece()');\r\n            console.log(left.getPiece());\r\n            movable_points_in_this_column.push(left);\r\n        }\r\n        if (right && this.isValidGeneralPosition(right)) {\r\n            console.log('back.getPiece()');\r\n            console.log(right.getPiece());\r\n            movable_points_in_this_column.push(right);\r\n        }\r\n        return movable_points_in_this_column;\r\n    };\r\n    BlackGeneral.prototype.isValidGeneralPosition = function (targetPoint) {\r\n        console.log('isValidGeneralPosition +++++++++++');\r\n        console.log(targetPoint);\r\n        console.log(targetPoint.getX());\r\n        console.log(targetPoint.getY());\r\n        // 外层if表示田字的横坐标范围\r\n        if (targetPoint.getX() >= 4 && targetPoint.getX() - 1 <= 6) {\r\n            // 内层是纵坐标范围\r\n            if (targetPoint.getY() >= 1 && targetPoint.getY() <= 3) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    return BlackGeneral;\r\n}(General));\r\nexports.BlackGeneral = BlackGeneral;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.PlayerColor = exports.SIDE_LENGTH_vw = exports.SIDE_LENGTH = exports.Point = exports.fitSize = exports.getChessBoardSize = exports.getZoomedRatio = void 0;\r\nvar Util_1 = __importDefault(require(\"../../src/Util\"));\r\n// // used in class Piece\r\n// enum PieceColor {\r\n//     'black',\r\n//     'red'\r\n// }\r\n// used in class Game, \r\nvar PlayerColor;\r\n(function (PlayerColor) {\r\n    PlayerColor[PlayerColor[\"BLACK\"] = 0] = \"BLACK\";\r\n    PlayerColor[PlayerColor[\"RED\"] = 1] = \"RED\";\r\n    PlayerColor[PlayerColor[\"NEUTRAL\"] = 2] = \"NEUTRAL\";\r\n    PlayerColor[PlayerColor[\"SPECTATOR\"] = 3] = \"SPECTATOR\"; // Cannot control either side. 双方都不可以控制\r\n})(PlayerColor || (PlayerColor = {}));\r\nexports.PlayerColor = PlayerColor;\r\n// 得到当前的放大倍率\r\nfunction getZoomedRatio() {\r\n    var ratio = 0;\r\n    if (window.devicePixelRatio !== undefined) {\r\n        ratio = window.devicePixelRatio;\r\n    }\r\n    else if (window.outerWidth !== undefined && window.innerWidth !== undefined) {\r\n        ratio = window.outerWidth / window.innerWidth;\r\n    }\r\n    if (ratio) {\r\n        ratio = Math.round(ratio * 100);\r\n    }\r\n    return ratio;\r\n}\r\nexports.getZoomedRatio = getZoomedRatio;\r\n// 得到棋盘的当前大小\r\nfunction getChessBoardSize() {\r\n    Util_1.default.trace('chessboard size:');\r\n    var chessboard = $('#id_chessboard');\r\n    Util_1.default.trace('chessboad width');\r\n    Util_1.default.trace(chessboard.css('width'));\r\n    Util_1.default.trace('chessboad height');\r\n    Util_1.default.trace(chessboard.css('height'));\r\n}\r\nexports.getChessBoardSize = getChessBoardSize;\r\n// The vertical lines are known as files (Chinese: 路; pinyin: lù; \"road\")\r\n// the horizontal lines are known as ranks 线 xiàn; \"line\"\r\nvar Point = /** @class */ (function () {\r\n    function Point(col, row) {\r\n        // this.board = board;\r\n        this.x_coor = col; //col -> verticle\r\n        this.y_coor = row; //row -> horizontal\r\n        // A dummy element for initialization first and then update in method\r\n        this.elem = document.createElement('div');\r\n        this.updateElement(col, row);\r\n    }\r\n    /** when piece moves in\r\n        it binds the piece with the grid.\r\n        notice when the piece is moving out from a grid\r\n        the piece should be set to null.\r\n        @param piece: a nullable Piece object\r\n    */\r\n    Point.prototype.setPiece = function (piece) {\r\n        this.piece = piece;\r\n    };\r\n    // 判断点上是否有棋子\r\n    Point.prototype.hasPiece = function () {\r\n        return this.piece ? true : false;\r\n    };\r\n    //gets the piece in the current grid\r\n    Point.prototype.getPiece = function () {\r\n        return this.piece;\r\n    };\r\n    Point.prototype.getX = function () {\r\n        return this.x_coor;\r\n    };\r\n    Point.prototype.getY = function () {\r\n        return this.y_coor;\r\n    };\r\n    // 更新渲染\r\n    Point.prototype.updateElement = function (newCol, newRow) {\r\n        var grid_div = this.elem;\r\n        var oldCol = this.x_coor;\r\n        var oldRow = this.y_coor;\r\n        /* code previously found in board initialization, with div_2d_array\r\n           now divs are bound to specific points.\r\n        */\r\n        grid_div.id = \"grid_div_\" + oldCol + \"_\" + oldRow;\r\n        $(\"#\" + grid_div.id).remove(); //must remove the original one, in order to make it unique.\r\n        grid_div.className = 'className_grid_div';\r\n        $(grid_div).css('grid-column', newCol);\r\n        $(grid_div).css('grid-row', newRow);\r\n        $('#board').append(grid_div);\r\n        // this.board.intersections[newCol-1][newRow-1] = this; //replace the original point with the newly updated point.\r\n    };\r\n    return Point;\r\n}());\r\nexports.Point = Point;\r\n//how many px when it's zoomed 100%\r\nvar SIDE_LENGTH = 75;\r\nexports.SIDE_LENGTH = SIDE_LENGTH;\r\nvar SIDE_LENGTH_vw = 70 / (getZoomedRatio() * 0.01);\r\nexports.SIDE_LENGTH_vw = SIDE_LENGTH_vw;\r\n/**\r\n * 固定大小用的function\r\n *\r\n*/\r\nfunction fitSize() {\r\n    var board = $('#board');\r\n    $.when(board)\r\n        //fiting size for the board\r\n        .then(function () {\r\n        console.log('background-size');\r\n        console.log(board.css('background-size'));\r\n        board.css('width', board.css('height'));\r\n        board.css('height', board.css('width'));\r\n        // board.css('row-gap','0px')\r\n        board.css('column-gap', '0px');\r\n        console.log(board.css('row-gap'));\r\n    })\r\n        //fiting sizes for the grids\r\n        .then(function () {\r\n        $('.className_grid_div').css('width', parseInt(board.css('width')) / 11);\r\n        $('.className_grid_div').css('height', parseInt(board.css('height')) / 10);\r\n        $('.className_grid_div').css('z-index', 10);\r\n        $('.className_grid_div').css('margin', 0);\r\n    })\r\n        //fiting sizes for the pieces\r\n        .then(function () {\r\n        $('.pieces').css('width', parseInt($('.className_grid_div').css('width')));\r\n        $('.pieces').css('height', parseInt($('.className_grid_div').css('width')));\r\n    })\r\n        .then(function () {\r\n        board.css('max-width', board.css('height'));\r\n    });\r\n}\r\nexports.fitSize = fitSize;\r\n","\"use strict\";\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Log = /** @class */ (function () {\r\n    function Log() {\r\n    }\r\n    Log.trace = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.log.apply(console, __spreadArrays([\"<T> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.info = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.info.apply(console, __spreadArrays([\"<I> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.warn = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.warn.apply(console, __spreadArrays([\"<W> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.error = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.error.apply(console, __spreadArrays([\"<E> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    Log.test = function () {\r\n        var msg = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            msg[_i] = arguments[_i];\r\n        }\r\n        console.log.apply(console, __spreadArrays([\"<X> \" + new Date().toLocaleString() + \":\"], msg));\r\n    };\r\n    return Log;\r\n}());\r\nexports.default = Log;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module\n__webpack_require__(20);\n// This entry module used 'exports' so it can't be inlined\n"],"sourceRoot":""}